// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots at
// 2019-05-24 10:15:27.630300518 -0500 CDT m=+0.000216236
package main

import (
	"runtime"

	"github.com/aws/aws-sdk-go-v2/service/acm"
	"github.com/aws/aws-sdk-go-v2/service/acmpca"
	"github.com/aws/aws-sdk-go-v2/service/alexaforbusiness"
	"github.com/aws/aws-sdk-go-v2/service/amplify"
	"github.com/aws/aws-sdk-go-v2/service/applicationautoscaling"
	"github.com/aws/aws-sdk-go-v2/service/applicationdiscoveryservice"
	"github.com/aws/aws-sdk-go-v2/service/appmesh"
	"github.com/aws/aws-sdk-go-v2/service/appstream"
	"github.com/aws/aws-sdk-go-v2/service/appsync"
	"github.com/aws/aws-sdk-go-v2/service/athena"
	"github.com/aws/aws-sdk-go-v2/service/autoscaling"
	"github.com/aws/aws-sdk-go-v2/service/autoscalingplans"
	"github.com/aws/aws-sdk-go-v2/service/batch"
	"github.com/aws/aws-sdk-go-v2/service/budgets"
	"github.com/aws/aws-sdk-go-v2/service/chime"
	"github.com/aws/aws-sdk-go-v2/service/cloud9"
	"github.com/aws/aws-sdk-go-v2/service/clouddirectory"
	"github.com/aws/aws-sdk-go-v2/service/cloudfront"
	"github.com/aws/aws-sdk-go-v2/service/cloudhsm"
	"github.com/aws/aws-sdk-go-v2/service/cloudhsmv2"
	"github.com/aws/aws-sdk-go-v2/service/cloudsearch"
	"github.com/aws/aws-sdk-go-v2/service/cloudtrail"
	"github.com/aws/aws-sdk-go-v2/service/cloudwatch"
	"github.com/aws/aws-sdk-go-v2/service/cloudwatchevents"
	"github.com/aws/aws-sdk-go-v2/service/cloudwatchlogs"
	"github.com/aws/aws-sdk-go-v2/service/codebuild"
	"github.com/aws/aws-sdk-go-v2/service/codecommit"
	"github.com/aws/aws-sdk-go-v2/service/codedeploy"
	"github.com/aws/aws-sdk-go-v2/service/codepipeline"
	"github.com/aws/aws-sdk-go-v2/service/codestar"
	"github.com/aws/aws-sdk-go-v2/service/cognitoidentity"
	"github.com/aws/aws-sdk-go-v2/service/cognitoidentityprovider"
	"github.com/aws/aws-sdk-go-v2/service/cognitosync"
	"github.com/aws/aws-sdk-go-v2/service/comprehend"
	"github.com/aws/aws-sdk-go-v2/service/configservice"
	"github.com/aws/aws-sdk-go-v2/service/connect"
	"github.com/aws/aws-sdk-go-v2/service/costandusagereportservice"
	"github.com/aws/aws-sdk-go-v2/service/databasemigrationservice"
	"github.com/aws/aws-sdk-go-v2/service/datapipeline"
	"github.com/aws/aws-sdk-go-v2/service/datasync"
	"github.com/aws/aws-sdk-go-v2/service/dax"
	"github.com/aws/aws-sdk-go-v2/service/devicefarm"
	"github.com/aws/aws-sdk-go-v2/service/directconnect"
	"github.com/aws/aws-sdk-go-v2/service/directoryservice"
	"github.com/aws/aws-sdk-go-v2/service/dynamodb"
	"github.com/aws/aws-sdk-go-v2/service/dynamodbstreams"
	"github.com/aws/aws-sdk-go-v2/service/ec2"
	"github.com/aws/aws-sdk-go-v2/service/ecr"
	"github.com/aws/aws-sdk-go-v2/service/ecs"
	"github.com/aws/aws-sdk-go-v2/service/efs"
	"github.com/aws/aws-sdk-go-v2/service/eks"
	"github.com/aws/aws-sdk-go-v2/service/elasticache"
	"github.com/aws/aws-sdk-go-v2/service/elasticbeanstalk"
	"github.com/aws/aws-sdk-go-v2/service/elasticsearchservice"
	"github.com/aws/aws-sdk-go-v2/service/elastictranscoder"
	"github.com/aws/aws-sdk-go-v2/service/elb"
	"github.com/aws/aws-sdk-go-v2/service/elbv2"
	"github.com/aws/aws-sdk-go-v2/service/emr"
	"github.com/aws/aws-sdk-go-v2/service/firehose"
	"github.com/aws/aws-sdk-go-v2/service/fms"
	"github.com/aws/aws-sdk-go-v2/service/fsx"
	"github.com/aws/aws-sdk-go-v2/service/gamelift"
	"github.com/aws/aws-sdk-go-v2/service/glacier"
	"github.com/aws/aws-sdk-go-v2/service/globalaccelerator"
	"github.com/aws/aws-sdk-go-v2/service/greengrass"
	"github.com/aws/aws-sdk-go-v2/service/guardduty"
	"github.com/aws/aws-sdk-go-v2/service/health"
	"github.com/aws/aws-sdk-go-v2/service/iam"
	"github.com/aws/aws-sdk-go-v2/service/inspector"
	"github.com/aws/aws-sdk-go-v2/service/iot"
	"github.com/aws/aws-sdk-go-v2/service/iot1clickdevicesservice"
	"github.com/aws/aws-sdk-go-v2/service/iot1clickprojects"
	"github.com/aws/aws-sdk-go-v2/service/iotanalytics"
	"github.com/aws/aws-sdk-go-v2/service/iotjobsdataplane"
	"github.com/aws/aws-sdk-go-v2/service/kafka"
	"github.com/aws/aws-sdk-go-v2/service/kinesis"
	"github.com/aws/aws-sdk-go-v2/service/kinesisanalytics"
	"github.com/aws/aws-sdk-go-v2/service/kinesisanalyticsv2"
	"github.com/aws/aws-sdk-go-v2/service/kinesisvideo"
	"github.com/aws/aws-sdk-go-v2/service/kinesisvideoarchivedmedia"
	"github.com/aws/aws-sdk-go-v2/service/kms"
	"github.com/aws/aws-sdk-go-v2/service/lambda"
	"github.com/aws/aws-sdk-go-v2/service/licensemanager"
	"github.com/aws/aws-sdk-go-v2/service/machinelearning"
	"github.com/aws/aws-sdk-go-v2/service/macie"
	"github.com/aws/aws-sdk-go-v2/service/mediaconnect"
	"github.com/aws/aws-sdk-go-v2/service/mediaconvert"
	"github.com/aws/aws-sdk-go-v2/service/medialive"
	"github.com/aws/aws-sdk-go-v2/service/mediapackage"
	"github.com/aws/aws-sdk-go-v2/service/mediastore"
	"github.com/aws/aws-sdk-go-v2/service/mediastoredata"
	"github.com/aws/aws-sdk-go-v2/service/mediatailor"
	"github.com/aws/aws-sdk-go-v2/service/migrationhub"
	"github.com/aws/aws-sdk-go-v2/service/mobile"
	"github.com/aws/aws-sdk-go-v2/service/mq"
	"github.com/aws/aws-sdk-go-v2/service/mturk"
	"github.com/aws/aws-sdk-go-v2/service/neptune"
	"github.com/aws/aws-sdk-go-v2/service/opsworks"
	"github.com/aws/aws-sdk-go-v2/service/opsworkscm"
	"github.com/aws/aws-sdk-go-v2/service/organizations"
	"github.com/aws/aws-sdk-go-v2/service/pi"
	"github.com/aws/aws-sdk-go-v2/service/pinpointemail"
	"github.com/aws/aws-sdk-go-v2/service/polly"
	"github.com/aws/aws-sdk-go-v2/service/pricing"
	"github.com/aws/aws-sdk-go-v2/service/quicksight"
	"github.com/aws/aws-sdk-go-v2/service/ram"
	"github.com/aws/aws-sdk-go-v2/service/rds"
	"github.com/aws/aws-sdk-go-v2/service/redshift"
	"github.com/aws/aws-sdk-go-v2/service/rekognition"
	"github.com/aws/aws-sdk-go-v2/service/resourcegroups"
	"github.com/aws/aws-sdk-go-v2/service/robomaker"
	"github.com/aws/aws-sdk-go-v2/service/route53"
	"github.com/aws/aws-sdk-go-v2/service/route53domains"
	"github.com/aws/aws-sdk-go-v2/service/route53resolver"
	"github.com/aws/aws-sdk-go-v2/service/s3"
	"github.com/aws/aws-sdk-go-v2/service/sagemaker"
	"github.com/aws/aws-sdk-go-v2/service/secretsmanager"
	"github.com/aws/aws-sdk-go-v2/service/securityhub"
	"github.com/aws/aws-sdk-go-v2/service/serverlessapplicationrepository"
	"github.com/aws/aws-sdk-go-v2/service/servicecatalog"
	"github.com/aws/aws-sdk-go-v2/service/servicediscovery"
	"github.com/aws/aws-sdk-go-v2/service/ses"
	"github.com/aws/aws-sdk-go-v2/service/sfn"
	"github.com/aws/aws-sdk-go-v2/service/shield"
	"github.com/aws/aws-sdk-go-v2/service/signer"
	"github.com/aws/aws-sdk-go-v2/service/simpledb"
	"github.com/aws/aws-sdk-go-v2/service/sms"
	"github.com/aws/aws-sdk-go-v2/service/snowball"
	"github.com/aws/aws-sdk-go-v2/service/sns"
	"github.com/aws/aws-sdk-go-v2/service/sqs"
	"github.com/aws/aws-sdk-go-v2/service/ssm"
	"github.com/aws/aws-sdk-go-v2/service/storagegateway"
	"github.com/aws/aws-sdk-go-v2/service/support"
	"github.com/aws/aws-sdk-go-v2/service/swf"
	"github.com/aws/aws-sdk-go-v2/service/transcribeservice"
	"github.com/aws/aws-sdk-go-v2/service/transfer"
	"github.com/aws/aws-sdk-go-v2/service/translate"
	"github.com/aws/aws-sdk-go-v2/service/waf"
	"github.com/aws/aws-sdk-go-v2/service/wafregional"
	"github.com/aws/aws-sdk-go-v2/service/workdocs"
	"github.com/aws/aws-sdk-go-v2/service/workmail"
	"github.com/aws/aws-sdk-go-v2/service/workspaces"
)

type r struct {
	resource string
	kind     string
}

var search = map[r]string{
	{resource: "acm", kind: "Certificate"}:        "Describe",
	{resource: "acm", kind: "Certificates"}:       "List",
	{resource: "acm", kind: "TagsForCertificate"}: "List",

	{resource: "acmpca", kind: "CertificateAuthority"}:            "Describe",
	{resource: "acmpca", kind: "CertificateAuthorityAuditReport"}: "Describe",
	{resource: "acmpca", kind: "CertificateAuthorities"}:          "List",
	{resource: "acmpca", kind: "Tags"}:                            "List",

	{resource: "alexaforbusiness", kind: "BusinessReportSchedules"}:     "List",
	{resource: "alexaforbusiness", kind: "ConferenceProviders"}:         "List",
	{resource: "alexaforbusiness", kind: "DeviceEvents"}:                "List",
	{resource: "alexaforbusiness", kind: "Skills"}:                      "List",
	{resource: "alexaforbusiness", kind: "SkillsStoreCategories"}:       "List",
	{resource: "alexaforbusiness", kind: "SkillsStoreSkillsByCategory"}: "List",
	{resource: "alexaforbusiness", kind: "SmartHomeAppliances"}:         "List",
	{resource: "alexaforbusiness", kind: "Tags"}:                        "List",

	{resource: "amplify", kind: "Apps"}:               "List",
	{resource: "amplify", kind: "Branches"}:           "List",
	{resource: "amplify", kind: "DomainAssociations"}: "List",
	{resource: "amplify", kind: "Jobs"}:               "List",

	{resource: "applicationautoscaling", kind: "ScalableTargets"}:   "Describe",
	{resource: "applicationautoscaling", kind: "ScalingActivities"}: "Describe",
	{resource: "applicationautoscaling", kind: "ScalingPolicies"}:   "Describe",
	{resource: "applicationautoscaling", kind: "ScheduledActions"}:  "Describe",

	{resource: "applicationdiscoveryservice", kind: "Agents"}:               "Describe",
	{resource: "applicationdiscoveryservice", kind: "Configurations"}:       "Describe",
	{resource: "applicationdiscoveryservice", kind: "ContinuousExports"}:    "Describe",
	{resource: "applicationdiscoveryservice", kind: "ExportConfigurations"}: "Describe",
	{resource: "applicationdiscoveryservice", kind: "ExportTasks"}:          "Describe",
	{resource: "applicationdiscoveryservice", kind: "Tags"}:                 "Describe",
	{resource: "applicationdiscoveryservice", kind: "Configurations"}:       "List",
	{resource: "applicationdiscoveryservice", kind: "ServerNeighbors"}:      "List",

	{resource: "appmesh", kind: "Mesh"}:           "Describe",
	{resource: "appmesh", kind: "Route"}:          "Describe",
	{resource: "appmesh", kind: "VirtualNode"}:    "Describe",
	{resource: "appmesh", kind: "VirtualRouter"}:  "Describe",
	{resource: "appmesh", kind: "Meshes"}:         "List",
	{resource: "appmesh", kind: "Routes"}:         "List",
	{resource: "appmesh", kind: "VirtualNodes"}:   "List",
	{resource: "appmesh", kind: "VirtualRouters"}: "List",

	{resource: "appstream", kind: "DirectoryConfigs"}:      "Describe",
	{resource: "appstream", kind: "Fleets"}:                "Describe",
	{resource: "appstream", kind: "ImageBuilders"}:         "Describe",
	{resource: "appstream", kind: "ImagePermissions"}:      "Describe",
	{resource: "appstream", kind: "Images"}:                "Describe",
	{resource: "appstream", kind: "Sessions"}:              "Describe",
	{resource: "appstream", kind: "Stacks"}:                "Describe",
	{resource: "appstream", kind: "UserStackAssociations"}: "Describe",
	{resource: "appstream", kind: "Users"}:                 "Describe",
	{resource: "appstream", kind: "AssociatedFleets"}:      "List",
	{resource: "appstream", kind: "AssociatedStacks"}:      "List",
	{resource: "appstream", kind: "TagsForResource"}:       "List",

	{resource: "appsync", kind: "ApiKeys"}:             "List",
	{resource: "appsync", kind: "DataSources"}:         "List",
	{resource: "appsync", kind: "Functions"}:           "List",
	{resource: "appsync", kind: "GraphqlApis"}:         "List",
	{resource: "appsync", kind: "Resolvers"}:           "List",
	{resource: "appsync", kind: "ResolversByFunction"}: "List",
	{resource: "appsync", kind: "Types"}:               "List",

	{resource: "athena", kind: "NamedQueries"}:    "List",
	{resource: "athena", kind: "QueryExecutions"}: "List",

	{resource: "autoscaling", kind: "AccountLimits"}:                "Describe",
	{resource: "autoscaling", kind: "AdjustmentTypes"}:              "Describe",
	{resource: "autoscaling", kind: "AutoScalingGroups"}:            "Describe",
	{resource: "autoscaling", kind: "AutoScalingInstances"}:         "Describe",
	{resource: "autoscaling", kind: "AutoScalingNotificationTypes"}: "Describe",
	{resource: "autoscaling", kind: "LaunchConfigurations"}:         "Describe",
	{resource: "autoscaling", kind: "LifecycleHookTypes"}:           "Describe",
	{resource: "autoscaling", kind: "LifecycleHooks"}:               "Describe",
	{resource: "autoscaling", kind: "LoadBalancerTargetGroups"}:     "Describe",
	{resource: "autoscaling", kind: "LoadBalancers"}:                "Describe",
	{resource: "autoscaling", kind: "MetricCollectionTypes"}:        "Describe",
	{resource: "autoscaling", kind: "NotificationConfigurations"}:   "Describe",
	{resource: "autoscaling", kind: "Policies"}:                     "Describe",
	{resource: "autoscaling", kind: "ScalingActivities"}:            "Describe",
	{resource: "autoscaling", kind: "ScalingProcessTypes"}:          "Describe",
	{resource: "autoscaling", kind: "ScheduledActions"}:             "Describe",
	{resource: "autoscaling", kind: "Tags"}:                         "Describe",
	{resource: "autoscaling", kind: "TerminationPolicyTypes"}:       "Describe",

	{resource: "autoscalingplans", kind: "ScalingPlanResources"}: "Describe",
	{resource: "autoscalingplans", kind: "ScalingPlans"}:         "Describe",

	{resource: "batch", kind: "ComputeEnvironments"}: "Describe",
	{resource: "batch", kind: "JobDefinitions"}:      "Describe",
	{resource: "batch", kind: "JobQueues"}:           "Describe",
	{resource: "batch", kind: "Jobs"}:                "Describe",
	{resource: "batch", kind: "Jobs"}:                "List",

	{resource: "budgets", kind: "Budget"}:                     "Describe",
	{resource: "budgets", kind: "BudgetPerformanceHistory"}:   "Describe",
	{resource: "budgets", kind: "Budgets"}:                    "Describe",
	{resource: "budgets", kind: "NotificationsForBudget"}:     "Describe",
	{resource: "budgets", kind: "SubscribersForNotification"}: "Describe",

	{resource: "chime", kind: "Accounts"}: "List",
	{resource: "chime", kind: "Users"}:    "List",

	{resource: "cloud9", kind: "EnvironmentMemberships"}: "Describe",
	{resource: "cloud9", kind: "EnvironmentStatus"}:      "Describe",
	{resource: "cloud9", kind: "Environments"}:           "Describe",
	{resource: "cloud9", kind: "Environments"}:           "List",

	{resource: "clouddirectory", kind: "AppliedSchemaArns"}:        "List",
	{resource: "clouddirectory", kind: "AttachedIndices"}:          "List",
	{resource: "clouddirectory", kind: "DevelopmentSchemaArns"}:    "List",
	{resource: "clouddirectory", kind: "Directories"}:              "List",
	{resource: "clouddirectory", kind: "FacetAttributes"}:          "List",
	{resource: "clouddirectory", kind: "FacetNames"}:               "List",
	{resource: "clouddirectory", kind: "IncomingTypedLinks"}:       "List",
	{resource: "clouddirectory", kind: "Index"}:                    "List",
	{resource: "clouddirectory", kind: "ManagedSchemaArns"}:        "List",
	{resource: "clouddirectory", kind: "ObjectAttributes"}:         "List",
	{resource: "clouddirectory", kind: "ObjectChildren"}:           "List",
	{resource: "clouddirectory", kind: "ObjectParentPaths"}:        "List",
	{resource: "clouddirectory", kind: "ObjectParents"}:            "List",
	{resource: "clouddirectory", kind: "ObjectPolicies"}:           "List",
	{resource: "clouddirectory", kind: "OutgoingTypedLinks"}:       "List",
	{resource: "clouddirectory", kind: "PolicyAttachments"}:        "List",
	{resource: "clouddirectory", kind: "PublishedSchemaArns"}:      "List",
	{resource: "clouddirectory", kind: "TagsForResource"}:          "List",
	{resource: "clouddirectory", kind: "TypedLinkFacetAttributes"}: "List",
	{resource: "clouddirectory", kind: "TypedLinkFacetNames"}:      "List",

	{resource: "cloudfront", kind: "CloudFrontOriginAccessIdentities"}: "List",
	{resource: "cloudfront", kind: "Distributions"}:                    "List",
	{resource: "cloudfront", kind: "DistributionsByWebACLId"}:          "List",
	{resource: "cloudfront", kind: "FieldLevelEncryptionConfigs"}:      "List",
	{resource: "cloudfront", kind: "FieldLevelEncryptionProfiles"}:     "List",
	{resource: "cloudfront", kind: "Invalidations"}:                    "List",
	{resource: "cloudfront", kind: "PublicKeys"}:                       "List",
	{resource: "cloudfront", kind: "StreamingDistributions"}:           "List",
	{resource: "cloudfront", kind: "TagsForResource"}:                  "List",

	{resource: "cloudhsm", kind: "Hapg"}:            "Describe",
	{resource: "cloudhsm", kind: "Hsm"}:             "Describe",
	{resource: "cloudhsm", kind: "LunaClient"}:      "Describe",
	{resource: "cloudhsm", kind: "AvailableZones"}:  "List",
	{resource: "cloudhsm", kind: "Hapgs"}:           "List",
	{resource: "cloudhsm", kind: "Hsms"}:            "List",
	{resource: "cloudhsm", kind: "LunaClients"}:     "List",
	{resource: "cloudhsm", kind: "TagsForResource"}: "List",

	{resource: "cloudhsmv2", kind: "Backups"}:  "Describe",
	{resource: "cloudhsmv2", kind: "Clusters"}: "Describe",
	{resource: "cloudhsmv2", kind: "Tags"}:     "List",

	{resource: "cloudsearch", kind: "AnalysisSchemes"}:       "Describe",
	{resource: "cloudsearch", kind: "AvailabilityOptions"}:   "Describe",
	{resource: "cloudsearch", kind: "Domains"}:               "Describe",
	{resource: "cloudsearch", kind: "Expressions"}:           "Describe",
	{resource: "cloudsearch", kind: "IndexFields"}:           "Describe",
	{resource: "cloudsearch", kind: "ScalingParameters"}:     "Describe",
	{resource: "cloudsearch", kind: "ServiceAccessPolicies"}: "Describe",
	{resource: "cloudsearch", kind: "Suggesters"}:            "Describe",
	{resource: "cloudsearch", kind: "DomainNames"}:           "List",

	{resource: "cloudtrail", kind: "Trails"}:     "Describe",
	{resource: "cloudtrail", kind: "PublicKeys"}: "List",
	{resource: "cloudtrail", kind: "Tags"}:       "List",

	{resource: "cloudwatch", kind: "AlarmHistory"}:    "Describe",
	{resource: "cloudwatch", kind: "Alarms"}:          "Describe",
	{resource: "cloudwatch", kind: "AlarmsForMetric"}: "Describe",
	{resource: "cloudwatch", kind: "Dashboards"}:      "List",
	{resource: "cloudwatch", kind: "Metrics"}:         "List",

	{resource: "cloudwatchevents", kind: "EventBus"}:          "Describe",
	{resource: "cloudwatchevents", kind: "Rule"}:              "Describe",
	{resource: "cloudwatchevents", kind: "RuleNamesByTarget"}: "List",
	{resource: "cloudwatchevents", kind: "Rules"}:             "List",
	{resource: "cloudwatchevents", kind: "TargetsByRule"}:     "List",

	{resource: "cloudwatchlogs", kind: "Destinations"}:        "Describe",
	{resource: "cloudwatchlogs", kind: "ExportTasks"}:         "Describe",
	{resource: "cloudwatchlogs", kind: "LogGroups"}:           "Describe",
	{resource: "cloudwatchlogs", kind: "LogStreams"}:          "Describe",
	{resource: "cloudwatchlogs", kind: "MetricFilters"}:       "Describe",
	{resource: "cloudwatchlogs", kind: "Queries"}:             "Describe",
	{resource: "cloudwatchlogs", kind: "ResourcePolicies"}:    "Describe",
	{resource: "cloudwatchlogs", kind: "SubscriptionFilters"}: "Describe",
	{resource: "cloudwatchlogs", kind: "TagsLogGroup"}:        "List",

	{resource: "codebuild", kind: "Builds"}:                   "List",
	{resource: "codebuild", kind: "BuildsForProject"}:         "List",
	{resource: "codebuild", kind: "CuratedEnvironmentImages"}: "List",
	{resource: "codebuild", kind: "Projects"}:                 "List",
	{resource: "codebuild", kind: "SourceCredentials"}:        "List",

	{resource: "codecommit", kind: "PullRequestEvents"}: "Describe",
	{resource: "codecommit", kind: "Branches"}:          "List",
	{resource: "codecommit", kind: "PullRequests"}:      "List",
	{resource: "codecommit", kind: "Repositories"}:      "List",

	{resource: "codedeploy", kind: "ApplicationRevisions"}:    "List",
	{resource: "codedeploy", kind: "Applications"}:            "List",
	{resource: "codedeploy", kind: "DeploymentConfigs"}:       "List",
	{resource: "codedeploy", kind: "DeploymentGroups"}:        "List",
	{resource: "codedeploy", kind: "DeploymentInstances"}:     "List",
	{resource: "codedeploy", kind: "DeploymentTargets"}:       "List",
	{resource: "codedeploy", kind: "Deployments"}:             "List",
	{resource: "codedeploy", kind: "GitHubAccountTokenNames"}: "List",
	{resource: "codedeploy", kind: "OnPremisesInstances"}:     "List",

	{resource: "codepipeline", kind: "ActionTypes"}:        "List",
	{resource: "codepipeline", kind: "PipelineExecutions"}: "List",
	{resource: "codepipeline", kind: "Pipelines"}:          "List",
	{resource: "codepipeline", kind: "Webhooks"}:           "List",

	{resource: "codestar", kind: "Project"}:        "Describe",
	{resource: "codestar", kind: "UserProfile"}:    "Describe",
	{resource: "codestar", kind: "Projects"}:       "List",
	{resource: "codestar", kind: "Resources"}:      "List",
	{resource: "codestar", kind: "TagsForProject"}: "List",
	{resource: "codestar", kind: "TeamMembers"}:    "List",
	{resource: "codestar", kind: "UserProfiles"}:   "List",

	{resource: "cognitoidentity", kind: "Identity"}:      "Describe",
	{resource: "cognitoidentity", kind: "IdentityPool"}:  "Describe",
	{resource: "cognitoidentity", kind: "Identities"}:    "List",
	{resource: "cognitoidentity", kind: "IdentityPools"}: "List",

	{resource: "cognitoidentityprovider", kind: "IdentityProvider"}:  "Describe",
	{resource: "cognitoidentityprovider", kind: "ResourceServer"}:    "Describe",
	{resource: "cognitoidentityprovider", kind: "RiskConfiguration"}: "Describe",
	{resource: "cognitoidentityprovider", kind: "UserImportJob"}:     "Describe",
	{resource: "cognitoidentityprovider", kind: "UserPool"}:          "Describe",
	{resource: "cognitoidentityprovider", kind: "UserPoolClient"}:    "Describe",
	{resource: "cognitoidentityprovider", kind: "UserPoolDomain"}:    "Describe",
	{resource: "cognitoidentityprovider", kind: "Devices"}:           "List",
	{resource: "cognitoidentityprovider", kind: "Groups"}:            "List",
	{resource: "cognitoidentityprovider", kind: "IdentityProviders"}: "List",
	{resource: "cognitoidentityprovider", kind: "ResourceServers"}:   "List",
	{resource: "cognitoidentityprovider", kind: "UserImportJobs"}:    "List",
	{resource: "cognitoidentityprovider", kind: "UserPoolClients"}:   "List",
	{resource: "cognitoidentityprovider", kind: "UserPools"}:         "List",
	{resource: "cognitoidentityprovider", kind: "Users"}:             "List",
	{resource: "cognitoidentityprovider", kind: "UsersInGroup"}:      "List",

	{resource: "cognitosync", kind: "Dataset"}:           "Describe",
	{resource: "cognitosync", kind: "IdentityPoolUsage"}: "Describe",
	{resource: "cognitosync", kind: "IdentityUsage"}:     "Describe",
	{resource: "cognitosync", kind: "Datasets"}:          "List",
	{resource: "cognitosync", kind: "IdentityPoolUsage"}: "List",
	{resource: "cognitosync", kind: "Records"}:           "List",

	{resource: "comprehend", kind: "DocumentClassificationJob"}:     "Describe",
	{resource: "comprehend", kind: "DocumentClassifier"}:            "Describe",
	{resource: "comprehend", kind: "DominantLanguageDetectionJob"}:  "Describe",
	{resource: "comprehend", kind: "EntitiesDetectionJob"}:          "Describe",
	{resource: "comprehend", kind: "EntityRecognizer"}:              "Describe",
	{resource: "comprehend", kind: "KeyPhrasesDetectionJob"}:        "Describe",
	{resource: "comprehend", kind: "SentimentDetectionJob"}:         "Describe",
	{resource: "comprehend", kind: "TopicsDetectionJob"}:            "Describe",
	{resource: "comprehend", kind: "DocumentClassificationJobs"}:    "List",
	{resource: "comprehend", kind: "DocumentClassifiers"}:           "List",
	{resource: "comprehend", kind: "DominantLanguageDetectionJobs"}: "List",
	{resource: "comprehend", kind: "EntitiesDetectionJobs"}:         "List",
	{resource: "comprehend", kind: "EntityRecognizers"}:             "List",
	{resource: "comprehend", kind: "KeyPhrasesDetectionJobs"}:       "List",
	{resource: "comprehend", kind: "SentimentDetectionJobs"}:        "List",
	{resource: "comprehend", kind: "TopicsDetectionJobs"}:           "List",

	{resource: "configservice", kind: "AggregateComplianceByConfigRules"}:     "Describe",
	{resource: "configservice", kind: "AggregationAuthorizations"}:            "Describe",
	{resource: "configservice", kind: "ComplianceByConfigRule"}:               "Describe",
	{resource: "configservice", kind: "ComplianceByResource"}:                 "Describe",
	{resource: "configservice", kind: "ConfigRuleEvaluationStatus"}:           "Describe",
	{resource: "configservice", kind: "ConfigRules"}:                          "Describe",
	{resource: "configservice", kind: "ConfigurationAggregatorSourcesStatus"}: "Describe",
	{resource: "configservice", kind: "ConfigurationAggregators"}:             "Describe",
	{resource: "configservice", kind: "ConfigurationRecorderStatus"}:          "Describe",
	{resource: "configservice", kind: "ConfigurationRecorders"}:               "Describe",
	{resource: "configservice", kind: "DeliveryChannelStatus"}:                "Describe",
	{resource: "configservice", kind: "DeliveryChannels"}:                     "Describe",
	{resource: "configservice", kind: "PendingAggregationRequests"}:           "Describe",
	{resource: "configservice", kind: "RetentionConfigurations"}:              "Describe",
	{resource: "configservice", kind: "AggregateDiscoveredResources"}:         "List",
	{resource: "configservice", kind: "DiscoveredResources"}:                  "List",

	{resource: "connect", kind: "User"}:                   "Describe",
	{resource: "connect", kind: "UserHierarchyGroup"}:     "Describe",
	{resource: "connect", kind: "UserHierarchyStructure"}: "Describe",
	{resource: "connect", kind: "RoutingProfiles"}:        "List",
	{resource: "connect", kind: "SecurityProfiles"}:       "List",
	{resource: "connect", kind: "UserHierarchyGroups"}:    "List",
	{resource: "connect", kind: "Users"}:                  "List",

	{resource: "costandusagereportservice", kind: "ReportDefinitions"}: "Describe",

	{resource: "databasemigrationservice", kind: "AccountAttributes"}:                "Describe",
	{resource: "databasemigrationservice", kind: "Certificates"}:                     "Describe",
	{resource: "databasemigrationservice", kind: "Connections"}:                      "Describe",
	{resource: "databasemigrationservice", kind: "EndpointTypes"}:                    "Describe",
	{resource: "databasemigrationservice", kind: "Endpoints"}:                        "Describe",
	{resource: "databasemigrationservice", kind: "EventCategories"}:                  "Describe",
	{resource: "databasemigrationservice", kind: "EventSubscriptions"}:               "Describe",
	{resource: "databasemigrationservice", kind: "Events"}:                           "Describe",
	{resource: "databasemigrationservice", kind: "OrderableReplicationInstances"}:    "Describe",
	{resource: "databasemigrationservice", kind: "RefreshSchemasStatus"}:             "Describe",
	{resource: "databasemigrationservice", kind: "ReplicationInstanceTaskLogs"}:      "Describe",
	{resource: "databasemigrationservice", kind: "ReplicationInstances"}:             "Describe",
	{resource: "databasemigrationservice", kind: "ReplicationSubnetGroups"}:          "Describe",
	{resource: "databasemigrationservice", kind: "ReplicationTaskAssessmentResults"}: "Describe",
	{resource: "databasemigrationservice", kind: "ReplicationTasks"}:                 "Describe",
	{resource: "databasemigrationservice", kind: "Schemas"}:                          "Describe",
	{resource: "databasemigrationservice", kind: "TableStatistics"}:                  "Describe",
	{resource: "databasemigrationservice", kind: "TagsForResource"}:                  "List",

	{resource: "datapipeline", kind: "Objects"}:   "Describe",
	{resource: "datapipeline", kind: "Pipelines"}: "Describe",
	{resource: "datapipeline", kind: "Pipelines"}: "List",

	{resource: "datasync", kind: "Agent"}:           "Describe",
	{resource: "datasync", kind: "LocationEfs"}:     "Describe",
	{resource: "datasync", kind: "LocationNfs"}:     "Describe",
	{resource: "datasync", kind: "LocationS3"}:      "Describe",
	{resource: "datasync", kind: "Task"}:            "Describe",
	{resource: "datasync", kind: "TaskExecution"}:   "Describe",
	{resource: "datasync", kind: "Agents"}:          "List",
	{resource: "datasync", kind: "Locations"}:       "List",
	{resource: "datasync", kind: "TagsForResource"}: "List",
	{resource: "datasync", kind: "TaskExecutions"}:  "List",
	{resource: "datasync", kind: "Tasks"}:           "List",

	{resource: "dax", kind: "Clusters"}:          "Describe",
	{resource: "dax", kind: "DefaultParameters"}: "Describe",
	{resource: "dax", kind: "Events"}:            "Describe",
	{resource: "dax", kind: "ParameterGroups"}:   "Describe",
	{resource: "dax", kind: "Parameters"}:        "Describe",
	{resource: "dax", kind: "SubnetGroups"}:      "Describe",
	{resource: "dax", kind: "Tags"}:              "List",

	{resource: "devicefarm", kind: "Artifacts"}:            "List",
	{resource: "devicefarm", kind: "DeviceInstances"}:      "List",
	{resource: "devicefarm", kind: "DevicePools"}:          "List",
	{resource: "devicefarm", kind: "Devices"}:              "List",
	{resource: "devicefarm", kind: "InstanceProfiles"}:     "List",
	{resource: "devicefarm", kind: "Jobs"}:                 "List",
	{resource: "devicefarm", kind: "NetworkProfiles"}:      "List",
	{resource: "devicefarm", kind: "OfferingPromotions"}:   "List",
	{resource: "devicefarm", kind: "OfferingTransactions"}: "List",
	{resource: "devicefarm", kind: "Offerings"}:            "List",
	{resource: "devicefarm", kind: "Projects"}:             "List",
	{resource: "devicefarm", kind: "RemoteAccessSessions"}: "List",
	{resource: "devicefarm", kind: "Runs"}:                 "List",
	{resource: "devicefarm", kind: "Samples"}:              "List",
	{resource: "devicefarm", kind: "Suites"}:               "List",
	{resource: "devicefarm", kind: "Tests"}:                "List",
	{resource: "devicefarm", kind: "UniqueProblems"}:       "List",
	{resource: "devicefarm", kind: "Uploads"}:              "List",
	{resource: "devicefarm", kind: "VPCEConfigurations"}:   "List",

	{resource: "directconnect", kind: "ConnectionLoa"}:                    "Describe",
	{resource: "directconnect", kind: "Connections"}:                      "Describe",
	{resource: "directconnect", kind: "ConnectionsOnInterconnect"}:        "Describe",
	{resource: "directconnect", kind: "DirectConnectGatewayAssociations"}: "Describe",
	{resource: "directconnect", kind: "DirectConnectGatewayAttachments"}:  "Describe",
	{resource: "directconnect", kind: "DirectConnectGateways"}:            "Describe",
	{resource: "directconnect", kind: "HostedConnections"}:                "Describe",
	{resource: "directconnect", kind: "InterconnectLoa"}:                  "Describe",
	{resource: "directconnect", kind: "Interconnects"}:                    "Describe",
	{resource: "directconnect", kind: "Lags"}:                             "Describe",
	{resource: "directconnect", kind: "Loa"}:                              "Describe",
	{resource: "directconnect", kind: "Locations"}:                        "Describe",
	{resource: "directconnect", kind: "Tags"}:                             "Describe",
	{resource: "directconnect", kind: "VirtualGateways"}:                  "Describe",
	{resource: "directconnect", kind: "VirtualInterfaces"}:                "Describe",

	{resource: "directoryservice", kind: "ConditionalForwarders"}: "Describe",
	{resource: "directoryservice", kind: "Directories"}:           "Describe",
	{resource: "directoryservice", kind: "DomainControllers"}:     "Describe",
	{resource: "directoryservice", kind: "EventTopics"}:           "Describe",
	{resource: "directoryservice", kind: "SharedDirectories"}:     "Describe",
	{resource: "directoryservice", kind: "Snapshots"}:             "Describe",
	{resource: "directoryservice", kind: "Trusts"}:                "Describe",
	{resource: "directoryservice", kind: "IpRoutes"}:              "List",
	{resource: "directoryservice", kind: "LogSubscriptions"}:      "List",
	{resource: "directoryservice", kind: "SchemaExtensions"}:      "List",
	{resource: "directoryservice", kind: "TagsForResource"}:       "List",

	{resource: "dynamodb", kind: "Backup"}:              "Describe",
	{resource: "dynamodb", kind: "ContinuousBackups"}:   "Describe",
	{resource: "dynamodb", kind: "Endpoints"}:           "Describe",
	{resource: "dynamodb", kind: "GlobalTable"}:         "Describe",
	{resource: "dynamodb", kind: "GlobalTableSettings"}: "Describe",
	{resource: "dynamodb", kind: "Limits"}:              "Describe",
	{resource: "dynamodb", kind: "Table"}:               "Describe",
	{resource: "dynamodb", kind: "TimeToLive"}:          "Describe",
	{resource: "dynamodb", kind: "Backups"}:             "List",
	{resource: "dynamodb", kind: "GlobalTables"}:        "List",
	{resource: "dynamodb", kind: "Tables"}:              "List",
	{resource: "dynamodb", kind: "TagsOfResource"}:      "List",

	{resource: "dynamodbstreams", kind: "Stream"}:  "Describe",
	{resource: "dynamodbstreams", kind: "Streams"}: "List",

	{resource: "ec2", kind: "AccountAttributes"}:                  "Describe",
	{resource: "ec2", kind: "Addresses"}:                          "Describe",
	{resource: "ec2", kind: "AggregateIdFormat"}:                  "Describe",
	{resource: "ec2", kind: "AvailabilityZones"}:                  "Describe",
	{resource: "ec2", kind: "BundleTasks"}:                        "Describe",
	{resource: "ec2", kind: "ByoipCidrs"}:                         "Describe",
	{resource: "ec2", kind: "CapacityReservations"}:               "Describe",
	{resource: "ec2", kind: "ClassicLinkInstances"}:               "Describe",
	{resource: "ec2", kind: "ClientVpnAuthorizationRules"}:        "Describe",
	{resource: "ec2", kind: "ClientVpnConnections"}:               "Describe",
	{resource: "ec2", kind: "ClientVpnEndpoints"}:                 "Describe",
	{resource: "ec2", kind: "ClientVpnRoutes"}:                    "Describe",
	{resource: "ec2", kind: "ClientVpnTargetNetworks"}:            "Describe",
	{resource: "ec2", kind: "ConversionTasks"}:                    "Describe",
	{resource: "ec2", kind: "CustomerGateways"}:                   "Describe",
	{resource: "ec2", kind: "DhcpOptions"}:                        "Describe",
	{resource: "ec2", kind: "EgressOnlyInternetGateways"}:         "Describe",
	{resource: "ec2", kind: "ElasticGpus"}:                        "Describe",
	{resource: "ec2", kind: "ExportTasks"}:                        "Describe",
	{resource: "ec2", kind: "FleetHistory"}:                       "Describe",
	{resource: "ec2", kind: "FleetInstances"}:                     "Describe",
	{resource: "ec2", kind: "Fleets"}:                             "Describe",
	{resource: "ec2", kind: "FlowLogs"}:                           "Describe",
	{resource: "ec2", kind: "FpgaImageAttribute"}:                 "Describe",
	{resource: "ec2", kind: "FpgaImages"}:                         "Describe",
	{resource: "ec2", kind: "HostReservationOfferings"}:           "Describe",
	{resource: "ec2", kind: "HostReservations"}:                   "Describe",
	{resource: "ec2", kind: "Hosts"}:                              "Describe",
	{resource: "ec2", kind: "IamInstanceProfileAssociations"}:     "Describe",
	{resource: "ec2", kind: "IdFormat"}:                           "Describe",
	{resource: "ec2", kind: "IdentityIdFormat"}:                   "Describe",
	{resource: "ec2", kind: "ImageAttribute"}:                     "Describe",
	{resource: "ec2", kind: "Images"}:                             "Describe",
	{resource: "ec2", kind: "ImportImageTasks"}:                   "Describe",
	{resource: "ec2", kind: "ImportSnapshotTasks"}:                "Describe",
	{resource: "ec2", kind: "InstanceAttribute"}:                  "Describe",
	{resource: "ec2", kind: "InstanceCreditSpecifications"}:       "Describe",
	{resource: "ec2", kind: "InstanceStatus"}:                     "Describe",
	{resource: "ec2", kind: "Instances"}:                          "Describe",
	{resource: "ec2", kind: "InternetGateways"}:                   "Describe",
	{resource: "ec2", kind: "KeyPairs"}:                           "Describe",
	{resource: "ec2", kind: "LaunchTemplateVersions"}:             "Describe",
	{resource: "ec2", kind: "LaunchTemplates"}:                    "Describe",
	{resource: "ec2", kind: "MovingAddresses"}:                    "Describe",
	{resource: "ec2", kind: "NatGateways"}:                        "Describe",
	{resource: "ec2", kind: "NetworkAcls"}:                        "Describe",
	{resource: "ec2", kind: "NetworkInterfaceAttribute"}:          "Describe",
	{resource: "ec2", kind: "NetworkInterfacePermissions"}:        "Describe",
	{resource: "ec2", kind: "NetworkInterfaces"}:                  "Describe",
	{resource: "ec2", kind: "PlacementGroups"}:                    "Describe",
	{resource: "ec2", kind: "PrefixLists"}:                        "Describe",
	{resource: "ec2", kind: "PrincipalIdFormat"}:                  "Describe",
	{resource: "ec2", kind: "PublicIpv4Pools"}:                    "Describe",
	{resource: "ec2", kind: "Regions"}:                            "Describe",
	{resource: "ec2", kind: "ReservedInstances"}:                  "Describe",
	{resource: "ec2", kind: "ReservedInstancesListings"}:          "Describe",
	{resource: "ec2", kind: "ReservedInstancesModifications"}:     "Describe",
	{resource: "ec2", kind: "ReservedInstancesOfferings"}:         "Describe",
	{resource: "ec2", kind: "RouteTables"}:                        "Describe",
	{resource: "ec2", kind: "ScheduledInstanceAvailability"}:      "Describe",
	{resource: "ec2", kind: "ScheduledInstances"}:                 "Describe",
	{resource: "ec2", kind: "SecurityGroupReferences"}:            "Describe",
	{resource: "ec2", kind: "SecurityGroups"}:                     "Describe",
	{resource: "ec2", kind: "SnapshotAttribute"}:                  "Describe",
	{resource: "ec2", kind: "Snapshots"}:                          "Describe",
	{resource: "ec2", kind: "SpotDatafeedSubscription"}:           "Describe",
	{resource: "ec2", kind: "SpotFleetInstances"}:                 "Describe",
	{resource: "ec2", kind: "SpotFleetRequestHistory"}:            "Describe",
	{resource: "ec2", kind: "SpotFleetRequests"}:                  "Describe",
	{resource: "ec2", kind: "SpotInstanceRequests"}:               "Describe",
	{resource: "ec2", kind: "SpotPriceHistory"}:                   "Describe",
	{resource: "ec2", kind: "StaleSecurityGroups"}:                "Describe",
	{resource: "ec2", kind: "Subnets"}:                            "Describe",
	{resource: "ec2", kind: "Tags"}:                               "Describe",
	{resource: "ec2", kind: "TransitGatewayAttachments"}:          "Describe",
	{resource: "ec2", kind: "TransitGatewayRouteTables"}:          "Describe",
	{resource: "ec2", kind: "TransitGatewayVpcAttachments"}:       "Describe",
	{resource: "ec2", kind: "TransitGateways"}:                    "Describe",
	{resource: "ec2", kind: "VolumeAttribute"}:                    "Describe",
	{resource: "ec2", kind: "VolumeStatus"}:                       "Describe",
	{resource: "ec2", kind: "Volumes"}:                            "Describe",
	{resource: "ec2", kind: "VolumesModifications"}:               "Describe",
	{resource: "ec2", kind: "VpcAttribute"}:                       "Describe",
	{resource: "ec2", kind: "VpcClassicLink"}:                     "Describe",
	{resource: "ec2", kind: "VpcClassicLinkDnsSupport"}:           "Describe",
	{resource: "ec2", kind: "VpcEndpointConnectionNotifications"}: "Describe",
	{resource: "ec2", kind: "VpcEndpointConnections"}:             "Describe",
	{resource: "ec2", kind: "VpcEndpointServiceConfigurations"}:   "Describe",
	{resource: "ec2", kind: "VpcEndpointServicePermissions"}:      "Describe",
	{resource: "ec2", kind: "VpcEndpointServices"}:                "Describe",
	{resource: "ec2", kind: "VpcEndpoints"}:                       "Describe",
	{resource: "ec2", kind: "VpcPeeringConnections"}:              "Describe",
	{resource: "ec2", kind: "Vpcs"}:                               "Describe",
	{resource: "ec2", kind: "VpnConnections"}:                     "Describe",
	{resource: "ec2", kind: "VpnGateways"}:                        "Describe",

	{resource: "ecr", kind: "Images"}:          "Describe",
	{resource: "ecr", kind: "Repositories"}:    "Describe",
	{resource: "ecr", kind: "Images"}:          "List",
	{resource: "ecr", kind: "TagsForResource"}: "List",

	{resource: "ecs", kind: "Clusters"}:               "Describe",
	{resource: "ecs", kind: "ContainerInstances"}:     "Describe",
	{resource: "ecs", kind: "Services"}:               "Describe",
	{resource: "ecs", kind: "TaskDefinition"}:         "Describe",
	{resource: "ecs", kind: "Tasks"}:                  "Describe",
	{resource: "ecs", kind: "AccountSettings"}:        "List",
	{resource: "ecs", kind: "Attributes"}:             "List",
	{resource: "ecs", kind: "Clusters"}:               "List",
	{resource: "ecs", kind: "ContainerInstances"}:     "List",
	{resource: "ecs", kind: "Services"}:               "List",
	{resource: "ecs", kind: "TagsForResource"}:        "List",
	{resource: "ecs", kind: "TaskDefinitionFamilies"}: "List",
	{resource: "ecs", kind: "TaskDefinitions"}:        "List",
	{resource: "ecs", kind: "Tasks"}:                  "List",

	{resource: "efs", kind: "FileSystems"}:               "Describe",
	{resource: "efs", kind: "MountTargetSecurityGroups"}: "Describe",
	{resource: "efs", kind: "MountTargets"}:              "Describe",
	{resource: "efs", kind: "Tags"}:                      "Describe",

	{resource: "eks", kind: "Cluster"}:  "Describe",
	{resource: "eks", kind: "Update"}:   "Describe",
	{resource: "eks", kind: "Clusters"}: "List",
	{resource: "eks", kind: "Updates"}:  "List",

	{resource: "elasticache", kind: "CacheClusters"}:                "Describe",
	{resource: "elasticache", kind: "CacheEngineVersions"}:          "Describe",
	{resource: "elasticache", kind: "CacheParameterGroups"}:         "Describe",
	{resource: "elasticache", kind: "CacheParameters"}:              "Describe",
	{resource: "elasticache", kind: "CacheSecurityGroups"}:          "Describe",
	{resource: "elasticache", kind: "CacheSubnetGroups"}:            "Describe",
	{resource: "elasticache", kind: "EngineDefaultParameters"}:      "Describe",
	{resource: "elasticache", kind: "Events"}:                       "Describe",
	{resource: "elasticache", kind: "ReplicationGroups"}:            "Describe",
	{resource: "elasticache", kind: "ReservedCacheNodes"}:           "Describe",
	{resource: "elasticache", kind: "ReservedCacheNodesOfferings"}:  "Describe",
	{resource: "elasticache", kind: "Snapshots"}:                    "Describe",
	{resource: "elasticache", kind: "AllowedNodeTypeModifications"}: "List",
	{resource: "elasticache", kind: "TagsForResource"}:              "List",

	{resource: "elasticbeanstalk", kind: "AccountAttributes"}:               "Describe",
	{resource: "elasticbeanstalk", kind: "ApplicationVersions"}:             "Describe",
	{resource: "elasticbeanstalk", kind: "Applications"}:                    "Describe",
	{resource: "elasticbeanstalk", kind: "ConfigurationOptions"}:            "Describe",
	{resource: "elasticbeanstalk", kind: "ConfigurationSettings"}:           "Describe",
	{resource: "elasticbeanstalk", kind: "EnvironmentHealth"}:               "Describe",
	{resource: "elasticbeanstalk", kind: "EnvironmentManagedActionHistory"}: "Describe",
	{resource: "elasticbeanstalk", kind: "EnvironmentManagedActions"}:       "Describe",
	{resource: "elasticbeanstalk", kind: "EnvironmentResources"}:            "Describe",
	{resource: "elasticbeanstalk", kind: "Environments"}:                    "Describe",
	{resource: "elasticbeanstalk", kind: "Events"}:                          "Describe",
	{resource: "elasticbeanstalk", kind: "InstancesHealth"}:                 "Describe",
	{resource: "elasticbeanstalk", kind: "PlatformVersion"}:                 "Describe",
	{resource: "elasticbeanstalk", kind: "AvailableSolutionStacks"}:         "List",
	{resource: "elasticbeanstalk", kind: "PlatformVersions"}:                "List",
	{resource: "elasticbeanstalk", kind: "TagsForResource"}:                 "List",

	{resource: "elasticsearchservice", kind: "ElasticsearchDomain"}:                    "Describe",
	{resource: "elasticsearchservice", kind: "ElasticsearchDomainConfig"}:              "Describe",
	{resource: "elasticsearchservice", kind: "ElasticsearchDomains"}:                   "Describe",
	{resource: "elasticsearchservice", kind: "ElasticsearchInstanceTypeLimits"}:        "Describe",
	{resource: "elasticsearchservice", kind: "ReservedElasticsearchInstanceOfferings"}: "Describe",
	{resource: "elasticsearchservice", kind: "ReservedElasticsearchInstances"}:         "Describe",
	{resource: "elasticsearchservice", kind: "DomainNames"}:                            "List",
	{resource: "elasticsearchservice", kind: "ElasticsearchInstanceTypes"}:             "List",
	{resource: "elasticsearchservice", kind: "ElasticsearchVersions"}:                  "List",
	{resource: "elasticsearchservice", kind: "Tags"}:                                   "List",

	{resource: "elastictranscoder", kind: "JobsByPipeline"}: "List",
	{resource: "elastictranscoder", kind: "JobsByStatus"}:   "List",
	{resource: "elastictranscoder", kind: "Pipelines"}:      "List",
	{resource: "elastictranscoder", kind: "Presets"}:        "List",

	{resource: "elb", kind: "AccountLimits"}:           "Describe",
	{resource: "elb", kind: "InstanceHealth"}:          "Describe",
	{resource: "elb", kind: "LoadBalancerAttributes"}:  "Describe",
	{resource: "elb", kind: "LoadBalancerPolicies"}:    "Describe",
	{resource: "elb", kind: "LoadBalancerPolicyTypes"}: "Describe",
	{resource: "elb", kind: "LoadBalancers"}:           "Describe",
	{resource: "elb", kind: "Tags"}:                    "Describe",

	{resource: "elbv2", kind: "AccountLimits"}:          "Describe",
	{resource: "elbv2", kind: "enerCertificates"}:       "Describe",
	{resource: "elbv2", kind: "eners"}:                  "Describe",
	{resource: "elbv2", kind: "LoadBalancerAttributes"}: "Describe",
	{resource: "elbv2", kind: "LoadBalancers"}:          "Describe",
	{resource: "elbv2", kind: "Rules"}:                  "Describe",
	{resource: "elbv2", kind: "SSLPolicies"}:            "Describe",
	{resource: "elbv2", kind: "Tags"}:                   "Describe",
	{resource: "elbv2", kind: "TargetGroupAttributes"}:  "Describe",
	{resource: "elbv2", kind: "TargetGroups"}:           "Describe",
	{resource: "elbv2", kind: "TargetHealth"}:           "Describe",

	{resource: "emr", kind: "Cluster"}:                "Describe",
	{resource: "emr", kind: "JobFlows"}:               "Describe",
	{resource: "emr", kind: "SecurityConfiguration"}:  "Describe",
	{resource: "emr", kind: "Step"}:                   "Describe",
	{resource: "emr", kind: "BootstrapActions"}:       "List",
	{resource: "emr", kind: "Clusters"}:               "List",
	{resource: "emr", kind: "InstanceFleets"}:         "List",
	{resource: "emr", kind: "InstanceGroups"}:         "List",
	{resource: "emr", kind: "Instances"}:              "List",
	{resource: "emr", kind: "SecurityConfigurations"}: "List",
	{resource: "emr", kind: "Steps"}:                  "List",

	{resource: "firehose", kind: "DeliveryStream"}:        "Describe",
	{resource: "firehose", kind: "DeliveryStreams"}:       "List",
	{resource: "firehose", kind: "TagsForDeliveryStream"}: "List",

	{resource: "fms", kind: "ComplianceStatus"}: "List",
	{resource: "fms", kind: "MemberAccounts"}:   "List",
	{resource: "fms", kind: "Policies"}:         "List",

	{resource: "fsx", kind: "Backups"}:         "Describe",
	{resource: "fsx", kind: "FileSystems"}:     "Describe",
	{resource: "fsx", kind: "TagsForResource"}: "List",

	{resource: "gamelift", kind: "Alias"}:                     "Describe",
	{resource: "gamelift", kind: "Build"}:                     "Describe",
	{resource: "gamelift", kind: "EC2InstanceLimits"}:         "Describe",
	{resource: "gamelift", kind: "FleetAttributes"}:           "Describe",
	{resource: "gamelift", kind: "FleetCapacity"}:             "Describe",
	{resource: "gamelift", kind: "FleetEvents"}:               "Describe",
	{resource: "gamelift", kind: "FleetPortSettings"}:         "Describe",
	{resource: "gamelift", kind: "FleetUtilization"}:          "Describe",
	{resource: "gamelift", kind: "GameSessionDetails"}:        "Describe",
	{resource: "gamelift", kind: "GameSessionPlacement"}:      "Describe",
	{resource: "gamelift", kind: "GameSessionQueues"}:         "Describe",
	{resource: "gamelift", kind: "GameSessions"}:              "Describe",
	{resource: "gamelift", kind: "Instances"}:                 "Describe",
	{resource: "gamelift", kind: "Matchmaking"}:               "Describe",
	{resource: "gamelift", kind: "MatchmakingConfigurations"}: "Describe",
	{resource: "gamelift", kind: "MatchmakingRuleSets"}:       "Describe",
	{resource: "gamelift", kind: "PlayerSessions"}:            "Describe",
	{resource: "gamelift", kind: "RuntimeConfiguration"}:      "Describe",
	{resource: "gamelift", kind: "ScalingPolicies"}:           "Describe",
	{resource: "gamelift", kind: "VpcPeeringAuthorizations"}:  "Describe",
	{resource: "gamelift", kind: "VpcPeeringConnections"}:     "Describe",
	{resource: "gamelift", kind: "Aliases"}:                   "List",
	{resource: "gamelift", kind: "Builds"}:                    "List",
	{resource: "gamelift", kind: "Fleets"}:                    "List",

	{resource: "glacier", kind: "Job"}:                 "Describe",
	{resource: "glacier", kind: "Vault"}:               "Describe",
	{resource: "glacier", kind: "Jobs"}:                "List",
	{resource: "glacier", kind: "MultipartUploads"}:    "List",
	{resource: "glacier", kind: "Parts"}:               "List",
	{resource: "glacier", kind: "ProvisionedCapacity"}: "List",
	{resource: "glacier", kind: "TagsForVault"}:        "List",
	{resource: "glacier", kind: "Vaults"}:              "List",

	{resource: "globalaccelerator", kind: "Accelerator"}:           "Describe",
	{resource: "globalaccelerator", kind: "AcceleratorAttributes"}: "Describe",
	{resource: "globalaccelerator", kind: "EndpointGroup"}:         "Describe",
	{resource: "globalaccelerator", kind: "ener"}:                  "Describe",
	{resource: "globalaccelerator", kind: "Accelerators"}:          "List",
	{resource: "globalaccelerator", kind: "EndpointGroups"}:        "List",
	{resource: "globalaccelerator", kind: "Listeners"}:             "List",

	{resource: "greengrass", kind: "BulkDeploymentDetailedReports"}:  "List",
	{resource: "greengrass", kind: "BulkDeployments"}:                "List",
	{resource: "greengrass", kind: "ConnectorDefinitionVersions"}:    "List",
	{resource: "greengrass", kind: "ConnectorDefinitions"}:           "List",
	{resource: "greengrass", kind: "CoreDefinitionVersions"}:         "List",
	{resource: "greengrass", kind: "CoreDefinitions"}:                "List",
	{resource: "greengrass", kind: "Deployments"}:                    "List",
	{resource: "greengrass", kind: "DeviceDefinitionVersions"}:       "List",
	{resource: "greengrass", kind: "DeviceDefinitions"}:              "List",
	{resource: "greengrass", kind: "FunctionDefinitionVersions"}:     "List",
	{resource: "greengrass", kind: "FunctionDefinitions"}:            "List",
	{resource: "greengrass", kind: "GroupCertificateAuthorities"}:    "List",
	{resource: "greengrass", kind: "GroupVersions"}:                  "List",
	{resource: "greengrass", kind: "Groups"}:                         "List",
	{resource: "greengrass", kind: "LoggerDefinitionVersions"}:       "List",
	{resource: "greengrass", kind: "LoggerDefinitions"}:              "List",
	{resource: "greengrass", kind: "ResourceDefinitionVersions"}:     "List",
	{resource: "greengrass", kind: "ResourceDefinitions"}:            "List",
	{resource: "greengrass", kind: "SubscriptionDefinitionVersions"}: "List",
	{resource: "greengrass", kind: "SubscriptionDefinitions"}:        "List",

	{resource: "guardduty", kind: "Detectors"}:       "List",
	{resource: "guardduty", kind: "Filters"}:         "List",
	{resource: "guardduty", kind: "Findings"}:        "List",
	{resource: "guardduty", kind: "IPSets"}:          "List",
	{resource: "guardduty", kind: "Invitations"}:     "List",
	{resource: "guardduty", kind: "Members"}:         "List",
	{resource: "guardduty", kind: "ThreatIntelSets"}: "List",

	{resource: "health", kind: "AffectedEntities"}: "Describe",
	{resource: "health", kind: "EntityAggregates"}: "Describe",
	{resource: "health", kind: "EventAggregates"}:  "Describe",
	{resource: "health", kind: "EventDetails"}:     "Describe",
	{resource: "health", kind: "EventTypes"}:       "Describe",
	{resource: "health", kind: "Events"}:           "Describe",

	{resource: "iam", kind: "AccessKeys"}:                    "List",
	{resource: "iam", kind: "AccountAliases"}:                "List",
	{resource: "iam", kind: "AttachedGroupPolicies"}:         "List",
	{resource: "iam", kind: "AttachedRolePolicies"}:          "List",
	{resource: "iam", kind: "AttachedUserPolicies"}:          "List",
	{resource: "iam", kind: "EntitiesForPolicy"}:             "List",
	{resource: "iam", kind: "GroupPolicies"}:                 "List",
	{resource: "iam", kind: "Groups"}:                        "List",
	{resource: "iam", kind: "GroupsForUser"}:                 "List",
	{resource: "iam", kind: "InstanceProfiles"}:              "List",
	{resource: "iam", kind: "InstanceProfilesForRole"}:       "List",
	{resource: "iam", kind: "MFADevices"}:                    "List",
	{resource: "iam", kind: "OpenIDConnectProviders"}:        "List",
	{resource: "iam", kind: "Policies"}:                      "List",
	{resource: "iam", kind: "PoliciesGrantingServiceAccess"}: "List",
	{resource: "iam", kind: "PolicyVersions"}:                "List",
	{resource: "iam", kind: "RolePolicies"}:                  "List",
	{resource: "iam", kind: "RoleTags"}:                      "List",
	{resource: "iam", kind: "Roles"}:                         "List",
	{resource: "iam", kind: "SAMLProviders"}:                 "List",
	{resource: "iam", kind: "SSHPublicKeys"}:                 "List",
	{resource: "iam", kind: "ServerCertificates"}:            "List",
	{resource: "iam", kind: "ServiceSpecificCredentials"}:    "List",
	{resource: "iam", kind: "SigningCertificates"}:           "List",
	{resource: "iam", kind: "UserPolicies"}:                  "List",
	{resource: "iam", kind: "UserTags"}:                      "List",
	{resource: "iam", kind: "Users"}:                         "List",
	{resource: "iam", kind: "VirtualMFADevices"}:             "List",

	{resource: "inspector", kind: "AssessmentRuns"}:         "Describe",
	{resource: "inspector", kind: "AssessmentTargets"}:      "Describe",
	{resource: "inspector", kind: "AssessmentTemplates"}:    "Describe",
	{resource: "inspector", kind: "CrossAccountAccessRole"}: "Describe",
	{resource: "inspector", kind: "Exclusions"}:             "Describe",
	{resource: "inspector", kind: "Findings"}:               "Describe",
	{resource: "inspector", kind: "ResourceGroups"}:         "Describe",
	{resource: "inspector", kind: "RulesPackages"}:          "Describe",
	{resource: "inspector", kind: "AssessmentRunAgents"}:    "List",
	{resource: "inspector", kind: "AssessmentRuns"}:         "List",
	{resource: "inspector", kind: "AssessmentTargets"}:      "List",
	{resource: "inspector", kind: "AssessmentTemplates"}:    "List",
	{resource: "inspector", kind: "EventSubscriptions"}:     "List",
	{resource: "inspector", kind: "Exclusions"}:             "List",
	{resource: "inspector", kind: "Findings"}:               "List",
	{resource: "inspector", kind: "RulesPackages"}:          "List",
	{resource: "inspector", kind: "TagsForResource"}:        "List",

	{resource: "iot", kind: "AccountAuditConfiguration"}:    "Describe",
	{resource: "iot", kind: "AuditTask"}:                    "Describe",
	{resource: "iot", kind: "Authorizer"}:                   "Describe",
	{resource: "iot", kind: "BillingGroup"}:                 "Describe",
	{resource: "iot", kind: "CACertificate"}:                "Describe",
	{resource: "iot", kind: "Certificate"}:                  "Describe",
	{resource: "iot", kind: "DefaultAuthorizer"}:            "Describe",
	{resource: "iot", kind: "Endpoint"}:                     "Describe",
	{resource: "iot", kind: "EventConfigurations"}:          "Describe",
	{resource: "iot", kind: "Index"}:                        "Describe",
	{resource: "iot", kind: "Job"}:                          "Describe",
	{resource: "iot", kind: "JobExecution"}:                 "Describe",
	{resource: "iot", kind: "RoleAlias"}:                    "Describe",
	{resource: "iot", kind: "ScheduledAudit"}:               "Describe",
	{resource: "iot", kind: "SecurityProfile"}:              "Describe",
	{resource: "iot", kind: "Stream"}:                       "Describe",
	{resource: "iot", kind: "Thing"}:                        "Describe",
	{resource: "iot", kind: "ThingGroup"}:                   "Describe",
	{resource: "iot", kind: "ThingRegistrationTask"}:        "Describe",
	{resource: "iot", kind: "ThingType"}:                    "Describe",
	{resource: "iot", kind: "ActiveViolations"}:             "List",
	{resource: "iot", kind: "AttachedPolicies"}:             "List",
	{resource: "iot", kind: "AuditFindings"}:                "List",
	{resource: "iot", kind: "AuditTasks"}:                   "List",
	{resource: "iot", kind: "Authorizers"}:                  "List",
	{resource: "iot", kind: "BillingGroups"}:                "List",
	{resource: "iot", kind: "CACertificates"}:               "List",
	{resource: "iot", kind: "Certificates"}:                 "List",
	{resource: "iot", kind: "CertificatesByCA"}:             "List",
	{resource: "iot", kind: "Indices"}:                      "List",
	{resource: "iot", kind: "JobExecutionsForJob"}:          "List",
	{resource: "iot", kind: "JobExecutionsForThing"}:        "List",
	{resource: "iot", kind: "Jobs"}:                         "List",
	{resource: "iot", kind: "OTAUpdates"}:                   "List",
	{resource: "iot", kind: "OutgoingCertificates"}:         "List",
	{resource: "iot", kind: "Policies"}:                     "List",
	{resource: "iot", kind: "PolicyPrincipals"}:             "List",
	{resource: "iot", kind: "PolicyVersions"}:               "List",
	{resource: "iot", kind: "PrincipalPolicies"}:            "List",
	{resource: "iot", kind: "PrincipalThings"}:              "List",
	{resource: "iot", kind: "RoleAliases"}:                  "List",
	{resource: "iot", kind: "ScheduledAudits"}:              "List",
	{resource: "iot", kind: "SecurityProfiles"}:             "List",
	{resource: "iot", kind: "SecurityProfilesForTarget"}:    "List",
	{resource: "iot", kind: "Streams"}:                      "List",
	{resource: "iot", kind: "TagsForResource"}:              "List",
	{resource: "iot", kind: "TargetsForPolicy"}:             "List",
	{resource: "iot", kind: "TargetsForSecurityProfile"}:    "List",
	{resource: "iot", kind: "ThingGroups"}:                  "List",
	{resource: "iot", kind: "ThingGroupsForThing"}:          "List",
	{resource: "iot", kind: "ThingPrincipals"}:              "List",
	{resource: "iot", kind: "ThingRegistrationTaskReports"}: "List",
	{resource: "iot", kind: "ThingRegistrationTasks"}:       "List",
	{resource: "iot", kind: "ThingTypes"}:                   "List",
	{resource: "iot", kind: "Things"}:                       "List",
	{resource: "iot", kind: "ThingsInBillingGroup"}:         "List",
	{resource: "iot", kind: "ThingsInThingGroup"}:           "List",
	{resource: "iot", kind: "TopicRules"}:                   "List",
	{resource: "iot", kind: "V2LoggingLevels"}:              "List",
	{resource: "iot", kind: "ViolationEvents"}:              "List",

	{resource: "iot1clickdevicesservice", kind: "Device"}:       "Describe",
	{resource: "iot1clickdevicesservice", kind: "DeviceEvents"}: "List",
	{resource: "iot1clickdevicesservice", kind: "Devices"}:      "List",

	{resource: "iot1clickprojects", kind: "Placement"}:  "Describe",
	{resource: "iot1clickprojects", kind: "Project"}:    "Describe",
	{resource: "iot1clickprojects", kind: "Placements"}: "List",
	{resource: "iot1clickprojects", kind: "Projects"}:   "List",

	{resource: "iotanalytics", kind: "Channel"}:         "Describe",
	{resource: "iotanalytics", kind: "Dataset"}:         "Describe",
	{resource: "iotanalytics", kind: "Datastore"}:       "Describe",
	{resource: "iotanalytics", kind: "LoggingOptions"}:  "Describe",
	{resource: "iotanalytics", kind: "Pipeline"}:        "Describe",
	{resource: "iotanalytics", kind: "Channels"}:        "List",
	{resource: "iotanalytics", kind: "DatasetContents"}: "List",
	{resource: "iotanalytics", kind: "Datasets"}:        "List",
	{resource: "iotanalytics", kind: "Datastores"}:      "List",
	{resource: "iotanalytics", kind: "Pipelines"}:       "List",
	{resource: "iotanalytics", kind: "TagsForResource"}: "List",

	{resource: "iotjobsdataplane", kind: "JobExecution"}: "Describe",

	{resource: "kafka", kind: "Cluster"}:  "Describe",
	{resource: "kafka", kind: "Clusters"}: "List",
	{resource: "kafka", kind: "Nodes"}:    "List",

	{resource: "kinesis", kind: "Limits"}:          "Describe",
	{resource: "kinesis", kind: "Stream"}:          "Describe",
	{resource: "kinesis", kind: "StreamConsumer"}:  "Describe",
	{resource: "kinesis", kind: "StreamSummary"}:   "Describe",
	{resource: "kinesis", kind: "Shards"}:          "List",
	{resource: "kinesis", kind: "StreamConsumers"}: "List",
	{resource: "kinesis", kind: "Streams"}:         "List",
	{resource: "kinesis", kind: "TagsForStream"}:   "List",

	{resource: "kinesisanalytics", kind: "Application"}:  "Describe",
	{resource: "kinesisanalytics", kind: "Applications"}: "List",

	{resource: "kinesisanalyticsv2", kind: "Application"}:          "Describe",
	{resource: "kinesisanalyticsv2", kind: "ApplicationSnapshot"}:  "Describe",
	{resource: "kinesisanalyticsv2", kind: "ApplicationSnapshots"}: "List",
	{resource: "kinesisanalyticsv2", kind: "Applications"}:         "List",

	{resource: "kinesisvideo", kind: "Stream"}:        "Describe",
	{resource: "kinesisvideo", kind: "Streams"}:       "List",
	{resource: "kinesisvideo", kind: "TagsForStream"}: "List",

	{resource: "kinesisvideoarchivedmedia", kind: "Fragments"}: "List",

	{resource: "kms", kind: "CustomKeyStores"}: "Describe",
	{resource: "kms", kind: "Key"}:             "Describe",
	{resource: "kms", kind: "Aliases"}:         "List",
	{resource: "kms", kind: "Grants"}:          "List",
	{resource: "kms", kind: "KeyPolicies"}:     "List",
	{resource: "kms", kind: "Keys"}:            "List",
	{resource: "kms", kind: "ResourceTags"}:    "List",
	{resource: "kms", kind: "RetirableGrants"}: "List",

	{resource: "lambda", kind: "Aliases"}:             "List",
	{resource: "lambda", kind: "EventSourceMappings"}: "List",
	{resource: "lambda", kind: "Functions"}:           "List",
	{resource: "lambda", kind: "LayerVersions"}:       "List",
	{resource: "lambda", kind: "Layers"}:              "List",
	{resource: "lambda", kind: "Tags"}:                "List",
	{resource: "lambda", kind: "VersionsByFunction"}:  "List",

	{resource: "licensemanager", kind: "AssociationsForLicenseConfiguration"}: "List",
	{resource: "licensemanager", kind: "LicenseConfigurations"}:               "List",
	{resource: "licensemanager", kind: "LicenseSpecificationsForResource"}:    "List",
	{resource: "licensemanager", kind: "ResourceInventory"}:                   "List",
	{resource: "licensemanager", kind: "TagsForResource"}:                     "List",
	{resource: "licensemanager", kind: "UsageForLicenseConfiguration"}:        "List",

	{resource: "machinelearning", kind: "BatchPredictions"}: "Describe",
	{resource: "machinelearning", kind: "DataSources"}:      "Describe",
	{resource: "machinelearning", kind: "Evaluations"}:      "Describe",
	{resource: "machinelearning", kind: "MLModels"}:         "Describe",
	{resource: "machinelearning", kind: "Tags"}:             "Describe",

	{resource: "macie", kind: "MemberAccounts"}: "List",
	{resource: "macie", kind: "S3Resources"}:    "List",

	{resource: "mediaconnect", kind: "Flow"}:         "Describe",
	{resource: "mediaconnect", kind: "Entitlements"}: "List",
	{resource: "mediaconnect", kind: "Flows"}:        "List",

	{resource: "mediaconvert", kind: "Endpoints"}:       "Describe",
	{resource: "mediaconvert", kind: "JobTemplates"}:    "List",
	{resource: "mediaconvert", kind: "Jobs"}:            "List",
	{resource: "mediaconvert", kind: "Presets"}:         "List",
	{resource: "mediaconvert", kind: "Queues"}:          "List",
	{resource: "mediaconvert", kind: "TagsForResource"}: "List",

	{resource: "medialive", kind: "Channel"}:             "Describe",
	{resource: "medialive", kind: "Input"}:               "Describe",
	{resource: "medialive", kind: "InputSecurityGroup"}:  "Describe",
	{resource: "medialive", kind: "Offering"}:            "Describe",
	{resource: "medialive", kind: "Reservation"}:         "Describe",
	{resource: "medialive", kind: "Schedule"}:            "Describe",
	{resource: "medialive", kind: "Channels"}:            "List",
	{resource: "medialive", kind: "InputSecurityGroups"}: "List",
	{resource: "medialive", kind: "Inputs"}:              "List",
	{resource: "medialive", kind: "Offerings"}:           "List",
	{resource: "medialive", kind: "Reservations"}:        "List",

	{resource: "mediapackage", kind: "Channel"}:         "Describe",
	{resource: "mediapackage", kind: "OriginEndpoint"}:  "Describe",
	{resource: "mediapackage", kind: "Channels"}:        "List",
	{resource: "mediapackage", kind: "OriginEndpoints"}: "List",

	{resource: "mediastore", kind: "Container"}:  "Describe",
	{resource: "mediastore", kind: "Containers"}: "List",

	{resource: "mediastoredata", kind: "Object"}: "Describe",
	{resource: "mediastoredata", kind: "Items"}:  "List",

	{resource: "mediatailor", kind: "PlaybackConfigurations"}: "List",

	{resource: "migrationhub", kind: "ApplicationState"}:      "Describe",
	{resource: "migrationhub", kind: "MigrationTask"}:         "Describe",
	{resource: "migrationhub", kind: "CreatedArtifacts"}:      "List",
	{resource: "migrationhub", kind: "DiscoveredResources"}:   "List",
	{resource: "migrationhub", kind: "MigrationTasks"}:        "List",
	{resource: "migrationhub", kind: "ProgressUpdateStreams"}: "List",

	{resource: "mobile", kind: "Bundle"}:   "Describe",
	{resource: "mobile", kind: "Project"}:  "Describe",
	{resource: "mobile", kind: "Bundles"}:  "List",
	{resource: "mobile", kind: "Projects"}: "List",

	{resource: "mq", kind: "Broker"}:                 "Describe",
	{resource: "mq", kind: "Configuration"}:          "Describe",
	{resource: "mq", kind: "ConfigurationRevision"}:  "Describe",
	{resource: "mq", kind: "User"}:                   "Describe",
	{resource: "mq", kind: "Brokers"}:                "List",
	{resource: "mq", kind: "ConfigurationRevisions"}: "List",
	{resource: "mq", kind: "Configurations"}:         "List",
	{resource: "mq", kind: "Tags"}:                   "List",
	{resource: "mq", kind: "Users"}:                  "List",

	{resource: "mturk", kind: "AssignmentsForHIT"}:            "List",
	{resource: "mturk", kind: "BonusPayments"}:                "List",
	{resource: "mturk", kind: "HITs"}:                         "List",
	{resource: "mturk", kind: "HITsForQualificationType"}:     "List",
	{resource: "mturk", kind: "QualificationRequests"}:        "List",
	{resource: "mturk", kind: "QualificationTypes"}:           "List",
	{resource: "mturk", kind: "ReviewPolicyResultsForHIT"}:    "List",
	{resource: "mturk", kind: "ReviewableHITs"}:               "List",
	{resource: "mturk", kind: "WorkerBlocks"}:                 "List",
	{resource: "mturk", kind: "WorkersWithQualificationType"}: "List",

	{resource: "neptune", kind: "DBClusterParameterGroups"}:       "Describe",
	{resource: "neptune", kind: "DBClusterParameters"}:            "Describe",
	{resource: "neptune", kind: "DBClusterSnapshotAttributes"}:    "Describe",
	{resource: "neptune", kind: "DBClusterSnapshots"}:             "Describe",
	{resource: "neptune", kind: "DBClusters"}:                     "Describe",
	{resource: "neptune", kind: "DBEngineVersions"}:               "Describe",
	{resource: "neptune", kind: "DBInstances"}:                    "Describe",
	{resource: "neptune", kind: "DBParameterGroups"}:              "Describe",
	{resource: "neptune", kind: "DBParameters"}:                   "Describe",
	{resource: "neptune", kind: "DBSubnetGroups"}:                 "Describe",
	{resource: "neptune", kind: "EngineDefaultClusterParameters"}: "Describe",
	{resource: "neptune", kind: "EngineDefaultParameters"}:        "Describe",
	{resource: "neptune", kind: "EventCategories"}:                "Describe",
	{resource: "neptune", kind: "EventSubscriptions"}:             "Describe",
	{resource: "neptune", kind: "Events"}:                         "Describe",
	{resource: "neptune", kind: "OrderableDBInstanceOptions"}:     "Describe",
	{resource: "neptune", kind: "PendingMaintenanceActions"}:      "Describe",
	{resource: "neptune", kind: "ValidDBInstanceModifications"}:   "Describe",
	{resource: "neptune", kind: "TagsForResource"}:                "List",

	{resource: "opsworks", kind: "AgentVersions"}:               "Describe",
	{resource: "opsworks", kind: "Apps"}:                        "Describe",
	{resource: "opsworks", kind: "Commands"}:                    "Describe",
	{resource: "opsworks", kind: "Deployments"}:                 "Describe",
	{resource: "opsworks", kind: "EcsClusters"}:                 "Describe",
	{resource: "opsworks", kind: "ElasticIps"}:                  "Describe",
	{resource: "opsworks", kind: "ElasticLoadBalancers"}:        "Describe",
	{resource: "opsworks", kind: "Instances"}:                   "Describe",
	{resource: "opsworks", kind: "Layers"}:                      "Describe",
	{resource: "opsworks", kind: "LoadBasedAutoScaling"}:        "Describe",
	{resource: "opsworks", kind: "MyUserProfile"}:               "Describe",
	{resource: "opsworks", kind: "OperatingSystems"}:            "Describe",
	{resource: "opsworks", kind: "Permissions"}:                 "Describe",
	{resource: "opsworks", kind: "RaidArrays"}:                  "Describe",
	{resource: "opsworks", kind: "RdsDbInstances"}:              "Describe",
	{resource: "opsworks", kind: "ServiceErrors"}:               "Describe",
	{resource: "opsworks", kind: "StackProvisioningParameters"}: "Describe",
	{resource: "opsworks", kind: "StackSummary"}:                "Describe",
	{resource: "opsworks", kind: "Stacks"}:                      "Describe",
	{resource: "opsworks", kind: "TimeBasedAutoScaling"}:        "Describe",
	{resource: "opsworks", kind: "UserProfiles"}:                "Describe",
	{resource: "opsworks", kind: "Volumes"}:                     "Describe",
	{resource: "opsworks", kind: "Tags"}:                        "List",

	{resource: "opsworkscm", kind: "AccountAttributes"}:     "Describe",
	{resource: "opsworkscm", kind: "Backups"}:               "Describe",
	{resource: "opsworkscm", kind: "Events"}:                "Describe",
	{resource: "opsworkscm", kind: "NodeAssociationStatus"}: "Describe",
	{resource: "opsworkscm", kind: "Servers"}:               "Describe",

	{resource: "organizations", kind: "Account"}:                         "Describe",
	{resource: "organizations", kind: "CreateAccountStatus"}:             "Describe",
	{resource: "organizations", kind: "Handshake"}:                       "Describe",
	{resource: "organizations", kind: "Organization"}:                    "Describe",
	{resource: "organizations", kind: "OrganizationalUnit"}:              "Describe",
	{resource: "organizations", kind: "Policy"}:                          "Describe",
	{resource: "organizations", kind: "AWSServiceAccessForOrganization"}: "List",
	{resource: "organizations", kind: "Accounts"}:                        "List",
	{resource: "organizations", kind: "AccountsForParent"}:               "List",
	{resource: "organizations", kind: "Children"}:                        "List",
	{resource: "organizations", kind: "CreateAccountStatus"}:             "List",
	{resource: "organizations", kind: "HandshakesForAccount"}:            "List",
	{resource: "organizations", kind: "HandshakesForOrganization"}:       "List",
	{resource: "organizations", kind: "OrganizationalUnitsForParent"}:    "List",
	{resource: "organizations", kind: "Parents"}:                         "List",
	{resource: "organizations", kind: "Policies"}:                        "List",
	{resource: "organizations", kind: "PoliciesForTarget"}:               "List",
	{resource: "organizations", kind: "Roots"}:                           "List",
	{resource: "organizations", kind: "TargetsForPolicy"}:                "List",

	{resource: "pi", kind: "DimensionKeys"}: "Describe",

	{resource: "pinpointemail", kind: "ConfigurationSets"}:         "List",
	{resource: "pinpointemail", kind: "DedicatedIpPools"}:          "List",
	{resource: "pinpointemail", kind: "DeliverabilityTestReports"}: "List",
	{resource: "pinpointemail", kind: "EmailIdentities"}:           "List",

	{resource: "polly", kind: "Voices"}:               "Describe",
	{resource: "polly", kind: "Lexicons"}:             "List",
	{resource: "polly", kind: "SpeechSynthesisTasks"}: "List",

	{resource: "pricing", kind: "Services"}: "Describe",

	{resource: "quicksight", kind: "Group"}:            "Describe",
	{resource: "quicksight", kind: "User"}:             "Describe",
	{resource: "quicksight", kind: "GroupMemberships"}: "List",
	{resource: "quicksight", kind: "Groups"}:           "List",
	{resource: "quicksight", kind: "UserGroups"}:       "List",
	{resource: "quicksight", kind: "Users"}:            "List",

	{resource: "ram", kind: "Principals"}: "List",
	{resource: "ram", kind: "Resources"}:  "List",

	{resource: "rds", kind: "AccountAttributes"}:              "Describe",
	{resource: "rds", kind: "Certificates"}:                   "Describe",
	{resource: "rds", kind: "DBClusterBacktracks"}:            "Describe",
	{resource: "rds", kind: "DBClusterEndpoints"}:             "Describe",
	{resource: "rds", kind: "DBClusterParameterGroups"}:       "Describe",
	{resource: "rds", kind: "DBClusterParameters"}:            "Describe",
	{resource: "rds", kind: "DBClusterSnapshotAttributes"}:    "Describe",
	{resource: "rds", kind: "DBClusterSnapshots"}:             "Describe",
	{resource: "rds", kind: "DBClusters"}:                     "Describe",
	{resource: "rds", kind: "DBEngineVersions"}:               "Describe",
	{resource: "rds", kind: "DBInstanceAutomatedBackups"}:     "Describe",
	{resource: "rds", kind: "DBInstances"}:                    "Describe",
	{resource: "rds", kind: "DBLogFiles"}:                     "Describe",
	{resource: "rds", kind: "DBParameterGroups"}:              "Describe",
	{resource: "rds", kind: "DBParameters"}:                   "Describe",
	{resource: "rds", kind: "DBSecurityGroups"}:               "Describe",
	{resource: "rds", kind: "DBSnapshotAttributes"}:           "Describe",
	{resource: "rds", kind: "DBSnapshots"}:                    "Describe",
	{resource: "rds", kind: "DBSubnetGroups"}:                 "Describe",
	{resource: "rds", kind: "EngineDefaultClusterParameters"}: "Describe",
	{resource: "rds", kind: "EngineDefaultParameters"}:        "Describe",
	{resource: "rds", kind: "EventCategories"}:                "Describe",
	{resource: "rds", kind: "EventSubscriptions"}:             "Describe",
	{resource: "rds", kind: "Events"}:                         "Describe",
	{resource: "rds", kind: "GlobalClusters"}:                 "Describe",
	{resource: "rds", kind: "OptionGroupOptions"}:             "Describe",
	{resource: "rds", kind: "OptionGroups"}:                   "Describe",
	{resource: "rds", kind: "OrderableDBInstanceOptions"}:     "Describe",
	{resource: "rds", kind: "PendingMaintenanceActions"}:      "Describe",
	{resource: "rds", kind: "ReservedDBInstances"}:            "Describe",
	{resource: "rds", kind: "ReservedDBInstancesOfferings"}:   "Describe",
	{resource: "rds", kind: "SourceRegions"}:                  "Describe",
	{resource: "rds", kind: "ValidDBInstanceModifications"}:   "Describe",
	{resource: "rds", kind: "TagsForResource"}:                "List",

	{resource: "redshift", kind: "AccountAttributes"}:        "Describe",
	{resource: "redshift", kind: "ClusterDbRevisions"}:       "Describe",
	{resource: "redshift", kind: "ClusterParameterGroups"}:   "Describe",
	{resource: "redshift", kind: "ClusterParameters"}:        "Describe",
	{resource: "redshift", kind: "ClusterSecurityGroups"}:    "Describe",
	{resource: "redshift", kind: "ClusterSnapshots"}:         "Describe",
	{resource: "redshift", kind: "ClusterSubnetGroups"}:      "Describe",
	{resource: "redshift", kind: "ClusterTracks"}:            "Describe",
	{resource: "redshift", kind: "ClusterVersions"}:          "Describe",
	{resource: "redshift", kind: "Clusters"}:                 "Describe",
	{resource: "redshift", kind: "DefaultClusterParameters"}: "Describe",
	{resource: "redshift", kind: "EventCategories"}:          "Describe",
	{resource: "redshift", kind: "EventSubscriptions"}:       "Describe",
	{resource: "redshift", kind: "Events"}:                   "Describe",
	{resource: "redshift", kind: "HsmClientCertificates"}:    "Describe",
	{resource: "redshift", kind: "HsmConfigurations"}:        "Describe",
	{resource: "redshift", kind: "LoggingStatus"}:            "Describe",
	{resource: "redshift", kind: "OrderableClusterOptions"}:  "Describe",
	{resource: "redshift", kind: "ReservedNodeOfferings"}:    "Describe",
	{resource: "redshift", kind: "ReservedNodes"}:            "Describe",
	{resource: "redshift", kind: "Resize"}:                   "Describe",
	{resource: "redshift", kind: "SnapshotCopyGrants"}:       "Describe",
	{resource: "redshift", kind: "SnapshotSchedules"}:        "Describe",
	{resource: "redshift", kind: "Storage"}:                  "Describe",
	{resource: "redshift", kind: "TableRestoreStatus"}:       "Describe",
	{resource: "redshift", kind: "Tags"}:                     "Describe",

	{resource: "rekognition", kind: "Collection"}:       "Describe",
	{resource: "rekognition", kind: "StreamProcessor"}:  "Describe",
	{resource: "rekognition", kind: "Collections"}:      "List",
	{resource: "rekognition", kind: "Faces"}:            "List",
	{resource: "rekognition", kind: "StreamProcessors"}: "List",

	{resource: "resourcegroups", kind: "GroupResources"}: "List",
	{resource: "resourcegroups", kind: "Groups"}:         "List",

	{resource: "robomaker", kind: "DeploymentJob"}:          "Describe",
	{resource: "robomaker", kind: "Fleet"}:                  "Describe",
	{resource: "robomaker", kind: "Robot"}:                  "Describe",
	{resource: "robomaker", kind: "RobotApplication"}:       "Describe",
	{resource: "robomaker", kind: "SimulationApplication"}:  "Describe",
	{resource: "robomaker", kind: "SimulationJob"}:          "Describe",
	{resource: "robomaker", kind: "DeploymentJobs"}:         "List",
	{resource: "robomaker", kind: "Fleets"}:                 "List",
	{resource: "robomaker", kind: "RobotApplications"}:      "List",
	{resource: "robomaker", kind: "Robots"}:                 "List",
	{resource: "robomaker", kind: "SimulationApplications"}: "List",
	{resource: "robomaker", kind: "SimulationJobs"}:         "List",

	{resource: "route53", kind: "GeoLocations"}:                       "List",
	{resource: "route53", kind: "HealthChecks"}:                       "List",
	{resource: "route53", kind: "HostedZones"}:                        "List",
	{resource: "route53", kind: "HostedZonesByName"}:                  "List",
	{resource: "route53", kind: "QueryLoggingConfigs"}:                "List",
	{resource: "route53", kind: "ResourceRecordSets"}:                 "List",
	{resource: "route53", kind: "ReusableDelegationSets"}:             "List",
	{resource: "route53", kind: "TagsForResource"}:                    "List",
	{resource: "route53", kind: "TagsForResources"}:                   "List",
	{resource: "route53", kind: "TrafficPolicies"}:                    "List",
	{resource: "route53", kind: "TrafficPolicyInstances"}:             "List",
	{resource: "route53", kind: "TrafficPolicyInstancesByHostedZone"}: "List",
	{resource: "route53", kind: "TrafficPolicyInstancesByPolicy"}:     "List",
	{resource: "route53", kind: "TrafficPolicyVersions"}:              "List",
	{resource: "route53", kind: "VPCAssociationAuthorizations"}:       "List",

	{resource: "route53domains", kind: "Domains"}:       "List",
	{resource: "route53domains", kind: "Operations"}:    "List",
	{resource: "route53domains", kind: "TagsForDomain"}: "List",

	{resource: "route53resolver", kind: "ResolverEndpointIpAddresses"}: "List",
	{resource: "route53resolver", kind: "ResolverEndpoints"}:           "List",
	{resource: "route53resolver", kind: "ResolverRuleAssociations"}:    "List",
	{resource: "route53resolver", kind: "ResolverRules"}:               "List",
	{resource: "route53resolver", kind: "TagsForResource"}:             "List",

	{resource: "s3", kind: "BucketAnalyticsConfigurations"}: "List",
	{resource: "s3", kind: "BucketInventoryConfigurations"}: "List",
	{resource: "s3", kind: "BucketMetricsConfigurations"}:   "List",
	{resource: "s3", kind: "Buckets"}:                       "List",
	{resource: "s3", kind: "MultipartUploads"}:              "List",
	{resource: "s3", kind: "ObjectVersions"}:                "List",
	{resource: "s3", kind: "Objects"}:                       "List",
	{resource: "s3", kind: "ObjectsV2"}:                     "List",
	{resource: "s3", kind: "Parts"}:                         "List",

	{resource: "sagemaker", kind: "Algorithm"}:                              "Describe",
	{resource: "sagemaker", kind: "CodeRepository"}:                         "Describe",
	{resource: "sagemaker", kind: "CompilationJob"}:                         "Describe",
	{resource: "sagemaker", kind: "Endpoint"}:                               "Describe",
	{resource: "sagemaker", kind: "EndpointConfig"}:                         "Describe",
	{resource: "sagemaker", kind: "HyperParameterTuningJob"}:                "Describe",
	{resource: "sagemaker", kind: "LabelingJob"}:                            "Describe",
	{resource: "sagemaker", kind: "Model"}:                                  "Describe",
	{resource: "sagemaker", kind: "ModelPackage"}:                           "Describe",
	{resource: "sagemaker", kind: "NotebookInstance"}:                       "Describe",
	{resource: "sagemaker", kind: "NotebookInstanceLifecycleConfig"}:        "Describe",
	{resource: "sagemaker", kind: "SubscribedWorkteam"}:                     "Describe",
	{resource: "sagemaker", kind: "TrainingJob"}:                            "Describe",
	{resource: "sagemaker", kind: "TransformJob"}:                           "Describe",
	{resource: "sagemaker", kind: "Workteam"}:                               "Describe",
	{resource: "sagemaker", kind: "Algorithms"}:                             "List",
	{resource: "sagemaker", kind: "CodeRepositories"}:                       "List",
	{resource: "sagemaker", kind: "CompilationJobs"}:                        "List",
	{resource: "sagemaker", kind: "EndpointConfigs"}:                        "List",
	{resource: "sagemaker", kind: "Endpoints"}:                              "List",
	{resource: "sagemaker", kind: "HyperParameterTuningJobs"}:               "List",
	{resource: "sagemaker", kind: "LabelingJobs"}:                           "List",
	{resource: "sagemaker", kind: "LabelingJobsForWorkteam"}:                "List",
	{resource: "sagemaker", kind: "ModelPackages"}:                          "List",
	{resource: "sagemaker", kind: "Models"}:                                 "List",
	{resource: "sagemaker", kind: "NotebookInstanceLifecycleConfigs"}:       "List",
	{resource: "sagemaker", kind: "NotebookInstances"}:                      "List",
	{resource: "sagemaker", kind: "SubscribedWorkteams"}:                    "List",
	{resource: "sagemaker", kind: "Tags"}:                                   "List",
	{resource: "sagemaker", kind: "TrainingJobs"}:                           "List",
	{resource: "sagemaker", kind: "TrainingJobsForHyperParameterTuningJob"}: "List",
	{resource: "sagemaker", kind: "TransformJobs"}:                          "List",
	{resource: "sagemaker", kind: "Workteams"}:                              "List",

	{resource: "secretsmanager", kind: "Secret"}:           "Describe",
	{resource: "secretsmanager", kind: "SecretVersionIds"}: "List",
	{resource: "secretsmanager", kind: "Secrets"}:          "List",

	{resource: "securityhub", kind: "EnabledProductsForImport"}: "List",
	{resource: "securityhub", kind: "Invitations"}:              "List",
	{resource: "securityhub", kind: "Members"}:                  "List",

	{resource: "serverlessapplicationrepository", kind: "ApplicationDependencies"}: "List",
	{resource: "serverlessapplicationrepository", kind: "ApplicationVersions"}:     "List",
	{resource: "serverlessapplicationrepository", kind: "Applications"}:            "List",

	{resource: "servicecatalog", kind: "Constraint"}:                            "Describe",
	{resource: "servicecatalog", kind: "CopyProductStatus"}:                     "Describe",
	{resource: "servicecatalog", kind: "Portfolio"}:                             "Describe",
	{resource: "servicecatalog", kind: "PortfolioShareStatus"}:                  "Describe",
	{resource: "servicecatalog", kind: "Product"}:                               "Describe",
	{resource: "servicecatalog", kind: "ProductAsAdmin"}:                        "Describe",
	{resource: "servicecatalog", kind: "ProductView"}:                           "Describe",
	{resource: "servicecatalog", kind: "ProvisionedProduct"}:                    "Describe",
	{resource: "servicecatalog", kind: "ProvisionedProductPlan"}:                "Describe",
	{resource: "servicecatalog", kind: "ProvisioningArtifact"}:                  "Describe",
	{resource: "servicecatalog", kind: "ProvisioningParameters"}:                "Describe",
	{resource: "servicecatalog", kind: "Record"}:                                "Describe",
	{resource: "servicecatalog", kind: "ServiceAction"}:                         "Describe",
	{resource: "servicecatalog", kind: "TagOption"}:                             "Describe",
	{resource: "servicecatalog", kind: "AcceptedPortfolioShares"}:               "List",
	{resource: "servicecatalog", kind: "ConstraintsForPortfolio"}:               "List",
	{resource: "servicecatalog", kind: "LaunchPaths"}:                           "List",
	{resource: "servicecatalog", kind: "OrganizationPortfolioAccess"}:           "List",
	{resource: "servicecatalog", kind: "PortfolioAccess"}:                       "List",
	{resource: "servicecatalog", kind: "Portfolios"}:                            "List",
	{resource: "servicecatalog", kind: "PortfoliosForProduct"}:                  "List",
	{resource: "servicecatalog", kind: "PrincipalsForPortfolio"}:                "List",
	{resource: "servicecatalog", kind: "ProvisionedProductPlans"}:               "List",
	{resource: "servicecatalog", kind: "ProvisioningArtifacts"}:                 "List",
	{resource: "servicecatalog", kind: "ProvisioningArtifactsForServiceAction"}: "List",
	{resource: "servicecatalog", kind: "RecordHistory"}:                         "List",
	{resource: "servicecatalog", kind: "ResourcesForTagOption"}:                 "List",
	{resource: "servicecatalog", kind: "ServiceActions"}:                        "List",
	{resource: "servicecatalog", kind: "ServiceActionsForProvisioningArtifact"}: "List",
	{resource: "servicecatalog", kind: "TagOptions"}:                            "List",

	{resource: "servicediscovery", kind: "Instances"}:  "List",
	{resource: "servicediscovery", kind: "Namespaces"}: "List",
	{resource: "servicediscovery", kind: "Operations"}: "List",
	{resource: "servicediscovery", kind: "Services"}:   "List",

	{resource: "ses", kind: "ActiveReceiptRuleSet"}:             "Describe",
	{resource: "ses", kind: "ConfigurationSet"}:                 "Describe",
	{resource: "ses", kind: "ReceiptRule"}:                      "Describe",
	{resource: "ses", kind: "ReceiptRuleSet"}:                   "Describe",
	{resource: "ses", kind: "ConfigurationSets"}:                "List",
	{resource: "ses", kind: "CustomVerificationEmailTemplates"}: "List",
	{resource: "ses", kind: "Identities"}:                       "List",
	{resource: "ses", kind: "IdentityPolicies"}:                 "List",
	{resource: "ses", kind: "ReceiptFilters"}:                   "List",
	{resource: "ses", kind: "ReceiptRuleSets"}:                  "List",
	{resource: "ses", kind: "Templates"}:                        "List",
	{resource: "ses", kind: "VerifiedEmailAddresses"}:           "List",

	{resource: "sfn", kind: "Activity"}:                 "Describe",
	{resource: "sfn", kind: "Execution"}:                "Describe",
	{resource: "sfn", kind: "StateMachine"}:             "Describe",
	{resource: "sfn", kind: "StateMachineForExecution"}: "Describe",
	{resource: "sfn", kind: "Activities"}:               "List",
	{resource: "sfn", kind: "Executions"}:               "List",
	{resource: "sfn", kind: "StateMachines"}:            "List",
	{resource: "sfn", kind: "TagsForResource"}:          "List",

	{resource: "shield", kind: "Attack"}:                   "Describe",
	{resource: "shield", kind: "DRTAccess"}:                "Describe",
	{resource: "shield", kind: "EmergencyContactSettings"}: "Describe",
	{resource: "shield", kind: "Protection"}:               "Describe",
	{resource: "shield", kind: "Subscription"}:             "Describe",
	{resource: "shield", kind: "Attacks"}:                  "List",
	{resource: "shield", kind: "Protections"}:              "List",

	{resource: "signer", kind: "SigningJob"}:       "Describe",
	{resource: "signer", kind: "SigningJobs"}:      "List",
	{resource: "signer", kind: "SigningPlatforms"}: "List",
	{resource: "signer", kind: "SigningProfiles"}:  "List",

	{resource: "simpledb", kind: "Domains"}: "List",

	{resource: "sms", kind: "Apps"}: "List",

	{resource: "snowball", kind: "Address"}:          "Describe",
	{resource: "snowball", kind: "Addresses"}:        "Describe",
	{resource: "snowball", kind: "Cluster"}:          "Describe",
	{resource: "snowball", kind: "Job"}:              "Describe",
	{resource: "snowball", kind: "ClusterJobs"}:      "List",
	{resource: "snowball", kind: "Clusters"}:         "List",
	{resource: "snowball", kind: "CompatibleImages"}: "List",
	{resource: "snowball", kind: "Jobs"}:             "List",

	{resource: "sns", kind: "EndpointsByPlatformApplication"}: "List",
	{resource: "sns", kind: "PhoneNumbersOptedOut"}:           "List",
	{resource: "sns", kind: "PlatformApplications"}:           "List",
	{resource: "sns", kind: "Subscriptions"}:                  "List",
	{resource: "sns", kind: "SubscriptionsByTopic"}:           "List",
	{resource: "sns", kind: "Topics"}:                         "List",

	{resource: "sqs", kind: "DeadLetterSourceQueues"}: "List",
	{resource: "sqs", kind: "QueueTags"}:              "List",
	{resource: "sqs", kind: "Queues"}:                 "List",

	{resource: "ssm", kind: "Activations"}:                               "Describe",
	{resource: "ssm", kind: "Association"}:                               "Describe",
	{resource: "ssm", kind: "AssociationExecutionTargets"}:               "Describe",
	{resource: "ssm", kind: "AssociationExecutions"}:                     "Describe",
	{resource: "ssm", kind: "AutomationExecutions"}:                      "Describe",
	{resource: "ssm", kind: "AutomationStepExecutions"}:                  "Describe",
	{resource: "ssm", kind: "AvailablePatches"}:                          "Describe",
	{resource: "ssm", kind: "Document"}:                                  "Describe",
	{resource: "ssm", kind: "DocumentPermission"}:                        "Describe",
	{resource: "ssm", kind: "EffectiveInstanceAssociations"}:             "Describe",
	{resource: "ssm", kind: "EffectivePatchesForPatchBaseline"}:          "Describe",
	{resource: "ssm", kind: "InstanceAssociationsStatus"}:                "Describe",
	{resource: "ssm", kind: "InstanceInformation"}:                       "Describe",
	{resource: "ssm", kind: "InstancePatchStates"}:                       "Describe",
	{resource: "ssm", kind: "InstancePatchStatesForPatchGroup"}:          "Describe",
	{resource: "ssm", kind: "InstancePatches"}:                           "Describe",
	{resource: "ssm", kind: "InventoryDeletions"}:                        "Describe",
	{resource: "ssm", kind: "MaintenanceWindowExecutionTaskInvocations"}: "Describe",
	{resource: "ssm", kind: "MaintenanceWindowExecutionTasks"}:           "Describe",
	{resource: "ssm", kind: "MaintenanceWindowExecutions"}:               "Describe",
	{resource: "ssm", kind: "MaintenanceWindowSchedule"}:                 "Describe",
	{resource: "ssm", kind: "MaintenanceWindowTargets"}:                  "Describe",
	{resource: "ssm", kind: "MaintenanceWindowTasks"}:                    "Describe",
	{resource: "ssm", kind: "MaintenanceWindows"}:                        "Describe",
	{resource: "ssm", kind: "MaintenanceWindowsForTarget"}:               "Describe",
	{resource: "ssm", kind: "Parameters"}:                                "Describe",
	{resource: "ssm", kind: "PatchBaselines"}:                            "Describe",
	{resource: "ssm", kind: "PatchGroupState"}:                           "Describe",
	{resource: "ssm", kind: "PatchGroups"}:                               "Describe",
	{resource: "ssm", kind: "Sessions"}:                                  "Describe",
	{resource: "ssm", kind: "AssociationVersions"}:                       "List",
	{resource: "ssm", kind: "Associations"}:                              "List",
	{resource: "ssm", kind: "CommandInvocations"}:                        "List",
	{resource: "ssm", kind: "Commands"}:                                  "List",
	{resource: "ssm", kind: "ComplianceItems"}:                           "List",
	{resource: "ssm", kind: "ComplianceSummaries"}:                       "List",
	{resource: "ssm", kind: "DocumentVersions"}:                          "List",
	{resource: "ssm", kind: "Documents"}:                                 "List",
	{resource: "ssm", kind: "InventoryEntries"}:                          "List",
	{resource: "ssm", kind: "ResourceComplianceSummaries"}:               "List",
	{resource: "ssm", kind: "ResourceDataSync"}:                          "List",
	{resource: "ssm", kind: "TagsForResource"}:                           "List",

	{resource: "storagegateway", kind: "BandwidthRateLimit"}:   "Describe",
	{resource: "storagegateway", kind: "Cache"}:                "Describe",
	{resource: "storagegateway", kind: "CachediSCSIVolumes"}:   "Describe",
	{resource: "storagegateway", kind: "ChapCredentials"}:      "Describe",
	{resource: "storagegateway", kind: "GatewayInformation"}:   "Describe",
	{resource: "storagegateway", kind: "MaintenanceStartTime"}: "Describe",
	{resource: "storagegateway", kind: "NFSFileShares"}:        "Describe",
	{resource: "storagegateway", kind: "SMBFileShares"}:        "Describe",
	{resource: "storagegateway", kind: "SMBSettings"}:          "Describe",
	{resource: "storagegateway", kind: "SnapshotSchedule"}:     "Describe",
	{resource: "storagegateway", kind: "StorediSCSIVolumes"}:   "Describe",
	{resource: "storagegateway", kind: "TapeArchives"}:         "Describe",
	{resource: "storagegateway", kind: "TapeRecoveryPoints"}:   "Describe",
	{resource: "storagegateway", kind: "Tapes"}:                "Describe",
	{resource: "storagegateway", kind: "UploadBuffer"}:         "Describe",
	{resource: "storagegateway", kind: "VTLDevices"}:           "Describe",
	{resource: "storagegateway", kind: "WorkingStorage"}:       "Describe",
	{resource: "storagegateway", kind: "FileShares"}:           "List",
	{resource: "storagegateway", kind: "Gateways"}:             "List",
	{resource: "storagegateway", kind: "LocalDisks"}:           "List",
	{resource: "storagegateway", kind: "TagsForResource"}:      "List",
	{resource: "storagegateway", kind: "Tapes"}:                "List",
	{resource: "storagegateway", kind: "VolumeInitiators"}:     "List",
	{resource: "storagegateway", kind: "VolumeRecoveryPoints"}: "List",
	{resource: "storagegateway", kind: "Volumes"}:              "List",

	{resource: "support", kind: "Attachment"}:                         "Describe",
	{resource: "support", kind: "Cases"}:                              "Describe",
	{resource: "support", kind: "Communications"}:                     "Describe",
	{resource: "support", kind: "Services"}:                           "Describe",
	{resource: "support", kind: "SeverityLevels"}:                     "Describe",
	{resource: "support", kind: "TrustedAdvisorCheckRefreshStatuses"}: "Describe",
	{resource: "support", kind: "TrustedAdvisorCheckResult"}:          "Describe",
	{resource: "support", kind: "TrustedAdvisorCheckSummaries"}:       "Describe",
	{resource: "support", kind: "TrustedAdvisorChecks"}:               "Describe",

	{resource: "swf", kind: "ActivityType"}:             "Describe",
	{resource: "swf", kind: "Domain"}:                   "Describe",
	{resource: "swf", kind: "WorkflowExecution"}:        "Describe",
	{resource: "swf", kind: "WorkflowType"}:             "Describe",
	{resource: "swf", kind: "ActivityTypes"}:            "List",
	{resource: "swf", kind: "ClosedWorkflowExecutions"}: "List",
	{resource: "swf", kind: "Domains"}:                  "List",
	{resource: "swf", kind: "OpenWorkflowExecutions"}:   "List",
	{resource: "swf", kind: "WorkflowTypes"}:            "List",

	{resource: "transcribeservice", kind: "TranscriptionJobs"}: "List",
	{resource: "transcribeservice", kind: "Vocabularies"}:      "List",

	{resource: "transfer", kind: "Server"}:          "Describe",
	{resource: "transfer", kind: "User"}:            "Describe",
	{resource: "transfer", kind: "Servers"}:         "List",
	{resource: "transfer", kind: "TagsForResource"}: "List",
	{resource: "transfer", kind: "Users"}:           "List",

	{resource: "translate", kind: "Terminologies"}: "List",

	{resource: "waf", kind: "ActivatedRulesInRuleGroup"}: "List",
	{resource: "waf", kind: "ByteMatchSets"}:             "List",
	{resource: "waf", kind: "GeoMatchSets"}:              "List",
	{resource: "waf", kind: "IPSets"}:                    "List",
	{resource: "waf", kind: "LoggingConfigurations"}:     "List",
	{resource: "waf", kind: "RateBasedRules"}:            "List",
	{resource: "waf", kind: "RegexMatchSets"}:            "List",
	{resource: "waf", kind: "RegexPatternSets"}:          "List",
	{resource: "waf", kind: "RuleGroups"}:                "List",
	{resource: "waf", kind: "Rules"}:                     "List",
	{resource: "waf", kind: "SizeConstraintSets"}:        "List",
	{resource: "waf", kind: "SqlInjectionMatchSets"}:     "List",
	{resource: "waf", kind: "SubscribedRuleGroups"}:      "List",
	{resource: "waf", kind: "WebACLs"}:                   "List",
	{resource: "waf", kind: "XssMatchSets"}:              "List",

	{resource: "wafregional", kind: "ActivatedRulesInRuleGroup"}: "List",
	{resource: "wafregional", kind: "ByteMatchSets"}:             "List",
	{resource: "wafregional", kind: "GeoMatchSets"}:              "List",
	{resource: "wafregional", kind: "IPSets"}:                    "List",
	{resource: "wafregional", kind: "LoggingConfigurations"}:     "List",
	{resource: "wafregional", kind: "RateBasedRules"}:            "List",
	{resource: "wafregional", kind: "RegexMatchSets"}:            "List",
	{resource: "wafregional", kind: "RegexPatternSets"}:          "List",
	{resource: "wafregional", kind: "ResourcesForWebACL"}:        "List",
	{resource: "wafregional", kind: "RuleGroups"}:                "List",
	{resource: "wafregional", kind: "Rules"}:                     "List",
	{resource: "wafregional", kind: "SizeConstraintSets"}:        "List",
	{resource: "wafregional", kind: "SqlInjectionMatchSets"}:     "List",
	{resource: "wafregional", kind: "SubscribedRuleGroups"}:      "List",
	{resource: "wafregional", kind: "WebACLs"}:                   "List",
	{resource: "wafregional", kind: "XssMatchSets"}:              "List",

	{resource: "workdocs", kind: "Activities"}:                "Describe",
	{resource: "workdocs", kind: "Comments"}:                  "Describe",
	{resource: "workdocs", kind: "DocumentVersions"}:          "Describe",
	{resource: "workdocs", kind: "FolderContents"}:            "Describe",
	{resource: "workdocs", kind: "Groups"}:                    "Describe",
	{resource: "workdocs", kind: "NotificationSubscriptions"}: "Describe",
	{resource: "workdocs", kind: "ResourcePermissions"}:       "Describe",
	{resource: "workdocs", kind: "RootFolders"}:               "Describe",
	{resource: "workdocs", kind: "Users"}:                     "Describe",

	{resource: "workmail", kind: "Group"}:              "Describe",
	{resource: "workmail", kind: "Organization"}:       "Describe",
	{resource: "workmail", kind: "Resource"}:           "Describe",
	{resource: "workmail", kind: "User"}:               "Describe",
	{resource: "workmail", kind: "Aliases"}:            "List",
	{resource: "workmail", kind: "GroupMembers"}:       "List",
	{resource: "workmail", kind: "Groups"}:             "List",
	{resource: "workmail", kind: "MailboxPermissions"}: "List",
	{resource: "workmail", kind: "Organizations"}:      "List",
	{resource: "workmail", kind: "ResourceDelegates"}:  "List",
	{resource: "workmail", kind: "Resources"}:          "List",
	{resource: "workmail", kind: "Users"}:              "List",

	{resource: "workspaces", kind: "Account"}:                       "Describe",
	{resource: "workspaces", kind: "AccountModifications"}:          "Describe",
	{resource: "workspaces", kind: "ClientProperties"}:              "Describe",
	{resource: "workspaces", kind: "IpGroups"}:                      "Describe",
	{resource: "workspaces", kind: "Tags"}:                          "Describe",
	{resource: "workspaces", kind: "WorkspaceBundles"}:              "Describe",
	{resource: "workspaces", kind: "WorkspaceDirectories"}:          "Describe",
	{resource: "workspaces", kind: "WorkspaceImages"}:               "Describe",
	{resource: "workspaces", kind: "Workspaces"}:                    "Describe",
	{resource: "workspaces", kind: "WorkspacesConnectionStatus"}:    "Describe",
	{resource: "workspaces", kind: "AvailableManagementCidrRanges"}: "List",
}

func init() {
	// We have to generate this crawling the source code of the sdk of
	// CloudFormation or similar
	// This is a must :-(
	typeRegistry.Set("acm", new(acm.DescribeCertificateInput))
	typeRegistry.Set("acm", new(acm.ListCertificatesInput))
	typeRegistry.Set("acm", new(acm.ListTagsForCertificateInput))
	typeRegistry.Set("acmpca", new(acmpca.DescribeCertificateAuthorityInput))
	typeRegistry.Set("acmpca", new(acmpca.DescribeCertificateAuthorityAuditReportInput))
	typeRegistry.Set("acmpca", new(acmpca.ListCertificateAuthoritiesInput))
	typeRegistry.Set("acmpca", new(acmpca.ListTagsInput))
	typeRegistry.Set("alexaforbusiness", new(alexaforbusiness.ListBusinessReportSchedulesInput))
	typeRegistry.Set("alexaforbusiness", new(alexaforbusiness.ListConferenceProvidersInput))
	typeRegistry.Set("alexaforbusiness", new(alexaforbusiness.ListDeviceEventsInput))
	typeRegistry.Set("alexaforbusiness", new(alexaforbusiness.ListSkillsInput))
	typeRegistry.Set("alexaforbusiness", new(alexaforbusiness.ListSkillsStoreCategoriesInput))
	typeRegistry.Set("alexaforbusiness", new(alexaforbusiness.ListSkillsStoreSkillsByCategoryInput))
	typeRegistry.Set("alexaforbusiness", new(alexaforbusiness.ListSmartHomeAppliancesInput))
	typeRegistry.Set("alexaforbusiness", new(alexaforbusiness.ListTagsInput))
	typeRegistry.Set("amplify", new(amplify.ListAppsInput))
	typeRegistry.Set("amplify", new(amplify.ListBranchesInput))
	typeRegistry.Set("amplify", new(amplify.ListDomainAssociationsInput))
	typeRegistry.Set("amplify", new(amplify.ListJobsInput))
	typeRegistry.Set("applicationautoscaling", new(applicationautoscaling.DescribeScalableTargetsInput))
	typeRegistry.Set("applicationautoscaling", new(applicationautoscaling.DescribeScalingActivitiesInput))
	typeRegistry.Set("applicationautoscaling", new(applicationautoscaling.DescribeScalingPoliciesInput))
	typeRegistry.Set("applicationautoscaling", new(applicationautoscaling.DescribeScheduledActionsInput))
	typeRegistry.Set("applicationdiscoveryservice", new(applicationdiscoveryservice.DescribeAgentsInput))
	typeRegistry.Set("applicationdiscoveryservice", new(applicationdiscoveryservice.DescribeConfigurationsInput))
	typeRegistry.Set("applicationdiscoveryservice", new(applicationdiscoveryservice.DescribeContinuousExportsInput))
	typeRegistry.Set("applicationdiscoveryservice", new(applicationdiscoveryservice.DescribeExportConfigurationsInput))
	typeRegistry.Set("applicationdiscoveryservice", new(applicationdiscoveryservice.DescribeExportTasksInput))
	typeRegistry.Set("applicationdiscoveryservice", new(applicationdiscoveryservice.DescribeTagsInput))
	typeRegistry.Set("applicationdiscoveryservice", new(applicationdiscoveryservice.ListConfigurationsInput))
	typeRegistry.Set("applicationdiscoveryservice", new(applicationdiscoveryservice.ListServerNeighborsInput))
	typeRegistry.Set("appmesh", new(appmesh.DescribeMeshInput))
	typeRegistry.Set("appmesh", new(appmesh.DescribeRouteInput))
	typeRegistry.Set("appmesh", new(appmesh.DescribeVirtualNodeInput))
	typeRegistry.Set("appmesh", new(appmesh.DescribeVirtualRouterInput))
	typeRegistry.Set("appmesh", new(appmesh.ListMeshesInput))
	typeRegistry.Set("appmesh", new(appmesh.ListRoutesInput))
	typeRegistry.Set("appmesh", new(appmesh.ListVirtualNodesInput))
	typeRegistry.Set("appmesh", new(appmesh.ListVirtualRoutersInput))
	typeRegistry.Set("appstream", new(appstream.DescribeDirectoryConfigsInput))
	typeRegistry.Set("appstream", new(appstream.DescribeFleetsInput))
	typeRegistry.Set("appstream", new(appstream.DescribeImageBuildersInput))
	typeRegistry.Set("appstream", new(appstream.DescribeImagePermissionsInput))
	typeRegistry.Set("appstream", new(appstream.DescribeImagesInput))
	typeRegistry.Set("appstream", new(appstream.DescribeSessionsInput))
	typeRegistry.Set("appstream", new(appstream.DescribeStacksInput))
	typeRegistry.Set("appstream", new(appstream.DescribeUserStackAssociationsInput))
	typeRegistry.Set("appstream", new(appstream.DescribeUsersInput))
	typeRegistry.Set("appstream", new(appstream.ListAssociatedFleetsInput))
	typeRegistry.Set("appstream", new(appstream.ListAssociatedStacksInput))
	typeRegistry.Set("appstream", new(appstream.ListTagsForResourceInput))
	typeRegistry.Set("appsync", new(appsync.ListApiKeysInput))
	typeRegistry.Set("appsync", new(appsync.ListDataSourcesInput))
	typeRegistry.Set("appsync", new(appsync.ListFunctionsInput))
	typeRegistry.Set("appsync", new(appsync.ListGraphqlApisInput))
	typeRegistry.Set("appsync", new(appsync.ListResolversInput))
	typeRegistry.Set("appsync", new(appsync.ListResolversByFunctionInput))
	typeRegistry.Set("appsync", new(appsync.ListTypesInput))
	typeRegistry.Set("athena", new(athena.ListNamedQueriesInput))
	typeRegistry.Set("athena", new(athena.ListQueryExecutionsInput))
	typeRegistry.Set("autoscaling", new(autoscaling.DescribeAccountLimitsInput))
	typeRegistry.Set("autoscaling", new(autoscaling.DescribeAdjustmentTypesInput))
	typeRegistry.Set("autoscaling", new(autoscaling.DescribeAutoScalingGroupsInput))
	typeRegistry.Set("autoscaling", new(autoscaling.DescribeAutoScalingInstancesInput))
	typeRegistry.Set("autoscaling", new(autoscaling.DescribeAutoScalingNotificationTypesInput))
	typeRegistry.Set("autoscaling", new(autoscaling.DescribeLaunchConfigurationsInput))
	typeRegistry.Set("autoscaling", new(autoscaling.DescribeLifecycleHookTypesInput))
	typeRegistry.Set("autoscaling", new(autoscaling.DescribeLifecycleHooksInput))
	typeRegistry.Set("autoscaling", new(autoscaling.DescribeLoadBalancerTargetGroupsInput))
	typeRegistry.Set("autoscaling", new(autoscaling.DescribeLoadBalancersInput))
	typeRegistry.Set("autoscaling", new(autoscaling.DescribeMetricCollectionTypesInput))
	typeRegistry.Set("autoscaling", new(autoscaling.DescribeNotificationConfigurationsInput))
	typeRegistry.Set("autoscaling", new(autoscaling.DescribePoliciesInput))
	typeRegistry.Set("autoscaling", new(autoscaling.DescribeScalingActivitiesInput))
	typeRegistry.Set("autoscaling", new(autoscaling.DescribeScalingProcessTypesInput))
	typeRegistry.Set("autoscaling", new(autoscaling.DescribeScheduledActionsInput))
	typeRegistry.Set("autoscaling", new(autoscaling.DescribeTagsInput))
	typeRegistry.Set("autoscaling", new(autoscaling.DescribeTerminationPolicyTypesInput))
	typeRegistry.Set("autoscalingplans", new(autoscalingplans.DescribeScalingPlanResourcesInput))
	typeRegistry.Set("autoscalingplans", new(autoscalingplans.DescribeScalingPlansInput))
	typeRegistry.Set("batch", new(batch.DescribeComputeEnvironmentsInput))
	typeRegistry.Set("batch", new(batch.DescribeJobDefinitionsInput))
	typeRegistry.Set("batch", new(batch.DescribeJobQueuesInput))
	typeRegistry.Set("batch", new(batch.DescribeJobsInput))
	typeRegistry.Set("batch", new(batch.ListJobsInput))
	typeRegistry.Set("budgets", new(budgets.DescribeBudgetInput))
	typeRegistry.Set("budgets", new(budgets.DescribeBudgetPerformanceHistoryInput))
	typeRegistry.Set("budgets", new(budgets.DescribeBudgetsInput))
	typeRegistry.Set("budgets", new(budgets.DescribeNotificationsForBudgetInput))
	typeRegistry.Set("budgets", new(budgets.DescribeSubscribersForNotificationInput))
	typeRegistry.Set("chime", new(chime.ListAccountsInput))
	typeRegistry.Set("chime", new(chime.ListUsersInput))
	typeRegistry.Set("cloud9", new(cloud9.DescribeEnvironmentMembershipsInput))
	typeRegistry.Set("cloud9", new(cloud9.DescribeEnvironmentStatusInput))
	typeRegistry.Set("cloud9", new(cloud9.DescribeEnvironmentsInput))
	typeRegistry.Set("cloud9", new(cloud9.ListEnvironmentsInput))
	typeRegistry.Set("clouddirectory", new(clouddirectory.ListAppliedSchemaArnsInput))
	typeRegistry.Set("clouddirectory", new(clouddirectory.ListAttachedIndicesInput))
	typeRegistry.Set("clouddirectory", new(clouddirectory.ListDevelopmentSchemaArnsInput))
	typeRegistry.Set("clouddirectory", new(clouddirectory.ListDirectoriesInput))
	typeRegistry.Set("clouddirectory", new(clouddirectory.ListFacetAttributesInput))
	typeRegistry.Set("clouddirectory", new(clouddirectory.ListFacetNamesInput))
	typeRegistry.Set("clouddirectory", new(clouddirectory.ListIncomingTypedLinksInput))
	typeRegistry.Set("clouddirectory", new(clouddirectory.ListIndexInput))
	typeRegistry.Set("clouddirectory", new(clouddirectory.ListManagedSchemaArnsInput))
	typeRegistry.Set("clouddirectory", new(clouddirectory.ListObjectAttributesInput))
	typeRegistry.Set("clouddirectory", new(clouddirectory.ListObjectChildrenInput))
	typeRegistry.Set("clouddirectory", new(clouddirectory.ListObjectParentPathsInput))
	typeRegistry.Set("clouddirectory", new(clouddirectory.ListObjectParentsInput))
	typeRegistry.Set("clouddirectory", new(clouddirectory.ListObjectPoliciesInput))
	typeRegistry.Set("clouddirectory", new(clouddirectory.ListOutgoingTypedLinksInput))
	typeRegistry.Set("clouddirectory", new(clouddirectory.ListPolicyAttachmentsInput))
	typeRegistry.Set("clouddirectory", new(clouddirectory.ListPublishedSchemaArnsInput))
	typeRegistry.Set("clouddirectory", new(clouddirectory.ListTagsForResourceInput))
	typeRegistry.Set("clouddirectory", new(clouddirectory.ListTypedLinkFacetAttributesInput))
	typeRegistry.Set("clouddirectory", new(clouddirectory.ListTypedLinkFacetNamesInput))
	typeRegistry.Set("cloudfront", new(cloudfront.ListCloudFrontOriginAccessIdentitiesInput))
	typeRegistry.Set("cloudfront", new(cloudfront.ListDistributionsInput))
	typeRegistry.Set("cloudfront", new(cloudfront.ListDistributionsByWebACLIdInput))
	typeRegistry.Set("cloudfront", new(cloudfront.ListFieldLevelEncryptionConfigsInput))
	typeRegistry.Set("cloudfront", new(cloudfront.ListFieldLevelEncryptionProfilesInput))
	typeRegistry.Set("cloudfront", new(cloudfront.ListInvalidationsInput))
	typeRegistry.Set("cloudfront", new(cloudfront.ListPublicKeysInput))
	typeRegistry.Set("cloudfront", new(cloudfront.ListStreamingDistributionsInput))
	typeRegistry.Set("cloudfront", new(cloudfront.ListTagsForResourceInput))
	typeRegistry.Set("cloudhsm", new(cloudhsm.DescribeHapgInput))
	typeRegistry.Set("cloudhsm", new(cloudhsm.DescribeHsmInput))
	typeRegistry.Set("cloudhsm", new(cloudhsm.DescribeLunaClientInput))
	typeRegistry.Set("cloudhsm", new(cloudhsm.ListAvailableZonesInput))
	typeRegistry.Set("cloudhsm", new(cloudhsm.ListHapgsInput))
	typeRegistry.Set("cloudhsm", new(cloudhsm.ListHsmsInput))
	typeRegistry.Set("cloudhsm", new(cloudhsm.ListLunaClientsInput))
	typeRegistry.Set("cloudhsm", new(cloudhsm.ListTagsForResourceInput))
	typeRegistry.Set("cloudhsmv2", new(cloudhsmv2.DescribeBackupsInput))
	typeRegistry.Set("cloudhsmv2", new(cloudhsmv2.DescribeClustersInput))
	typeRegistry.Set("cloudhsmv2", new(cloudhsmv2.ListTagsInput))
	typeRegistry.Set("cloudsearch", new(cloudsearch.DescribeAnalysisSchemesInput))
	typeRegistry.Set("cloudsearch", new(cloudsearch.DescribeAvailabilityOptionsInput))
	typeRegistry.Set("cloudsearch", new(cloudsearch.DescribeDomainsInput))
	typeRegistry.Set("cloudsearch", new(cloudsearch.DescribeExpressionsInput))
	typeRegistry.Set("cloudsearch", new(cloudsearch.DescribeIndexFieldsInput))
	typeRegistry.Set("cloudsearch", new(cloudsearch.DescribeScalingParametersInput))
	typeRegistry.Set("cloudsearch", new(cloudsearch.DescribeServiceAccessPoliciesInput))
	typeRegistry.Set("cloudsearch", new(cloudsearch.DescribeSuggestersInput))
	typeRegistry.Set("cloudsearch", new(cloudsearch.ListDomainNamesInput))
	typeRegistry.Set("cloudtrail", new(cloudtrail.DescribeTrailsInput))
	typeRegistry.Set("cloudtrail", new(cloudtrail.ListPublicKeysInput))
	typeRegistry.Set("cloudtrail", new(cloudtrail.ListTagsInput))
	typeRegistry.Set("cloudwatch", new(cloudwatch.DescribeAlarmHistoryInput))
	typeRegistry.Set("cloudwatch", new(cloudwatch.DescribeAlarmsInput))
	typeRegistry.Set("cloudwatch", new(cloudwatch.DescribeAlarmsForMetricInput))
	typeRegistry.Set("cloudwatch", new(cloudwatch.ListDashboardsInput))
	typeRegistry.Set("cloudwatch", new(cloudwatch.ListMetricsInput))
	typeRegistry.Set("cloudwatchevents", new(cloudwatchevents.DescribeEventBusInput))
	typeRegistry.Set("cloudwatchevents", new(cloudwatchevents.DescribeRuleInput))
	typeRegistry.Set("cloudwatchevents", new(cloudwatchevents.ListRuleNamesByTargetInput))
	typeRegistry.Set("cloudwatchevents", new(cloudwatchevents.ListRulesInput))
	typeRegistry.Set("cloudwatchevents", new(cloudwatchevents.ListTargetsByRuleInput))
	typeRegistry.Set("cloudwatchlogs", new(cloudwatchlogs.DescribeDestinationsInput))
	typeRegistry.Set("cloudwatchlogs", new(cloudwatchlogs.DescribeExportTasksInput))
	typeRegistry.Set("cloudwatchlogs", new(cloudwatchlogs.DescribeLogGroupsInput))
	typeRegistry.Set("cloudwatchlogs", new(cloudwatchlogs.DescribeLogStreamsInput))
	typeRegistry.Set("cloudwatchlogs", new(cloudwatchlogs.DescribeMetricFiltersInput))
	typeRegistry.Set("cloudwatchlogs", new(cloudwatchlogs.DescribeQueriesInput))
	typeRegistry.Set("cloudwatchlogs", new(cloudwatchlogs.DescribeResourcePoliciesInput))
	typeRegistry.Set("cloudwatchlogs", new(cloudwatchlogs.DescribeSubscriptionFiltersInput))
	typeRegistry.Set("cloudwatchlogs", new(cloudwatchlogs.ListTagsLogGroupInput))
	typeRegistry.Set("codebuild", new(codebuild.ListBuildsInput))
	typeRegistry.Set("codebuild", new(codebuild.ListBuildsForProjectInput))
	typeRegistry.Set("codebuild", new(codebuild.ListCuratedEnvironmentImagesInput))
	typeRegistry.Set("codebuild", new(codebuild.ListProjectsInput))
	typeRegistry.Set("codebuild", new(codebuild.ListSourceCredentialsInput))
	typeRegistry.Set("codecommit", new(codecommit.DescribePullRequestEventsInput))
	typeRegistry.Set("codecommit", new(codecommit.ListBranchesInput))
	typeRegistry.Set("codecommit", new(codecommit.ListPullRequestsInput))
	typeRegistry.Set("codecommit", new(codecommit.ListRepositoriesInput))
	typeRegistry.Set("codedeploy", new(codedeploy.ListApplicationRevisionsInput))
	typeRegistry.Set("codedeploy", new(codedeploy.ListApplicationsInput))
	typeRegistry.Set("codedeploy", new(codedeploy.ListDeploymentConfigsInput))
	typeRegistry.Set("codedeploy", new(codedeploy.ListDeploymentGroupsInput))
	typeRegistry.Set("codedeploy", new(codedeploy.ListDeploymentInstancesInput))
	typeRegistry.Set("codedeploy", new(codedeploy.ListDeploymentTargetsInput))
	typeRegistry.Set("codedeploy", new(codedeploy.ListDeploymentsInput))
	typeRegistry.Set("codedeploy", new(codedeploy.ListGitHubAccountTokenNamesInput))
	typeRegistry.Set("codedeploy", new(codedeploy.ListOnPremisesInstancesInput))
	typeRegistry.Set("codepipeline", new(codepipeline.ListActionTypesInput))
	typeRegistry.Set("codepipeline", new(codepipeline.ListPipelineExecutionsInput))
	typeRegistry.Set("codepipeline", new(codepipeline.ListPipelinesInput))
	typeRegistry.Set("codepipeline", new(codepipeline.ListWebhooksInput))
	typeRegistry.Set("codestar", new(codestar.DescribeProjectInput))
	typeRegistry.Set("codestar", new(codestar.DescribeUserProfileInput))
	typeRegistry.Set("codestar", new(codestar.ListProjectsInput))
	typeRegistry.Set("codestar", new(codestar.ListResourcesInput))
	typeRegistry.Set("codestar", new(codestar.ListTagsForProjectInput))
	typeRegistry.Set("codestar", new(codestar.ListTeamMembersInput))
	typeRegistry.Set("codestar", new(codestar.ListUserProfilesInput))
	typeRegistry.Set("cognitoidentity", new(cognitoidentity.DescribeIdentityInput))
	typeRegistry.Set("cognitoidentity", new(cognitoidentity.DescribeIdentityPoolInput))
	typeRegistry.Set("cognitoidentity", new(cognitoidentity.ListIdentitiesInput))
	typeRegistry.Set("cognitoidentity", new(cognitoidentity.ListIdentityPoolsInput))
	typeRegistry.Set("cognitoidentityprovider", new(cognitoidentityprovider.DescribeIdentityProviderInput))
	typeRegistry.Set("cognitoidentityprovider", new(cognitoidentityprovider.DescribeResourceServerInput))
	typeRegistry.Set("cognitoidentityprovider", new(cognitoidentityprovider.DescribeRiskConfigurationInput))
	typeRegistry.Set("cognitoidentityprovider", new(cognitoidentityprovider.DescribeUserImportJobInput))
	typeRegistry.Set("cognitoidentityprovider", new(cognitoidentityprovider.DescribeUserPoolInput))
	typeRegistry.Set("cognitoidentityprovider", new(cognitoidentityprovider.DescribeUserPoolClientInput))
	typeRegistry.Set("cognitoidentityprovider", new(cognitoidentityprovider.DescribeUserPoolDomainInput))
	typeRegistry.Set("cognitoidentityprovider", new(cognitoidentityprovider.ListDevicesInput))
	typeRegistry.Set("cognitoidentityprovider", new(cognitoidentityprovider.ListGroupsInput))
	typeRegistry.Set("cognitoidentityprovider", new(cognitoidentityprovider.ListIdentityProvidersInput))
	typeRegistry.Set("cognitoidentityprovider", new(cognitoidentityprovider.ListResourceServersInput))
	typeRegistry.Set("cognitoidentityprovider", new(cognitoidentityprovider.ListUserImportJobsInput))
	typeRegistry.Set("cognitoidentityprovider", new(cognitoidentityprovider.ListUserPoolClientsInput))
	typeRegistry.Set("cognitoidentityprovider", new(cognitoidentityprovider.ListUserPoolsInput))
	typeRegistry.Set("cognitoidentityprovider", new(cognitoidentityprovider.ListUsersInput))
	typeRegistry.Set("cognitoidentityprovider", new(cognitoidentityprovider.ListUsersInGroupInput))
	typeRegistry.Set("cognitosync", new(cognitosync.DescribeDatasetInput))
	typeRegistry.Set("cognitosync", new(cognitosync.DescribeIdentityPoolUsageInput))
	typeRegistry.Set("cognitosync", new(cognitosync.DescribeIdentityUsageInput))
	typeRegistry.Set("cognitosync", new(cognitosync.ListDatasetsInput))
	typeRegistry.Set("cognitosync", new(cognitosync.ListIdentityPoolUsageInput))
	typeRegistry.Set("cognitosync", new(cognitosync.ListRecordsInput))
	typeRegistry.Set("comprehend", new(comprehend.DescribeDocumentClassificationJobInput))
	typeRegistry.Set("comprehend", new(comprehend.DescribeDocumentClassifierInput))
	typeRegistry.Set("comprehend", new(comprehend.DescribeDominantLanguageDetectionJobInput))
	typeRegistry.Set("comprehend", new(comprehend.DescribeEntitiesDetectionJobInput))
	typeRegistry.Set("comprehend", new(comprehend.DescribeEntityRecognizerInput))
	typeRegistry.Set("comprehend", new(comprehend.DescribeKeyPhrasesDetectionJobInput))
	typeRegistry.Set("comprehend", new(comprehend.DescribeSentimentDetectionJobInput))
	typeRegistry.Set("comprehend", new(comprehend.DescribeTopicsDetectionJobInput))
	typeRegistry.Set("comprehend", new(comprehend.ListDocumentClassificationJobsInput))
	typeRegistry.Set("comprehend", new(comprehend.ListDocumentClassifiersInput))
	typeRegistry.Set("comprehend", new(comprehend.ListDominantLanguageDetectionJobsInput))
	typeRegistry.Set("comprehend", new(comprehend.ListEntitiesDetectionJobsInput))
	typeRegistry.Set("comprehend", new(comprehend.ListEntityRecognizersInput))
	typeRegistry.Set("comprehend", new(comprehend.ListKeyPhrasesDetectionJobsInput))
	typeRegistry.Set("comprehend", new(comprehend.ListSentimentDetectionJobsInput))
	typeRegistry.Set("comprehend", new(comprehend.ListTopicsDetectionJobsInput))
	typeRegistry.Set("configservice", new(configservice.DescribeAggregateComplianceByConfigRulesInput))
	typeRegistry.Set("configservice", new(configservice.DescribeAggregationAuthorizationsInput))
	typeRegistry.Set("configservice", new(configservice.DescribeComplianceByConfigRuleInput))
	typeRegistry.Set("configservice", new(configservice.DescribeComplianceByResourceInput))
	typeRegistry.Set("configservice", new(configservice.DescribeConfigRuleEvaluationStatusInput))
	typeRegistry.Set("configservice", new(configservice.DescribeConfigRulesInput))
	typeRegistry.Set("configservice", new(configservice.DescribeConfigurationAggregatorSourcesStatusInput))
	typeRegistry.Set("configservice", new(configservice.DescribeConfigurationAggregatorsInput))
	typeRegistry.Set("configservice", new(configservice.DescribeConfigurationRecorderStatusInput))
	typeRegistry.Set("configservice", new(configservice.DescribeConfigurationRecordersInput))
	typeRegistry.Set("configservice", new(configservice.DescribeDeliveryChannelStatusInput))
	typeRegistry.Set("configservice", new(configservice.DescribeDeliveryChannelsInput))
	typeRegistry.Set("configservice", new(configservice.DescribePendingAggregationRequestsInput))
	typeRegistry.Set("configservice", new(configservice.DescribeRetentionConfigurationsInput))
	typeRegistry.Set("configservice", new(configservice.ListAggregateDiscoveredResourcesInput))
	typeRegistry.Set("configservice", new(configservice.ListDiscoveredResourcesInput))
	typeRegistry.Set("connect", new(connect.DescribeUserInput))
	typeRegistry.Set("connect", new(connect.DescribeUserHierarchyGroupInput))
	typeRegistry.Set("connect", new(connect.DescribeUserHierarchyStructureInput))
	typeRegistry.Set("connect", new(connect.ListRoutingProfilesInput))
	typeRegistry.Set("connect", new(connect.ListSecurityProfilesInput))
	typeRegistry.Set("connect", new(connect.ListUserHierarchyGroupsInput))
	typeRegistry.Set("connect", new(connect.ListUsersInput))
	typeRegistry.Set("costandusagereportservice", new(costandusagereportservice.DescribeReportDefinitionsInput))
	typeRegistry.Set("databasemigrationservice", new(databasemigrationservice.DescribeAccountAttributesInput))
	typeRegistry.Set("databasemigrationservice", new(databasemigrationservice.DescribeCertificatesInput))
	typeRegistry.Set("databasemigrationservice", new(databasemigrationservice.DescribeConnectionsInput))
	typeRegistry.Set("databasemigrationservice", new(databasemigrationservice.DescribeEndpointTypesInput))
	typeRegistry.Set("databasemigrationservice", new(databasemigrationservice.DescribeEndpointsInput))
	typeRegistry.Set("databasemigrationservice", new(databasemigrationservice.DescribeEventCategoriesInput))
	typeRegistry.Set("databasemigrationservice", new(databasemigrationservice.DescribeEventSubscriptionsInput))
	typeRegistry.Set("databasemigrationservice", new(databasemigrationservice.DescribeEventsInput))
	typeRegistry.Set("databasemigrationservice", new(databasemigrationservice.DescribeOrderableReplicationInstancesInput))
	typeRegistry.Set("databasemigrationservice", new(databasemigrationservice.DescribeRefreshSchemasStatusInput))
	typeRegistry.Set("databasemigrationservice", new(databasemigrationservice.DescribeReplicationInstanceTaskLogsInput))
	typeRegistry.Set("databasemigrationservice", new(databasemigrationservice.DescribeReplicationInstancesInput))
	typeRegistry.Set("databasemigrationservice", new(databasemigrationservice.DescribeReplicationSubnetGroupsInput))
	typeRegistry.Set("databasemigrationservice", new(databasemigrationservice.DescribeReplicationTaskAssessmentResultsInput))
	typeRegistry.Set("databasemigrationservice", new(databasemigrationservice.DescribeReplicationTasksInput))
	typeRegistry.Set("databasemigrationservice", new(databasemigrationservice.DescribeSchemasInput))
	typeRegistry.Set("databasemigrationservice", new(databasemigrationservice.DescribeTableStatisticsInput))
	typeRegistry.Set("databasemigrationservice", new(databasemigrationservice.ListTagsForResourceInput))
	typeRegistry.Set("datapipeline", new(datapipeline.DescribeObjectsInput))
	typeRegistry.Set("datapipeline", new(datapipeline.DescribePipelinesInput))
	typeRegistry.Set("datapipeline", new(datapipeline.ListPipelinesInput))
	typeRegistry.Set("datasync", new(datasync.DescribeAgentInput))
	typeRegistry.Set("datasync", new(datasync.DescribeLocationEfsInput))
	typeRegistry.Set("datasync", new(datasync.DescribeLocationNfsInput))
	typeRegistry.Set("datasync", new(datasync.DescribeLocationS3Input))
	typeRegistry.Set("datasync", new(datasync.DescribeTaskInput))
	typeRegistry.Set("datasync", new(datasync.DescribeTaskExecutionInput))
	typeRegistry.Set("datasync", new(datasync.ListAgentsInput))
	typeRegistry.Set("datasync", new(datasync.ListLocationsInput))
	typeRegistry.Set("datasync", new(datasync.ListTagsForResourceInput))
	typeRegistry.Set("datasync", new(datasync.ListTaskExecutionsInput))
	typeRegistry.Set("datasync", new(datasync.ListTasksInput))
	typeRegistry.Set("dax", new(dax.DescribeClustersInput))
	typeRegistry.Set("dax", new(dax.DescribeDefaultParametersInput))
	typeRegistry.Set("dax", new(dax.DescribeEventsInput))
	typeRegistry.Set("dax", new(dax.DescribeParameterGroupsInput))
	typeRegistry.Set("dax", new(dax.DescribeParametersInput))
	typeRegistry.Set("dax", new(dax.DescribeSubnetGroupsInput))
	typeRegistry.Set("dax", new(dax.ListTagsInput))
	typeRegistry.Set("devicefarm", new(devicefarm.ListArtifactsInput))
	typeRegistry.Set("devicefarm", new(devicefarm.ListDeviceInstancesInput))
	typeRegistry.Set("devicefarm", new(devicefarm.ListDevicePoolsInput))
	typeRegistry.Set("devicefarm", new(devicefarm.ListDevicesInput))
	typeRegistry.Set("devicefarm", new(devicefarm.ListInstanceProfilesInput))
	typeRegistry.Set("devicefarm", new(devicefarm.ListJobsInput))
	typeRegistry.Set("devicefarm", new(devicefarm.ListNetworkProfilesInput))
	typeRegistry.Set("devicefarm", new(devicefarm.ListOfferingPromotionsInput))
	typeRegistry.Set("devicefarm", new(devicefarm.ListOfferingTransactionsInput))
	typeRegistry.Set("devicefarm", new(devicefarm.ListOfferingsInput))
	typeRegistry.Set("devicefarm", new(devicefarm.ListProjectsInput))
	typeRegistry.Set("devicefarm", new(devicefarm.ListRemoteAccessSessionsInput))
	typeRegistry.Set("devicefarm", new(devicefarm.ListRunsInput))
	typeRegistry.Set("devicefarm", new(devicefarm.ListSamplesInput))
	typeRegistry.Set("devicefarm", new(devicefarm.ListSuitesInput))
	typeRegistry.Set("devicefarm", new(devicefarm.ListTestsInput))
	typeRegistry.Set("devicefarm", new(devicefarm.ListUniqueProblemsInput))
	typeRegistry.Set("devicefarm", new(devicefarm.ListUploadsInput))
	typeRegistry.Set("devicefarm", new(devicefarm.ListVPCEConfigurationsInput))
	typeRegistry.Set("directconnect", new(directconnect.DescribeConnectionLoaInput))
	typeRegistry.Set("directconnect", new(directconnect.DescribeConnectionsInput))
	typeRegistry.Set("directconnect", new(directconnect.DescribeConnectionsOnInterconnectInput))
	typeRegistry.Set("directconnect", new(directconnect.DescribeDirectConnectGatewayAssociationsInput))
	typeRegistry.Set("directconnect", new(directconnect.DescribeDirectConnectGatewayAttachmentsInput))
	typeRegistry.Set("directconnect", new(directconnect.DescribeDirectConnectGatewaysInput))
	typeRegistry.Set("directconnect", new(directconnect.DescribeHostedConnectionsInput))
	typeRegistry.Set("directconnect", new(directconnect.DescribeInterconnectLoaInput))
	typeRegistry.Set("directconnect", new(directconnect.DescribeInterconnectsInput))
	typeRegistry.Set("directconnect", new(directconnect.DescribeLagsInput))
	typeRegistry.Set("directconnect", new(directconnect.DescribeLoaInput))
	typeRegistry.Set("directconnect", new(directconnect.DescribeLocationsInput))
	typeRegistry.Set("directconnect", new(directconnect.DescribeTagsInput))
	typeRegistry.Set("directconnect", new(directconnect.DescribeVirtualGatewaysInput))
	typeRegistry.Set("directconnect", new(directconnect.DescribeVirtualInterfacesInput))
	typeRegistry.Set("directoryservice", new(directoryservice.DescribeConditionalForwardersInput))
	typeRegistry.Set("directoryservice", new(directoryservice.DescribeDirectoriesInput))
	typeRegistry.Set("directoryservice", new(directoryservice.DescribeDomainControllersInput))
	typeRegistry.Set("directoryservice", new(directoryservice.DescribeEventTopicsInput))
	typeRegistry.Set("directoryservice", new(directoryservice.DescribeSharedDirectoriesInput))
	typeRegistry.Set("directoryservice", new(directoryservice.DescribeSnapshotsInput))
	typeRegistry.Set("directoryservice", new(directoryservice.DescribeTrustsInput))
	typeRegistry.Set("directoryservice", new(directoryservice.ListIpRoutesInput))
	typeRegistry.Set("directoryservice", new(directoryservice.ListLogSubscriptionsInput))
	typeRegistry.Set("directoryservice", new(directoryservice.ListSchemaExtensionsInput))
	typeRegistry.Set("directoryservice", new(directoryservice.ListTagsForResourceInput))
	typeRegistry.Set("dynamodb", new(dynamodb.DescribeBackupInput))
	typeRegistry.Set("dynamodb", new(dynamodb.DescribeContinuousBackupsInput))
	typeRegistry.Set("dynamodb", new(dynamodb.DescribeEndpointsInput))
	typeRegistry.Set("dynamodb", new(dynamodb.DescribeGlobalTableInput))
	typeRegistry.Set("dynamodb", new(dynamodb.DescribeGlobalTableSettingsInput))
	typeRegistry.Set("dynamodb", new(dynamodb.DescribeLimitsInput))
	typeRegistry.Set("dynamodb", new(dynamodb.DescribeTableInput))
	typeRegistry.Set("dynamodb", new(dynamodb.DescribeTimeToLiveInput))
	typeRegistry.Set("dynamodb", new(dynamodb.ListBackupsInput))
	typeRegistry.Set("dynamodb", new(dynamodb.ListGlobalTablesInput))
	typeRegistry.Set("dynamodb", new(dynamodb.ListTablesInput))
	typeRegistry.Set("dynamodb", new(dynamodb.ListTagsOfResourceInput))
	typeRegistry.Set("dynamodbstreams", new(dynamodbstreams.DescribeStreamInput))
	typeRegistry.Set("dynamodbstreams", new(dynamodbstreams.ListStreamsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeAccountAttributesInput))
	typeRegistry.Set("ec2", new(ec2.DescribeAddressesInput))
	typeRegistry.Set("ec2", new(ec2.DescribeAggregateIdFormatInput))
	typeRegistry.Set("ec2", new(ec2.DescribeAvailabilityZonesInput))
	typeRegistry.Set("ec2", new(ec2.DescribeBundleTasksInput))
	typeRegistry.Set("ec2", new(ec2.DescribeByoipCidrsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeCapacityReservationsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeClassicLinkInstancesInput))
	typeRegistry.Set("ec2", new(ec2.DescribeClientVpnAuthorizationRulesInput))
	typeRegistry.Set("ec2", new(ec2.DescribeClientVpnConnectionsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeClientVpnEndpointsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeClientVpnRoutesInput))
	typeRegistry.Set("ec2", new(ec2.DescribeClientVpnTargetNetworksInput))
	typeRegistry.Set("ec2", new(ec2.DescribeConversionTasksInput))
	typeRegistry.Set("ec2", new(ec2.DescribeCustomerGatewaysInput))
	typeRegistry.Set("ec2", new(ec2.DescribeDhcpOptionsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeEgressOnlyInternetGatewaysInput))
	typeRegistry.Set("ec2", new(ec2.DescribeElasticGpusInput))
	typeRegistry.Set("ec2", new(ec2.DescribeExportTasksInput))
	typeRegistry.Set("ec2", new(ec2.DescribeFleetHistoryInput))
	typeRegistry.Set("ec2", new(ec2.DescribeFleetInstancesInput))
	typeRegistry.Set("ec2", new(ec2.DescribeFleetsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeFlowLogsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeFpgaImageAttributeInput))
	typeRegistry.Set("ec2", new(ec2.DescribeFpgaImagesInput))
	typeRegistry.Set("ec2", new(ec2.DescribeHostReservationOfferingsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeHostReservationsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeHostsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeIamInstanceProfileAssociationsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeIdFormatInput))
	typeRegistry.Set("ec2", new(ec2.DescribeIdentityIdFormatInput))
	typeRegistry.Set("ec2", new(ec2.DescribeImageAttributeInput))
	typeRegistry.Set("ec2", new(ec2.DescribeImagesInput))
	typeRegistry.Set("ec2", new(ec2.DescribeImportImageTasksInput))
	typeRegistry.Set("ec2", new(ec2.DescribeImportSnapshotTasksInput))
	typeRegistry.Set("ec2", new(ec2.DescribeInstanceAttributeInput))
	typeRegistry.Set("ec2", new(ec2.DescribeInstanceCreditSpecificationsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeInstanceStatusInput))
	typeRegistry.Set("ec2", new(ec2.DescribeInstancesInput))
	typeRegistry.Set("ec2", new(ec2.DescribeInternetGatewaysInput))
	typeRegistry.Set("ec2", new(ec2.DescribeKeyPairsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeLaunchTemplateVersionsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeLaunchTemplatesInput))
	typeRegistry.Set("ec2", new(ec2.DescribeMovingAddressesInput))
	typeRegistry.Set("ec2", new(ec2.DescribeNatGatewaysInput))
	typeRegistry.Set("ec2", new(ec2.DescribeNetworkAclsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeNetworkInterfaceAttributeInput))
	typeRegistry.Set("ec2", new(ec2.DescribeNetworkInterfacePermissionsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeNetworkInterfacesInput))
	typeRegistry.Set("ec2", new(ec2.DescribePlacementGroupsInput))
	typeRegistry.Set("ec2", new(ec2.DescribePrefixListsInput))
	typeRegistry.Set("ec2", new(ec2.DescribePrincipalIdFormatInput))
	typeRegistry.Set("ec2", new(ec2.DescribePublicIpv4PoolsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeRegionsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeReservedInstancesInput))
	typeRegistry.Set("ec2", new(ec2.DescribeReservedInstancesListingsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeReservedInstancesModificationsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeReservedInstancesOfferingsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeRouteTablesInput))
	typeRegistry.Set("ec2", new(ec2.DescribeScheduledInstanceAvailabilityInput))
	typeRegistry.Set("ec2", new(ec2.DescribeScheduledInstancesInput))
	typeRegistry.Set("ec2", new(ec2.DescribeSecurityGroupReferencesInput))
	typeRegistry.Set("ec2", new(ec2.DescribeSecurityGroupsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeSnapshotAttributeInput))
	typeRegistry.Set("ec2", new(ec2.DescribeSnapshotsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeSpotDatafeedSubscriptionInput))
	typeRegistry.Set("ec2", new(ec2.DescribeSpotFleetInstancesInput))
	typeRegistry.Set("ec2", new(ec2.DescribeSpotFleetRequestHistoryInput))
	typeRegistry.Set("ec2", new(ec2.DescribeSpotFleetRequestsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeSpotInstanceRequestsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeSpotPriceHistoryInput))
	typeRegistry.Set("ec2", new(ec2.DescribeStaleSecurityGroupsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeSubnetsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeTagsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeTransitGatewayAttachmentsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeTransitGatewayRouteTablesInput))
	typeRegistry.Set("ec2", new(ec2.DescribeTransitGatewayVpcAttachmentsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeTransitGatewaysInput))
	typeRegistry.Set("ec2", new(ec2.DescribeVolumeAttributeInput))
	typeRegistry.Set("ec2", new(ec2.DescribeVolumeStatusInput))
	typeRegistry.Set("ec2", new(ec2.DescribeVolumesInput))
	typeRegistry.Set("ec2", new(ec2.DescribeVolumesModificationsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeVpcAttributeInput))
	typeRegistry.Set("ec2", new(ec2.DescribeVpcClassicLinkInput))
	typeRegistry.Set("ec2", new(ec2.DescribeVpcClassicLinkDnsSupportInput))
	typeRegistry.Set("ec2", new(ec2.DescribeVpcEndpointConnectionNotificationsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeVpcEndpointConnectionsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeVpcEndpointServiceConfigurationsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeVpcEndpointServicePermissionsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeVpcEndpointServicesInput))
	typeRegistry.Set("ec2", new(ec2.DescribeVpcEndpointsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeVpcPeeringConnectionsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeVpcsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeVpnConnectionsInput))
	typeRegistry.Set("ec2", new(ec2.DescribeVpnGatewaysInput))
	typeRegistry.Set("ecr", new(ecr.DescribeImagesInput))
	typeRegistry.Set("ecr", new(ecr.DescribeRepositoriesInput))
	typeRegistry.Set("ecr", new(ecr.ListImagesInput))
	typeRegistry.Set("ecr", new(ecr.ListTagsForResourceInput))
	typeRegistry.Set("ecs", new(ecs.DescribeClustersInput))
	typeRegistry.Set("ecs", new(ecs.DescribeContainerInstancesInput))
	typeRegistry.Set("ecs", new(ecs.DescribeServicesInput))
	typeRegistry.Set("ecs", new(ecs.DescribeTaskDefinitionInput))
	typeRegistry.Set("ecs", new(ecs.DescribeTasksInput))
	typeRegistry.Set("ecs", new(ecs.ListAccountSettingsInput))
	typeRegistry.Set("ecs", new(ecs.ListAttributesInput))
	typeRegistry.Set("ecs", new(ecs.ListClustersInput))
	typeRegistry.Set("ecs", new(ecs.ListContainerInstancesInput))
	typeRegistry.Set("ecs", new(ecs.ListServicesInput))
	typeRegistry.Set("ecs", new(ecs.ListTagsForResourceInput))
	typeRegistry.Set("ecs", new(ecs.ListTaskDefinitionFamiliesInput))
	typeRegistry.Set("ecs", new(ecs.ListTaskDefinitionsInput))
	typeRegistry.Set("ecs", new(ecs.ListTasksInput))
	typeRegistry.Set("efs", new(efs.DescribeFileSystemsInput))
	typeRegistry.Set("efs", new(efs.DescribeMountTargetSecurityGroupsInput))
	typeRegistry.Set("efs", new(efs.DescribeMountTargetsInput))
	typeRegistry.Set("efs", new(efs.DescribeTagsInput))
	typeRegistry.Set("eks", new(eks.DescribeClusterInput))
	typeRegistry.Set("eks", new(eks.DescribeUpdateInput))
	typeRegistry.Set("eks", new(eks.ListClustersInput))
	typeRegistry.Set("eks", new(eks.ListUpdatesInput))
	typeRegistry.Set("elasticache", new(elasticache.DescribeCacheClustersInput))
	typeRegistry.Set("elasticache", new(elasticache.DescribeCacheEngineVersionsInput))
	typeRegistry.Set("elasticache", new(elasticache.DescribeCacheParameterGroupsInput))
	typeRegistry.Set("elasticache", new(elasticache.DescribeCacheParametersInput))
	typeRegistry.Set("elasticache", new(elasticache.DescribeCacheSecurityGroupsInput))
	typeRegistry.Set("elasticache", new(elasticache.DescribeCacheSubnetGroupsInput))
	typeRegistry.Set("elasticache", new(elasticache.DescribeEngineDefaultParametersInput))
	typeRegistry.Set("elasticache", new(elasticache.DescribeEventsInput))
	typeRegistry.Set("elasticache", new(elasticache.DescribeReplicationGroupsInput))
	typeRegistry.Set("elasticache", new(elasticache.DescribeReservedCacheNodesInput))
	typeRegistry.Set("elasticache", new(elasticache.DescribeReservedCacheNodesOfferingsInput))
	typeRegistry.Set("elasticache", new(elasticache.DescribeSnapshotsInput))
	typeRegistry.Set("elasticache", new(elasticache.ListAllowedNodeTypeModificationsInput))
	typeRegistry.Set("elasticache", new(elasticache.ListTagsForResourceInput))
	typeRegistry.Set("elasticbeanstalk", new(elasticbeanstalk.DescribeAccountAttributesInput))
	typeRegistry.Set("elasticbeanstalk", new(elasticbeanstalk.DescribeApplicationVersionsInput))
	typeRegistry.Set("elasticbeanstalk", new(elasticbeanstalk.DescribeApplicationsInput))
	typeRegistry.Set("elasticbeanstalk", new(elasticbeanstalk.DescribeConfigurationOptionsInput))
	typeRegistry.Set("elasticbeanstalk", new(elasticbeanstalk.DescribeConfigurationSettingsInput))
	typeRegistry.Set("elasticbeanstalk", new(elasticbeanstalk.DescribeEnvironmentHealthInput))
	typeRegistry.Set("elasticbeanstalk", new(elasticbeanstalk.DescribeEnvironmentManagedActionHistoryInput))
	typeRegistry.Set("elasticbeanstalk", new(elasticbeanstalk.DescribeEnvironmentManagedActionsInput))
	typeRegistry.Set("elasticbeanstalk", new(elasticbeanstalk.DescribeEnvironmentResourcesInput))
	typeRegistry.Set("elasticbeanstalk", new(elasticbeanstalk.DescribeEnvironmentsInput))
	typeRegistry.Set("elasticbeanstalk", new(elasticbeanstalk.DescribeEventsInput))
	typeRegistry.Set("elasticbeanstalk", new(elasticbeanstalk.DescribeInstancesHealthInput))
	typeRegistry.Set("elasticbeanstalk", new(elasticbeanstalk.DescribePlatformVersionInput))
	typeRegistry.Set("elasticbeanstalk", new(elasticbeanstalk.ListAvailableSolutionStacksInput))
	typeRegistry.Set("elasticbeanstalk", new(elasticbeanstalk.ListPlatformVersionsInput))
	typeRegistry.Set("elasticbeanstalk", new(elasticbeanstalk.ListTagsForResourceInput))
	typeRegistry.Set("elasticsearchservice", new(elasticsearchservice.DescribeElasticsearchDomainInput))
	typeRegistry.Set("elasticsearchservice", new(elasticsearchservice.DescribeElasticsearchDomainConfigInput))
	typeRegistry.Set("elasticsearchservice", new(elasticsearchservice.DescribeElasticsearchDomainsInput))
	typeRegistry.Set("elasticsearchservice", new(elasticsearchservice.DescribeElasticsearchInstanceTypeLimitsInput))
	typeRegistry.Set("elasticsearchservice", new(elasticsearchservice.DescribeReservedElasticsearchInstanceOfferingsInput))
	typeRegistry.Set("elasticsearchservice", new(elasticsearchservice.DescribeReservedElasticsearchInstancesInput))
	typeRegistry.Set("elasticsearchservice", new(elasticsearchservice.ListDomainNamesInput))
	typeRegistry.Set("elasticsearchservice", new(elasticsearchservice.ListElasticsearchInstanceTypesInput))
	typeRegistry.Set("elasticsearchservice", new(elasticsearchservice.ListElasticsearchVersionsInput))
	typeRegistry.Set("elasticsearchservice", new(elasticsearchservice.ListTagsInput))
	typeRegistry.Set("elastictranscoder", new(elastictranscoder.ListJobsByPipelineInput))
	typeRegistry.Set("elastictranscoder", new(elastictranscoder.ListJobsByStatusInput))
	typeRegistry.Set("elastictranscoder", new(elastictranscoder.ListPipelinesInput))
	typeRegistry.Set("elastictranscoder", new(elastictranscoder.ListPresetsInput))
	typeRegistry.Set("elb", new(elb.DescribeAccountLimitsInput))
	typeRegistry.Set("elb", new(elb.DescribeInstanceHealthInput))
	typeRegistry.Set("elb", new(elb.DescribeLoadBalancerAttributesInput))
	typeRegistry.Set("elb", new(elb.DescribeLoadBalancerPoliciesInput))
	typeRegistry.Set("elb", new(elb.DescribeLoadBalancerPolicyTypesInput))
	typeRegistry.Set("elb", new(elb.DescribeLoadBalancersInput))
	typeRegistry.Set("elb", new(elb.DescribeTagsInput))
	typeRegistry.Set("elbv2", new(elbv2.DescribeAccountLimitsInput))
	typeRegistry.Set("elbv2", new(elbv2.DescribeListenerCertificatesInput))
	typeRegistry.Set("elbv2", new(elbv2.DescribeListenersInput))
	typeRegistry.Set("elbv2", new(elbv2.DescribeLoadBalancerAttributesInput))
	typeRegistry.Set("elbv2", new(elbv2.DescribeLoadBalancersInput))
	typeRegistry.Set("elbv2", new(elbv2.DescribeRulesInput))
	typeRegistry.Set("elbv2", new(elbv2.DescribeSSLPoliciesInput))
	typeRegistry.Set("elbv2", new(elbv2.DescribeTagsInput))
	typeRegistry.Set("elbv2", new(elbv2.DescribeTargetGroupAttributesInput))
	typeRegistry.Set("elbv2", new(elbv2.DescribeTargetGroupsInput))
	typeRegistry.Set("elbv2", new(elbv2.DescribeTargetHealthInput))
	typeRegistry.Set("emr", new(emr.DescribeClusterInput))
	typeRegistry.Set("emr", new(emr.DescribeJobFlowsInput))
	typeRegistry.Set("emr", new(emr.DescribeSecurityConfigurationInput))
	typeRegistry.Set("emr", new(emr.DescribeStepInput))
	typeRegistry.Set("emr", new(emr.ListBootstrapActionsInput))
	typeRegistry.Set("emr", new(emr.ListClustersInput))
	typeRegistry.Set("emr", new(emr.ListInstanceFleetsInput))
	typeRegistry.Set("emr", new(emr.ListInstanceGroupsInput))
	typeRegistry.Set("emr", new(emr.ListInstancesInput))
	typeRegistry.Set("emr", new(emr.ListSecurityConfigurationsInput))
	typeRegistry.Set("emr", new(emr.ListStepsInput))
	typeRegistry.Set("firehose", new(firehose.DescribeDeliveryStreamInput))
	typeRegistry.Set("firehose", new(firehose.ListDeliveryStreamsInput))
	typeRegistry.Set("firehose", new(firehose.ListTagsForDeliveryStreamInput))
	typeRegistry.Set("fms", new(fms.ListComplianceStatusInput))
	typeRegistry.Set("fms", new(fms.ListMemberAccountsInput))
	typeRegistry.Set("fms", new(fms.ListPoliciesInput))
	typeRegistry.Set("fsx", new(fsx.DescribeBackupsInput))
	typeRegistry.Set("fsx", new(fsx.DescribeFileSystemsInput))
	typeRegistry.Set("fsx", new(fsx.ListTagsForResourceInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribeAliasInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribeBuildInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribeEC2InstanceLimitsInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribeFleetAttributesInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribeFleetCapacityInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribeFleetEventsInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribeFleetPortSettingsInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribeFleetUtilizationInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribeGameSessionDetailsInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribeGameSessionPlacementInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribeGameSessionQueuesInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribeGameSessionsInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribeInstancesInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribeMatchmakingInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribeMatchmakingConfigurationsInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribeMatchmakingRuleSetsInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribePlayerSessionsInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribeRuntimeConfigurationInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribeScalingPoliciesInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribeVpcPeeringAuthorizationsInput))
	typeRegistry.Set("gamelift", new(gamelift.DescribeVpcPeeringConnectionsInput))
	typeRegistry.Set("gamelift", new(gamelift.ListAliasesInput))
	typeRegistry.Set("gamelift", new(gamelift.ListBuildsInput))
	typeRegistry.Set("gamelift", new(gamelift.ListFleetsInput))
	typeRegistry.Set("glacier", new(glacier.DescribeJobInput))
	typeRegistry.Set("glacier", new(glacier.DescribeVaultInput))
	typeRegistry.Set("glacier", new(glacier.ListJobsInput))
	typeRegistry.Set("glacier", new(glacier.ListMultipartUploadsInput))
	typeRegistry.Set("glacier", new(glacier.ListPartsInput))
	typeRegistry.Set("glacier", new(glacier.ListProvisionedCapacityInput))
	typeRegistry.Set("glacier", new(glacier.ListTagsForVaultInput))
	typeRegistry.Set("glacier", new(glacier.ListVaultsInput))
	typeRegistry.Set("globalaccelerator", new(globalaccelerator.DescribeAcceleratorInput))
	typeRegistry.Set("globalaccelerator", new(globalaccelerator.DescribeAcceleratorAttributesInput))
	typeRegistry.Set("globalaccelerator", new(globalaccelerator.DescribeEndpointGroupInput))
	typeRegistry.Set("globalaccelerator", new(globalaccelerator.DescribeListenerInput))
	typeRegistry.Set("globalaccelerator", new(globalaccelerator.ListAcceleratorsInput))
	typeRegistry.Set("globalaccelerator", new(globalaccelerator.ListEndpointGroupsInput))
	typeRegistry.Set("globalaccelerator", new(globalaccelerator.ListListenersInput))
	typeRegistry.Set("greengrass", new(greengrass.ListBulkDeploymentDetailedReportsInput))
	typeRegistry.Set("greengrass", new(greengrass.ListBulkDeploymentsInput))
	typeRegistry.Set("greengrass", new(greengrass.ListConnectorDefinitionVersionsInput))
	typeRegistry.Set("greengrass", new(greengrass.ListConnectorDefinitionsInput))
	typeRegistry.Set("greengrass", new(greengrass.ListCoreDefinitionVersionsInput))
	typeRegistry.Set("greengrass", new(greengrass.ListCoreDefinitionsInput))
	typeRegistry.Set("greengrass", new(greengrass.ListDeploymentsInput))
	typeRegistry.Set("greengrass", new(greengrass.ListDeviceDefinitionVersionsInput))
	typeRegistry.Set("greengrass", new(greengrass.ListDeviceDefinitionsInput))
	typeRegistry.Set("greengrass", new(greengrass.ListFunctionDefinitionVersionsInput))
	typeRegistry.Set("greengrass", new(greengrass.ListFunctionDefinitionsInput))
	typeRegistry.Set("greengrass", new(greengrass.ListGroupCertificateAuthoritiesInput))
	typeRegistry.Set("greengrass", new(greengrass.ListGroupVersionsInput))
	typeRegistry.Set("greengrass", new(greengrass.ListGroupsInput))
	typeRegistry.Set("greengrass", new(greengrass.ListLoggerDefinitionVersionsInput))
	typeRegistry.Set("greengrass", new(greengrass.ListLoggerDefinitionsInput))
	typeRegistry.Set("greengrass", new(greengrass.ListResourceDefinitionVersionsInput))
	typeRegistry.Set("greengrass", new(greengrass.ListResourceDefinitionsInput))
	typeRegistry.Set("greengrass", new(greengrass.ListSubscriptionDefinitionVersionsInput))
	typeRegistry.Set("greengrass", new(greengrass.ListSubscriptionDefinitionsInput))
	typeRegistry.Set("guardduty", new(guardduty.ListDetectorsInput))
	typeRegistry.Set("guardduty", new(guardduty.ListFiltersInput))
	typeRegistry.Set("guardduty", new(guardduty.ListFindingsInput))
	typeRegistry.Set("guardduty", new(guardduty.ListIPSetsInput))
	typeRegistry.Set("guardduty", new(guardduty.ListInvitationsInput))
	typeRegistry.Set("guardduty", new(guardduty.ListMembersInput))
	typeRegistry.Set("guardduty", new(guardduty.ListThreatIntelSetsInput))
	typeRegistry.Set("health", new(health.DescribeAffectedEntitiesInput))
	typeRegistry.Set("health", new(health.DescribeEntityAggregatesInput))
	typeRegistry.Set("health", new(health.DescribeEventAggregatesInput))
	typeRegistry.Set("health", new(health.DescribeEventDetailsInput))
	typeRegistry.Set("health", new(health.DescribeEventTypesInput))
	typeRegistry.Set("health", new(health.DescribeEventsInput))
	typeRegistry.Set("iam", new(iam.ListAccessKeysInput))
	typeRegistry.Set("iam", new(iam.ListAccountAliasesInput))
	typeRegistry.Set("iam", new(iam.ListAttachedGroupPoliciesInput))
	typeRegistry.Set("iam", new(iam.ListAttachedRolePoliciesInput))
	typeRegistry.Set("iam", new(iam.ListAttachedUserPoliciesInput))
	typeRegistry.Set("iam", new(iam.ListEntitiesForPolicyInput))
	typeRegistry.Set("iam", new(iam.ListGroupPoliciesInput))
	typeRegistry.Set("iam", new(iam.ListGroupsInput))
	typeRegistry.Set("iam", new(iam.ListGroupsForUserInput))
	typeRegistry.Set("iam", new(iam.ListInstanceProfilesInput))
	typeRegistry.Set("iam", new(iam.ListInstanceProfilesForRoleInput))
	typeRegistry.Set("iam", new(iam.ListMFADevicesInput))
	typeRegistry.Set("iam", new(iam.ListOpenIDConnectProvidersInput))
	typeRegistry.Set("iam", new(iam.ListPoliciesInput))
	typeRegistry.Set("iam", new(iam.ListPoliciesGrantingServiceAccessInput))
	typeRegistry.Set("iam", new(iam.ListPolicyVersionsInput))
	typeRegistry.Set("iam", new(iam.ListRolePoliciesInput))
	typeRegistry.Set("iam", new(iam.ListRoleTagsInput))
	typeRegistry.Set("iam", new(iam.ListRolesInput))
	typeRegistry.Set("iam", new(iam.ListSAMLProvidersInput))
	typeRegistry.Set("iam", new(iam.ListSSHPublicKeysInput))
	typeRegistry.Set("iam", new(iam.ListServerCertificatesInput))
	typeRegistry.Set("iam", new(iam.ListServiceSpecificCredentialsInput))
	typeRegistry.Set("iam", new(iam.ListSigningCertificatesInput))
	typeRegistry.Set("iam", new(iam.ListUserPoliciesInput))
	typeRegistry.Set("iam", new(iam.ListUserTagsInput))
	typeRegistry.Set("iam", new(iam.ListUsersInput))
	typeRegistry.Set("iam", new(iam.ListVirtualMFADevicesInput))
	typeRegistry.Set("inspector", new(inspector.DescribeAssessmentRunsInput))
	typeRegistry.Set("inspector", new(inspector.DescribeAssessmentTargetsInput))
	typeRegistry.Set("inspector", new(inspector.DescribeAssessmentTemplatesInput))
	typeRegistry.Set("inspector", new(inspector.DescribeCrossAccountAccessRoleInput))
	typeRegistry.Set("inspector", new(inspector.DescribeExclusionsInput))
	typeRegistry.Set("inspector", new(inspector.DescribeFindingsInput))
	typeRegistry.Set("inspector", new(inspector.DescribeResourceGroupsInput))
	typeRegistry.Set("inspector", new(inspector.DescribeRulesPackagesInput))
	typeRegistry.Set("inspector", new(inspector.ListAssessmentRunAgentsInput))
	typeRegistry.Set("inspector", new(inspector.ListAssessmentRunsInput))
	typeRegistry.Set("inspector", new(inspector.ListAssessmentTargetsInput))
	typeRegistry.Set("inspector", new(inspector.ListAssessmentTemplatesInput))
	typeRegistry.Set("inspector", new(inspector.ListEventSubscriptionsInput))
	typeRegistry.Set("inspector", new(inspector.ListExclusionsInput))
	typeRegistry.Set("inspector", new(inspector.ListFindingsInput))
	typeRegistry.Set("inspector", new(inspector.ListRulesPackagesInput))
	typeRegistry.Set("inspector", new(inspector.ListTagsForResourceInput))
	typeRegistry.Set("iot", new(iot.DescribeAccountAuditConfigurationInput))
	typeRegistry.Set("iot", new(iot.DescribeAuditTaskInput))
	typeRegistry.Set("iot", new(iot.DescribeAuthorizerInput))
	typeRegistry.Set("iot", new(iot.DescribeBillingGroupInput))
	typeRegistry.Set("iot", new(iot.DescribeCACertificateInput))
	typeRegistry.Set("iot", new(iot.DescribeCertificateInput))
	typeRegistry.Set("iot", new(iot.DescribeDefaultAuthorizerInput))
	typeRegistry.Set("iot", new(iot.DescribeEndpointInput))
	typeRegistry.Set("iot", new(iot.DescribeEventConfigurationsInput))
	typeRegistry.Set("iot", new(iot.DescribeIndexInput))
	typeRegistry.Set("iot", new(iot.DescribeJobInput))
	typeRegistry.Set("iot", new(iot.DescribeJobExecutionInput))
	typeRegistry.Set("iot", new(iot.DescribeRoleAliasInput))
	typeRegistry.Set("iot", new(iot.DescribeScheduledAuditInput))
	typeRegistry.Set("iot", new(iot.DescribeSecurityProfileInput))
	typeRegistry.Set("iot", new(iot.DescribeStreamInput))
	typeRegistry.Set("iot", new(iot.DescribeThingInput))
	typeRegistry.Set("iot", new(iot.DescribeThingGroupInput))
	typeRegistry.Set("iot", new(iot.DescribeThingRegistrationTaskInput))
	typeRegistry.Set("iot", new(iot.DescribeThingTypeInput))
	typeRegistry.Set("iot", new(iot.ListActiveViolationsInput))
	typeRegistry.Set("iot", new(iot.ListAttachedPoliciesInput))
	typeRegistry.Set("iot", new(iot.ListAuditFindingsInput))
	typeRegistry.Set("iot", new(iot.ListAuditTasksInput))
	typeRegistry.Set("iot", new(iot.ListAuthorizersInput))
	typeRegistry.Set("iot", new(iot.ListBillingGroupsInput))
	typeRegistry.Set("iot", new(iot.ListCACertificatesInput))
	typeRegistry.Set("iot", new(iot.ListCertificatesInput))
	typeRegistry.Set("iot", new(iot.ListCertificatesByCAInput))
	typeRegistry.Set("iot", new(iot.ListIndicesInput))
	typeRegistry.Set("iot", new(iot.ListJobExecutionsForJobInput))
	typeRegistry.Set("iot", new(iot.ListJobExecutionsForThingInput))
	typeRegistry.Set("iot", new(iot.ListJobsInput))
	typeRegistry.Set("iot", new(iot.ListOTAUpdatesInput))
	typeRegistry.Set("iot", new(iot.ListOutgoingCertificatesInput))
	typeRegistry.Set("iot", new(iot.ListPoliciesInput))
	typeRegistry.Set("iot", new(iot.ListPolicyPrincipalsInput))
	typeRegistry.Set("iot", new(iot.ListPolicyVersionsInput))
	typeRegistry.Set("iot", new(iot.ListPrincipalPoliciesInput))
	typeRegistry.Set("iot", new(iot.ListPrincipalThingsInput))
	typeRegistry.Set("iot", new(iot.ListRoleAliasesInput))
	typeRegistry.Set("iot", new(iot.ListScheduledAuditsInput))
	typeRegistry.Set("iot", new(iot.ListSecurityProfilesInput))
	typeRegistry.Set("iot", new(iot.ListSecurityProfilesForTargetInput))
	typeRegistry.Set("iot", new(iot.ListStreamsInput))
	typeRegistry.Set("iot", new(iot.ListTagsForResourceInput))
	typeRegistry.Set("iot", new(iot.ListTargetsForPolicyInput))
	typeRegistry.Set("iot", new(iot.ListTargetsForSecurityProfileInput))
	typeRegistry.Set("iot", new(iot.ListThingGroupsInput))
	typeRegistry.Set("iot", new(iot.ListThingGroupsForThingInput))
	typeRegistry.Set("iot", new(iot.ListThingPrincipalsInput))
	typeRegistry.Set("iot", new(iot.ListThingRegistrationTaskReportsInput))
	typeRegistry.Set("iot", new(iot.ListThingRegistrationTasksInput))
	typeRegistry.Set("iot", new(iot.ListThingTypesInput))
	typeRegistry.Set("iot", new(iot.ListThingsInput))
	typeRegistry.Set("iot", new(iot.ListThingsInBillingGroupInput))
	typeRegistry.Set("iot", new(iot.ListThingsInThingGroupInput))
	typeRegistry.Set("iot", new(iot.ListTopicRulesInput))
	typeRegistry.Set("iot", new(iot.ListV2LoggingLevelsInput))
	typeRegistry.Set("iot", new(iot.ListViolationEventsInput))
	typeRegistry.Set("iot1clickdevicesservice", new(iot1clickdevicesservice.DescribeDeviceInput))
	typeRegistry.Set("iot1clickdevicesservice", new(iot1clickdevicesservice.ListDeviceEventsInput))
	typeRegistry.Set("iot1clickdevicesservice", new(iot1clickdevicesservice.ListDevicesInput))
	typeRegistry.Set("iot1clickprojects", new(iot1clickprojects.DescribePlacementInput))
	typeRegistry.Set("iot1clickprojects", new(iot1clickprojects.DescribeProjectInput))
	typeRegistry.Set("iot1clickprojects", new(iot1clickprojects.ListPlacementsInput))
	typeRegistry.Set("iot1clickprojects", new(iot1clickprojects.ListProjectsInput))
	typeRegistry.Set("iotanalytics", new(iotanalytics.DescribeChannelInput))
	typeRegistry.Set("iotanalytics", new(iotanalytics.DescribeDatasetInput))
	typeRegistry.Set("iotanalytics", new(iotanalytics.DescribeDatastoreInput))
	typeRegistry.Set("iotanalytics", new(iotanalytics.DescribeLoggingOptionsInput))
	typeRegistry.Set("iotanalytics", new(iotanalytics.DescribePipelineInput))
	typeRegistry.Set("iotanalytics", new(iotanalytics.ListChannelsInput))
	typeRegistry.Set("iotanalytics", new(iotanalytics.ListDatasetContentsInput))
	typeRegistry.Set("iotanalytics", new(iotanalytics.ListDatasetsInput))
	typeRegistry.Set("iotanalytics", new(iotanalytics.ListDatastoresInput))
	typeRegistry.Set("iotanalytics", new(iotanalytics.ListPipelinesInput))
	typeRegistry.Set("iotanalytics", new(iotanalytics.ListTagsForResourceInput))
	typeRegistry.Set("iotjobsdataplane", new(iotjobsdataplane.DescribeJobExecutionInput))
	typeRegistry.Set("kafka", new(kafka.DescribeClusterInput))
	typeRegistry.Set("kafka", new(kafka.ListClustersInput))
	typeRegistry.Set("kafka", new(kafka.ListNodesInput))
	typeRegistry.Set("kinesis", new(kinesis.DescribeLimitsInput))
	typeRegistry.Set("kinesis", new(kinesis.DescribeStreamInput))
	typeRegistry.Set("kinesis", new(kinesis.DescribeStreamConsumerInput))
	typeRegistry.Set("kinesis", new(kinesis.DescribeStreamSummaryInput))
	typeRegistry.Set("kinesis", new(kinesis.ListShardsInput))
	typeRegistry.Set("kinesis", new(kinesis.ListStreamConsumersInput))
	typeRegistry.Set("kinesis", new(kinesis.ListStreamsInput))
	typeRegistry.Set("kinesis", new(kinesis.ListTagsForStreamInput))
	typeRegistry.Set("kinesisanalytics", new(kinesisanalytics.DescribeApplicationInput))
	typeRegistry.Set("kinesisanalytics", new(kinesisanalytics.ListApplicationsInput))
	typeRegistry.Set("kinesisanalyticsv2", new(kinesisanalyticsv2.DescribeApplicationInput))
	typeRegistry.Set("kinesisanalyticsv2", new(kinesisanalyticsv2.DescribeApplicationSnapshotInput))
	typeRegistry.Set("kinesisanalyticsv2", new(kinesisanalyticsv2.ListApplicationSnapshotsInput))
	typeRegistry.Set("kinesisanalyticsv2", new(kinesisanalyticsv2.ListApplicationsInput))
	typeRegistry.Set("kinesisvideo", new(kinesisvideo.DescribeStreamInput))
	typeRegistry.Set("kinesisvideo", new(kinesisvideo.ListStreamsInput))
	typeRegistry.Set("kinesisvideo", new(kinesisvideo.ListTagsForStreamInput))
	typeRegistry.Set("kinesisvideoarchivedmedia", new(kinesisvideoarchivedmedia.ListFragmentsInput))
	typeRegistry.Set("kms", new(kms.DescribeCustomKeyStoresInput))
	typeRegistry.Set("kms", new(kms.DescribeKeyInput))
	typeRegistry.Set("kms", new(kms.ListAliasesInput))
	typeRegistry.Set("kms", new(kms.ListGrantsInput))
	typeRegistry.Set("kms", new(kms.ListKeyPoliciesInput))
	typeRegistry.Set("kms", new(kms.ListKeysInput))
	typeRegistry.Set("kms", new(kms.ListResourceTagsInput))
	typeRegistry.Set("kms", new(kms.ListRetirableGrantsInput))
	typeRegistry.Set("lambda", new(lambda.ListAliasesInput))
	typeRegistry.Set("lambda", new(lambda.ListEventSourceMappingsInput))
	typeRegistry.Set("lambda", new(lambda.ListFunctionsInput))
	typeRegistry.Set("lambda", new(lambda.ListLayerVersionsInput))
	typeRegistry.Set("lambda", new(lambda.ListLayersInput))
	typeRegistry.Set("lambda", new(lambda.ListTagsInput))
	typeRegistry.Set("lambda", new(lambda.ListVersionsByFunctionInput))
	typeRegistry.Set("licensemanager", new(licensemanager.ListAssociationsForLicenseConfigurationInput))
	typeRegistry.Set("licensemanager", new(licensemanager.ListLicenseConfigurationsInput))
	typeRegistry.Set("licensemanager", new(licensemanager.ListLicenseSpecificationsForResourceInput))
	typeRegistry.Set("licensemanager", new(licensemanager.ListResourceInventoryInput))
	typeRegistry.Set("licensemanager", new(licensemanager.ListTagsForResourceInput))
	typeRegistry.Set("licensemanager", new(licensemanager.ListUsageForLicenseConfigurationInput))
	typeRegistry.Set("machinelearning", new(machinelearning.DescribeBatchPredictionsInput))
	typeRegistry.Set("machinelearning", new(machinelearning.DescribeDataSourcesInput))
	typeRegistry.Set("machinelearning", new(machinelearning.DescribeEvaluationsInput))
	typeRegistry.Set("machinelearning", new(machinelearning.DescribeMLModelsInput))
	typeRegistry.Set("machinelearning", new(machinelearning.DescribeTagsInput))
	typeRegistry.Set("macie", new(macie.ListMemberAccountsInput))
	typeRegistry.Set("macie", new(macie.ListS3ResourcesInput))
	typeRegistry.Set("mediaconnect", new(mediaconnect.DescribeFlowInput))
	typeRegistry.Set("mediaconnect", new(mediaconnect.ListEntitlementsInput))
	typeRegistry.Set("mediaconnect", new(mediaconnect.ListFlowsInput))
	typeRegistry.Set("mediaconvert", new(mediaconvert.DescribeEndpointsInput))
	typeRegistry.Set("mediaconvert", new(mediaconvert.ListJobTemplatesInput))
	typeRegistry.Set("mediaconvert", new(mediaconvert.ListJobsInput))
	typeRegistry.Set("mediaconvert", new(mediaconvert.ListPresetsInput))
	typeRegistry.Set("mediaconvert", new(mediaconvert.ListQueuesInput))
	typeRegistry.Set("mediaconvert", new(mediaconvert.ListTagsForResourceInput))
	typeRegistry.Set("medialive", new(medialive.DescribeChannelInput))
	typeRegistry.Set("medialive", new(medialive.DescribeInputInput))
	typeRegistry.Set("medialive", new(medialive.DescribeInputSecurityGroupInput))
	typeRegistry.Set("medialive", new(medialive.DescribeOfferingInput))
	typeRegistry.Set("medialive", new(medialive.DescribeReservationInput))
	typeRegistry.Set("medialive", new(medialive.DescribeScheduleInput))
	typeRegistry.Set("medialive", new(medialive.ListChannelsInput))
	typeRegistry.Set("medialive", new(medialive.ListInputSecurityGroupsInput))
	typeRegistry.Set("medialive", new(medialive.ListInputsInput))
	typeRegistry.Set("medialive", new(medialive.ListOfferingsInput))
	typeRegistry.Set("medialive", new(medialive.ListReservationsInput))
	typeRegistry.Set("mediapackage", new(mediapackage.DescribeChannelInput))
	typeRegistry.Set("mediapackage", new(mediapackage.DescribeOriginEndpointInput))
	typeRegistry.Set("mediapackage", new(mediapackage.ListChannelsInput))
	typeRegistry.Set("mediapackage", new(mediapackage.ListOriginEndpointsInput))
	typeRegistry.Set("mediastore", new(mediastore.DescribeContainerInput))
	typeRegistry.Set("mediastore", new(mediastore.ListContainersInput))
	typeRegistry.Set("mediastoredata", new(mediastoredata.DescribeObjectInput))
	typeRegistry.Set("mediastoredata", new(mediastoredata.ListItemsInput))
	typeRegistry.Set("mediatailor", new(mediatailor.ListPlaybackConfigurationsInput))
	typeRegistry.Set("migrationhub", new(migrationhub.DescribeApplicationStateInput))
	typeRegistry.Set("migrationhub", new(migrationhub.DescribeMigrationTaskInput))
	typeRegistry.Set("migrationhub", new(migrationhub.ListCreatedArtifactsInput))
	typeRegistry.Set("migrationhub", new(migrationhub.ListDiscoveredResourcesInput))
	typeRegistry.Set("migrationhub", new(migrationhub.ListMigrationTasksInput))
	typeRegistry.Set("migrationhub", new(migrationhub.ListProgressUpdateStreamsInput))
	typeRegistry.Set("mobile", new(mobile.DescribeBundleInput))
	typeRegistry.Set("mobile", new(mobile.DescribeProjectInput))
	typeRegistry.Set("mobile", new(mobile.ListBundlesInput))
	typeRegistry.Set("mobile", new(mobile.ListProjectsInput))
	typeRegistry.Set("mq", new(mq.DescribeBrokerInput))
	typeRegistry.Set("mq", new(mq.DescribeConfigurationInput))
	typeRegistry.Set("mq", new(mq.DescribeConfigurationRevisionInput))
	typeRegistry.Set("mq", new(mq.DescribeUserInput))
	typeRegistry.Set("mq", new(mq.ListBrokersInput))
	typeRegistry.Set("mq", new(mq.ListConfigurationRevisionsInput))
	typeRegistry.Set("mq", new(mq.ListConfigurationsInput))
	typeRegistry.Set("mq", new(mq.ListTagsInput))
	typeRegistry.Set("mq", new(mq.ListUsersInput))
	typeRegistry.Set("mturk", new(mturk.ListAssignmentsForHITInput))
	typeRegistry.Set("mturk", new(mturk.ListBonusPaymentsInput))
	typeRegistry.Set("mturk", new(mturk.ListHITsInput))
	typeRegistry.Set("mturk", new(mturk.ListHITsForQualificationTypeInput))
	typeRegistry.Set("mturk", new(mturk.ListQualificationRequestsInput))
	typeRegistry.Set("mturk", new(mturk.ListQualificationTypesInput))
	typeRegistry.Set("mturk", new(mturk.ListReviewPolicyResultsForHITInput))
	typeRegistry.Set("mturk", new(mturk.ListReviewableHITsInput))
	typeRegistry.Set("mturk", new(mturk.ListWorkerBlocksInput))
	typeRegistry.Set("mturk", new(mturk.ListWorkersWithQualificationTypeInput))
	typeRegistry.Set("neptune", new(neptune.DescribeDBClusterParameterGroupsInput))
	typeRegistry.Set("neptune", new(neptune.DescribeDBClusterParametersInput))
	typeRegistry.Set("neptune", new(neptune.DescribeDBClusterSnapshotAttributesInput))
	typeRegistry.Set("neptune", new(neptune.DescribeDBClusterSnapshotsInput))
	typeRegistry.Set("neptune", new(neptune.DescribeDBClustersInput))
	typeRegistry.Set("neptune", new(neptune.DescribeDBEngineVersionsInput))
	typeRegistry.Set("neptune", new(neptune.DescribeDBInstancesInput))
	typeRegistry.Set("neptune", new(neptune.DescribeDBParameterGroupsInput))
	typeRegistry.Set("neptune", new(neptune.DescribeDBParametersInput))
	typeRegistry.Set("neptune", new(neptune.DescribeDBSubnetGroupsInput))
	typeRegistry.Set("neptune", new(neptune.DescribeEngineDefaultClusterParametersInput))
	typeRegistry.Set("neptune", new(neptune.DescribeEngineDefaultParametersInput))
	typeRegistry.Set("neptune", new(neptune.DescribeEventCategoriesInput))
	typeRegistry.Set("neptune", new(neptune.DescribeEventSubscriptionsInput))
	typeRegistry.Set("neptune", new(neptune.DescribeEventsInput))
	typeRegistry.Set("neptune", new(neptune.DescribeOrderableDBInstanceOptionsInput))
	typeRegistry.Set("neptune", new(neptune.DescribePendingMaintenanceActionsInput))
	typeRegistry.Set("neptune", new(neptune.DescribeValidDBInstanceModificationsInput))
	typeRegistry.Set("neptune", new(neptune.ListTagsForResourceInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeAgentVersionsInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeAppsInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeCommandsInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeDeploymentsInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeEcsClustersInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeElasticIpsInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeElasticLoadBalancersInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeInstancesInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeLayersInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeLoadBasedAutoScalingInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeMyUserProfileInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeOperatingSystemsInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribePermissionsInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeRaidArraysInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeRdsDbInstancesInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeServiceErrorsInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeStackProvisioningParametersInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeStackSummaryInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeStacksInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeTimeBasedAutoScalingInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeUserProfilesInput))
	typeRegistry.Set("opsworks", new(opsworks.DescribeVolumesInput))
	typeRegistry.Set("opsworks", new(opsworks.ListTagsInput))
	typeRegistry.Set("opsworkscm", new(opsworkscm.DescribeAccountAttributesInput))
	typeRegistry.Set("opsworkscm", new(opsworkscm.DescribeBackupsInput))
	typeRegistry.Set("opsworkscm", new(opsworkscm.DescribeEventsInput))
	typeRegistry.Set("opsworkscm", new(opsworkscm.DescribeNodeAssociationStatusInput))
	typeRegistry.Set("opsworkscm", new(opsworkscm.DescribeServersInput))
	typeRegistry.Set("organizations", new(organizations.DescribeAccountInput))
	typeRegistry.Set("organizations", new(organizations.DescribeCreateAccountStatusInput))
	typeRegistry.Set("organizations", new(organizations.DescribeHandshakeInput))
	typeRegistry.Set("organizations", new(organizations.DescribeOrganizationInput))
	typeRegistry.Set("organizations", new(organizations.DescribeOrganizationalUnitInput))
	typeRegistry.Set("organizations", new(organizations.DescribePolicyInput))
	typeRegistry.Set("organizations", new(organizations.ListAWSServiceAccessForOrganizationInput))
	typeRegistry.Set("organizations", new(organizations.ListAccountsInput))
	typeRegistry.Set("organizations", new(organizations.ListAccountsForParentInput))
	typeRegistry.Set("organizations", new(organizations.ListChildrenInput))
	typeRegistry.Set("organizations", new(organizations.ListCreateAccountStatusInput))
	typeRegistry.Set("organizations", new(organizations.ListHandshakesForAccountInput))
	typeRegistry.Set("organizations", new(organizations.ListHandshakesForOrganizationInput))
	typeRegistry.Set("organizations", new(organizations.ListOrganizationalUnitsForParentInput))
	typeRegistry.Set("organizations", new(organizations.ListParentsInput))
	typeRegistry.Set("organizations", new(organizations.ListPoliciesInput))
	typeRegistry.Set("organizations", new(organizations.ListPoliciesForTargetInput))
	typeRegistry.Set("organizations", new(organizations.ListRootsInput))
	typeRegistry.Set("organizations", new(organizations.ListTargetsForPolicyInput))
	typeRegistry.Set("pi", new(pi.DescribeDimensionKeysInput))
	typeRegistry.Set("pinpointemail", new(pinpointemail.ListConfigurationSetsInput))
	typeRegistry.Set("pinpointemail", new(pinpointemail.ListDedicatedIpPoolsInput))
	typeRegistry.Set("pinpointemail", new(pinpointemail.ListDeliverabilityTestReportsInput))
	typeRegistry.Set("pinpointemail", new(pinpointemail.ListEmailIdentitiesInput))
	typeRegistry.Set("polly", new(polly.DescribeVoicesInput))
	typeRegistry.Set("polly", new(polly.ListLexiconsInput))
	typeRegistry.Set("polly", new(polly.ListSpeechSynthesisTasksInput))
	typeRegistry.Set("pricing", new(pricing.DescribeServicesInput))
	typeRegistry.Set("quicksight", new(quicksight.DescribeGroupInput))
	typeRegistry.Set("quicksight", new(quicksight.DescribeUserInput))
	typeRegistry.Set("quicksight", new(quicksight.ListGroupMembershipsInput))
	typeRegistry.Set("quicksight", new(quicksight.ListGroupsInput))
	typeRegistry.Set("quicksight", new(quicksight.ListUserGroupsInput))
	typeRegistry.Set("quicksight", new(quicksight.ListUsersInput))
	typeRegistry.Set("ram", new(ram.ListPrincipalsInput))
	typeRegistry.Set("ram", new(ram.ListResourcesInput))
	typeRegistry.Set("rds", new(rds.DescribeAccountAttributesInput))
	typeRegistry.Set("rds", new(rds.DescribeCertificatesInput))
	typeRegistry.Set("rds", new(rds.DescribeDBClusterBacktracksInput))
	typeRegistry.Set("rds", new(rds.DescribeDBClusterEndpointsInput))
	typeRegistry.Set("rds", new(rds.DescribeDBClusterParameterGroupsInput))
	typeRegistry.Set("rds", new(rds.DescribeDBClusterParametersInput))
	typeRegistry.Set("rds", new(rds.DescribeDBClusterSnapshotAttributesInput))
	typeRegistry.Set("rds", new(rds.DescribeDBClusterSnapshotsInput))
	typeRegistry.Set("rds", new(rds.DescribeDBClustersInput))
	typeRegistry.Set("rds", new(rds.DescribeDBEngineVersionsInput))
	typeRegistry.Set("rds", new(rds.DescribeDBInstanceAutomatedBackupsInput))
	typeRegistry.Set("rds", new(rds.DescribeDBInstancesInput))
	typeRegistry.Set("rds", new(rds.DescribeDBLogFilesInput))
	typeRegistry.Set("rds", new(rds.DescribeDBParameterGroupsInput))
	typeRegistry.Set("rds", new(rds.DescribeDBParametersInput))
	typeRegistry.Set("rds", new(rds.DescribeDBSecurityGroupsInput))
	typeRegistry.Set("rds", new(rds.DescribeDBSnapshotAttributesInput))
	typeRegistry.Set("rds", new(rds.DescribeDBSnapshotsInput))
	typeRegistry.Set("rds", new(rds.DescribeDBSubnetGroupsInput))
	typeRegistry.Set("rds", new(rds.DescribeEngineDefaultClusterParametersInput))
	typeRegistry.Set("rds", new(rds.DescribeEngineDefaultParametersInput))
	typeRegistry.Set("rds", new(rds.DescribeEventCategoriesInput))
	typeRegistry.Set("rds", new(rds.DescribeEventSubscriptionsInput))
	typeRegistry.Set("rds", new(rds.DescribeEventsInput))
	typeRegistry.Set("rds", new(rds.DescribeGlobalClustersInput))
	typeRegistry.Set("rds", new(rds.DescribeOptionGroupOptionsInput))
	typeRegistry.Set("rds", new(rds.DescribeOptionGroupsInput))
	typeRegistry.Set("rds", new(rds.DescribeOrderableDBInstanceOptionsInput))
	typeRegistry.Set("rds", new(rds.DescribePendingMaintenanceActionsInput))
	typeRegistry.Set("rds", new(rds.DescribeReservedDBInstancesInput))
	typeRegistry.Set("rds", new(rds.DescribeReservedDBInstancesOfferingsInput))
	typeRegistry.Set("rds", new(rds.DescribeSourceRegionsInput))
	typeRegistry.Set("rds", new(rds.DescribeValidDBInstanceModificationsInput))
	typeRegistry.Set("rds", new(rds.ListTagsForResourceInput))
	typeRegistry.Set("redshift", new(redshift.DescribeAccountAttributesInput))
	typeRegistry.Set("redshift", new(redshift.DescribeClusterDbRevisionsInput))
	typeRegistry.Set("redshift", new(redshift.DescribeClusterParameterGroupsInput))
	typeRegistry.Set("redshift", new(redshift.DescribeClusterParametersInput))
	typeRegistry.Set("redshift", new(redshift.DescribeClusterSecurityGroupsInput))
	typeRegistry.Set("redshift", new(redshift.DescribeClusterSnapshotsInput))
	typeRegistry.Set("redshift", new(redshift.DescribeClusterSubnetGroupsInput))
	typeRegistry.Set("redshift", new(redshift.DescribeClusterTracksInput))
	typeRegistry.Set("redshift", new(redshift.DescribeClusterVersionsInput))
	typeRegistry.Set("redshift", new(redshift.DescribeClustersInput))
	typeRegistry.Set("redshift", new(redshift.DescribeDefaultClusterParametersInput))
	typeRegistry.Set("redshift", new(redshift.DescribeEventCategoriesInput))
	typeRegistry.Set("redshift", new(redshift.DescribeEventSubscriptionsInput))
	typeRegistry.Set("redshift", new(redshift.DescribeEventsInput))
	typeRegistry.Set("redshift", new(redshift.DescribeHsmClientCertificatesInput))
	typeRegistry.Set("redshift", new(redshift.DescribeHsmConfigurationsInput))
	typeRegistry.Set("redshift", new(redshift.DescribeLoggingStatusInput))
	typeRegistry.Set("redshift", new(redshift.DescribeOrderableClusterOptionsInput))
	typeRegistry.Set("redshift", new(redshift.DescribeReservedNodeOfferingsInput))
	typeRegistry.Set("redshift", new(redshift.DescribeReservedNodesInput))
	typeRegistry.Set("redshift", new(redshift.DescribeResizeInput))
	typeRegistry.Set("redshift", new(redshift.DescribeSnapshotCopyGrantsInput))
	typeRegistry.Set("redshift", new(redshift.DescribeSnapshotSchedulesInput))
	typeRegistry.Set("redshift", new(redshift.DescribeStorageInput))
	typeRegistry.Set("redshift", new(redshift.DescribeTableRestoreStatusInput))
	typeRegistry.Set("redshift", new(redshift.DescribeTagsInput))
	typeRegistry.Set("rekognition", new(rekognition.DescribeCollectionInput))
	typeRegistry.Set("rekognition", new(rekognition.DescribeStreamProcessorInput))
	typeRegistry.Set("rekognition", new(rekognition.ListCollectionsInput))
	typeRegistry.Set("rekognition", new(rekognition.ListFacesInput))
	typeRegistry.Set("rekognition", new(rekognition.ListStreamProcessorsInput))
	typeRegistry.Set("resourcegroups", new(resourcegroups.ListGroupResourcesInput))
	typeRegistry.Set("resourcegroups", new(resourcegroups.ListGroupsInput))
	typeRegistry.Set("robomaker", new(robomaker.DescribeDeploymentJobInput))
	typeRegistry.Set("robomaker", new(robomaker.DescribeFleetInput))
	typeRegistry.Set("robomaker", new(robomaker.DescribeRobotInput))
	typeRegistry.Set("robomaker", new(robomaker.DescribeRobotApplicationInput))
	typeRegistry.Set("robomaker", new(robomaker.DescribeSimulationApplicationInput))
	typeRegistry.Set("robomaker", new(robomaker.DescribeSimulationJobInput))
	typeRegistry.Set("robomaker", new(robomaker.ListDeploymentJobsInput))
	typeRegistry.Set("robomaker", new(robomaker.ListFleetsInput))
	typeRegistry.Set("robomaker", new(robomaker.ListRobotApplicationsInput))
	typeRegistry.Set("robomaker", new(robomaker.ListRobotsInput))
	typeRegistry.Set("robomaker", new(robomaker.ListSimulationApplicationsInput))
	typeRegistry.Set("robomaker", new(robomaker.ListSimulationJobsInput))
	typeRegistry.Set("route53", new(route53.ListGeoLocationsInput))
	typeRegistry.Set("route53", new(route53.ListHealthChecksInput))
	typeRegistry.Set("route53", new(route53.ListHostedZonesInput))
	typeRegistry.Set("route53", new(route53.ListHostedZonesByNameInput))
	typeRegistry.Set("route53", new(route53.ListQueryLoggingConfigsInput))
	typeRegistry.Set("route53", new(route53.ListResourceRecordSetsInput))
	typeRegistry.Set("route53", new(route53.ListReusableDelegationSetsInput))
	typeRegistry.Set("route53", new(route53.ListTagsForResourceInput))
	typeRegistry.Set("route53", new(route53.ListTagsForResourcesInput))
	typeRegistry.Set("route53", new(route53.ListTrafficPoliciesInput))
	typeRegistry.Set("route53", new(route53.ListTrafficPolicyInstancesInput))
	typeRegistry.Set("route53", new(route53.ListTrafficPolicyInstancesByHostedZoneInput))
	typeRegistry.Set("route53", new(route53.ListTrafficPolicyInstancesByPolicyInput))
	typeRegistry.Set("route53", new(route53.ListTrafficPolicyVersionsInput))
	typeRegistry.Set("route53", new(route53.ListVPCAssociationAuthorizationsInput))
	typeRegistry.Set("route53domains", new(route53domains.ListDomainsInput))
	typeRegistry.Set("route53domains", new(route53domains.ListOperationsInput))
	typeRegistry.Set("route53domains", new(route53domains.ListTagsForDomainInput))
	typeRegistry.Set("route53resolver", new(route53resolver.ListResolverEndpointIpAddressesInput))
	typeRegistry.Set("route53resolver", new(route53resolver.ListResolverEndpointsInput))
	typeRegistry.Set("route53resolver", new(route53resolver.ListResolverRuleAssociationsInput))
	typeRegistry.Set("route53resolver", new(route53resolver.ListResolverRulesInput))
	typeRegistry.Set("route53resolver", new(route53resolver.ListTagsForResourceInput))
	typeRegistry.Set("s3", new(s3.ListBucketAnalyticsConfigurationsInput))
	typeRegistry.Set("s3", new(s3.ListBucketInventoryConfigurationsInput))
	typeRegistry.Set("s3", new(s3.ListBucketMetricsConfigurationsInput))
	typeRegistry.Set("s3", new(s3.ListBucketsInput))
	typeRegistry.Set("s3", new(s3.ListMultipartUploadsInput))
	typeRegistry.Set("s3", new(s3.ListObjectVersionsInput))
	typeRegistry.Set("s3", new(s3.ListObjectsInput))
	typeRegistry.Set("s3", new(s3.ListObjectsV2Input))
	typeRegistry.Set("s3", new(s3.ListPartsInput))
	typeRegistry.Set("sagemaker", new(sagemaker.DescribeAlgorithmInput))
	typeRegistry.Set("sagemaker", new(sagemaker.DescribeCodeRepositoryInput))
	typeRegistry.Set("sagemaker", new(sagemaker.DescribeCompilationJobInput))
	typeRegistry.Set("sagemaker", new(sagemaker.DescribeEndpointInput))
	typeRegistry.Set("sagemaker", new(sagemaker.DescribeEndpointConfigInput))
	typeRegistry.Set("sagemaker", new(sagemaker.DescribeHyperParameterTuningJobInput))
	typeRegistry.Set("sagemaker", new(sagemaker.DescribeLabelingJobInput))
	typeRegistry.Set("sagemaker", new(sagemaker.DescribeModelInput))
	typeRegistry.Set("sagemaker", new(sagemaker.DescribeModelPackageInput))
	typeRegistry.Set("sagemaker", new(sagemaker.DescribeNotebookInstanceInput))
	typeRegistry.Set("sagemaker", new(sagemaker.DescribeNotebookInstanceLifecycleConfigInput))
	typeRegistry.Set("sagemaker", new(sagemaker.DescribeSubscribedWorkteamInput))
	typeRegistry.Set("sagemaker", new(sagemaker.DescribeTrainingJobInput))
	typeRegistry.Set("sagemaker", new(sagemaker.DescribeTransformJobInput))
	typeRegistry.Set("sagemaker", new(sagemaker.DescribeWorkteamInput))
	typeRegistry.Set("sagemaker", new(sagemaker.ListAlgorithmsInput))
	typeRegistry.Set("sagemaker", new(sagemaker.ListCodeRepositoriesInput))
	typeRegistry.Set("sagemaker", new(sagemaker.ListCompilationJobsInput))
	typeRegistry.Set("sagemaker", new(sagemaker.ListEndpointConfigsInput))
	typeRegistry.Set("sagemaker", new(sagemaker.ListEndpointsInput))
	typeRegistry.Set("sagemaker", new(sagemaker.ListHyperParameterTuningJobsInput))
	typeRegistry.Set("sagemaker", new(sagemaker.ListLabelingJobsInput))
	typeRegistry.Set("sagemaker", new(sagemaker.ListLabelingJobsForWorkteamInput))
	typeRegistry.Set("sagemaker", new(sagemaker.ListModelPackagesInput))
	typeRegistry.Set("sagemaker", new(sagemaker.ListModelsInput))
	typeRegistry.Set("sagemaker", new(sagemaker.ListNotebookInstanceLifecycleConfigsInput))
	typeRegistry.Set("sagemaker", new(sagemaker.ListNotebookInstancesInput))
	typeRegistry.Set("sagemaker", new(sagemaker.ListSubscribedWorkteamsInput))
	typeRegistry.Set("sagemaker", new(sagemaker.ListTagsInput))
	typeRegistry.Set("sagemaker", new(sagemaker.ListTrainingJobsInput))
	typeRegistry.Set("sagemaker", new(sagemaker.ListTrainingJobsForHyperParameterTuningJobInput))
	typeRegistry.Set("sagemaker", new(sagemaker.ListTransformJobsInput))
	typeRegistry.Set("sagemaker", new(sagemaker.ListWorkteamsInput))
	typeRegistry.Set("secretsmanager", new(secretsmanager.DescribeSecretInput))
	typeRegistry.Set("secretsmanager", new(secretsmanager.ListSecretVersionIdsInput))
	typeRegistry.Set("secretsmanager", new(secretsmanager.ListSecretsInput))
	typeRegistry.Set("securityhub", new(securityhub.ListEnabledProductsForImportInput))
	typeRegistry.Set("securityhub", new(securityhub.ListInvitationsInput))
	typeRegistry.Set("securityhub", new(securityhub.ListMembersInput))
	typeRegistry.Set("serverlessapplicationrepository", new(serverlessapplicationrepository.ListApplicationDependenciesInput))
	typeRegistry.Set("serverlessapplicationrepository", new(serverlessapplicationrepository.ListApplicationVersionsInput))
	typeRegistry.Set("serverlessapplicationrepository", new(serverlessapplicationrepository.ListApplicationsInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.DescribeConstraintInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.DescribeCopyProductStatusInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.DescribePortfolioInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.DescribePortfolioShareStatusInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.DescribeProductInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.DescribeProductAsAdminInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.DescribeProductViewInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.DescribeProvisionedProductInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.DescribeProvisionedProductPlanInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.DescribeProvisioningArtifactInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.DescribeProvisioningParametersInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.DescribeRecordInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.DescribeServiceActionInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.DescribeTagOptionInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.ListAcceptedPortfolioSharesInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.ListConstraintsForPortfolioInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.ListLaunchPathsInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.ListOrganizationPortfolioAccessInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.ListPortfolioAccessInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.ListPortfoliosInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.ListPortfoliosForProductInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.ListPrincipalsForPortfolioInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.ListProvisionedProductPlansInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.ListProvisioningArtifactsInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.ListProvisioningArtifactsForServiceActionInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.ListRecordHistoryInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.ListResourcesForTagOptionInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.ListServiceActionsInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.ListServiceActionsForProvisioningArtifactInput))
	typeRegistry.Set("servicecatalog", new(servicecatalog.ListTagOptionsInput))
	typeRegistry.Set("servicediscovery", new(servicediscovery.ListInstancesInput))
	typeRegistry.Set("servicediscovery", new(servicediscovery.ListNamespacesInput))
	typeRegistry.Set("servicediscovery", new(servicediscovery.ListOperationsInput))
	typeRegistry.Set("servicediscovery", new(servicediscovery.ListServicesInput))
	typeRegistry.Set("ses", new(ses.DescribeActiveReceiptRuleSetInput))
	typeRegistry.Set("ses", new(ses.DescribeConfigurationSetInput))
	typeRegistry.Set("ses", new(ses.DescribeReceiptRuleInput))
	typeRegistry.Set("ses", new(ses.DescribeReceiptRuleSetInput))
	typeRegistry.Set("ses", new(ses.ListConfigurationSetsInput))
	typeRegistry.Set("ses", new(ses.ListCustomVerificationEmailTemplatesInput))
	typeRegistry.Set("ses", new(ses.ListIdentitiesInput))
	typeRegistry.Set("ses", new(ses.ListIdentityPoliciesInput))
	typeRegistry.Set("ses", new(ses.ListReceiptFiltersInput))
	typeRegistry.Set("ses", new(ses.ListReceiptRuleSetsInput))
	typeRegistry.Set("ses", new(ses.ListTemplatesInput))
	typeRegistry.Set("ses", new(ses.ListVerifiedEmailAddressesInput))
	typeRegistry.Set("sfn", new(sfn.DescribeActivityInput))
	typeRegistry.Set("sfn", new(sfn.DescribeExecutionInput))
	typeRegistry.Set("sfn", new(sfn.DescribeStateMachineInput))
	typeRegistry.Set("sfn", new(sfn.DescribeStateMachineForExecutionInput))
	typeRegistry.Set("sfn", new(sfn.ListActivitiesInput))
	typeRegistry.Set("sfn", new(sfn.ListExecutionsInput))
	typeRegistry.Set("sfn", new(sfn.ListStateMachinesInput))
	typeRegistry.Set("sfn", new(sfn.ListTagsForResourceInput))
	typeRegistry.Set("shield", new(shield.DescribeAttackInput))
	typeRegistry.Set("shield", new(shield.DescribeDRTAccessInput))
	typeRegistry.Set("shield", new(shield.DescribeEmergencyContactSettingsInput))
	typeRegistry.Set("shield", new(shield.DescribeProtectionInput))
	typeRegistry.Set("shield", new(shield.DescribeSubscriptionInput))
	typeRegistry.Set("shield", new(shield.ListAttacksInput))
	typeRegistry.Set("shield", new(shield.ListProtectionsInput))
	typeRegistry.Set("signer", new(signer.DescribeSigningJobInput))
	typeRegistry.Set("signer", new(signer.ListSigningJobsInput))
	typeRegistry.Set("signer", new(signer.ListSigningPlatformsInput))
	typeRegistry.Set("signer", new(signer.ListSigningProfilesInput))
	typeRegistry.Set("simpledb", new(simpledb.ListDomainsInput))
	typeRegistry.Set("sms", new(sms.ListAppsInput))
	typeRegistry.Set("snowball", new(snowball.DescribeAddressInput))
	typeRegistry.Set("snowball", new(snowball.DescribeAddressesInput))
	typeRegistry.Set("snowball", new(snowball.DescribeClusterInput))
	typeRegistry.Set("snowball", new(snowball.DescribeJobInput))
	typeRegistry.Set("snowball", new(snowball.ListClusterJobsInput))
	typeRegistry.Set("snowball", new(snowball.ListClustersInput))
	typeRegistry.Set("snowball", new(snowball.ListCompatibleImagesInput))
	typeRegistry.Set("snowball", new(snowball.ListJobsInput))
	typeRegistry.Set("sns", new(sns.ListEndpointsByPlatformApplicationInput))
	typeRegistry.Set("sns", new(sns.ListPhoneNumbersOptedOutInput))
	typeRegistry.Set("sns", new(sns.ListPlatformApplicationsInput))
	typeRegistry.Set("sns", new(sns.ListSubscriptionsInput))
	typeRegistry.Set("sns", new(sns.ListSubscriptionsByTopicInput))
	typeRegistry.Set("sns", new(sns.ListTopicsInput))
	typeRegistry.Set("sqs", new(sqs.ListDeadLetterSourceQueuesInput))
	typeRegistry.Set("sqs", new(sqs.ListQueueTagsInput))
	typeRegistry.Set("sqs", new(sqs.ListQueuesInput))
	typeRegistry.Set("ssm", new(ssm.DescribeActivationsInput))
	typeRegistry.Set("ssm", new(ssm.DescribeAssociationInput))
	typeRegistry.Set("ssm", new(ssm.DescribeAssociationExecutionTargetsInput))
	typeRegistry.Set("ssm", new(ssm.DescribeAssociationExecutionsInput))
	typeRegistry.Set("ssm", new(ssm.DescribeAutomationExecutionsInput))
	typeRegistry.Set("ssm", new(ssm.DescribeAutomationStepExecutionsInput))
	typeRegistry.Set("ssm", new(ssm.DescribeAvailablePatchesInput))
	typeRegistry.Set("ssm", new(ssm.DescribeDocumentInput))
	typeRegistry.Set("ssm", new(ssm.DescribeDocumentPermissionInput))
	typeRegistry.Set("ssm", new(ssm.DescribeEffectiveInstanceAssociationsInput))
	typeRegistry.Set("ssm", new(ssm.DescribeEffectivePatchesForPatchBaselineInput))
	typeRegistry.Set("ssm", new(ssm.DescribeInstanceAssociationsStatusInput))
	typeRegistry.Set("ssm", new(ssm.DescribeInstanceInformationInput))
	typeRegistry.Set("ssm", new(ssm.DescribeInstancePatchStatesInput))
	typeRegistry.Set("ssm", new(ssm.DescribeInstancePatchStatesForPatchGroupInput))
	typeRegistry.Set("ssm", new(ssm.DescribeInstancePatchesInput))
	typeRegistry.Set("ssm", new(ssm.DescribeInventoryDeletionsInput))
	typeRegistry.Set("ssm", new(ssm.DescribeMaintenanceWindowExecutionTaskInvocationsInput))
	typeRegistry.Set("ssm", new(ssm.DescribeMaintenanceWindowExecutionTasksInput))
	typeRegistry.Set("ssm", new(ssm.DescribeMaintenanceWindowExecutionsInput))
	typeRegistry.Set("ssm", new(ssm.DescribeMaintenanceWindowScheduleInput))
	typeRegistry.Set("ssm", new(ssm.DescribeMaintenanceWindowTargetsInput))
	typeRegistry.Set("ssm", new(ssm.DescribeMaintenanceWindowTasksInput))
	typeRegistry.Set("ssm", new(ssm.DescribeMaintenanceWindowsInput))
	typeRegistry.Set("ssm", new(ssm.DescribeMaintenanceWindowsForTargetInput))
	typeRegistry.Set("ssm", new(ssm.DescribeParametersInput))
	typeRegistry.Set("ssm", new(ssm.DescribePatchBaselinesInput))
	typeRegistry.Set("ssm", new(ssm.DescribePatchGroupStateInput))
	typeRegistry.Set("ssm", new(ssm.DescribePatchGroupsInput))
	typeRegistry.Set("ssm", new(ssm.DescribeSessionsInput))
	typeRegistry.Set("ssm", new(ssm.ListAssociationVersionsInput))
	typeRegistry.Set("ssm", new(ssm.ListAssociationsInput))
	typeRegistry.Set("ssm", new(ssm.ListCommandInvocationsInput))
	typeRegistry.Set("ssm", new(ssm.ListCommandsInput))
	typeRegistry.Set("ssm", new(ssm.ListComplianceItemsInput))
	typeRegistry.Set("ssm", new(ssm.ListComplianceSummariesInput))
	typeRegistry.Set("ssm", new(ssm.ListDocumentVersionsInput))
	typeRegistry.Set("ssm", new(ssm.ListDocumentsInput))
	typeRegistry.Set("ssm", new(ssm.ListInventoryEntriesInput))
	typeRegistry.Set("ssm", new(ssm.ListResourceComplianceSummariesInput))
	typeRegistry.Set("ssm", new(ssm.ListResourceDataSyncInput))
	typeRegistry.Set("ssm", new(ssm.ListTagsForResourceInput))
	typeRegistry.Set("storagegateway", new(storagegateway.DescribeBandwidthRateLimitInput))
	typeRegistry.Set("storagegateway", new(storagegateway.DescribeCacheInput))
	typeRegistry.Set("storagegateway", new(storagegateway.DescribeCachediSCSIVolumesInput))
	typeRegistry.Set("storagegateway", new(storagegateway.DescribeChapCredentialsInput))
	typeRegistry.Set("storagegateway", new(storagegateway.DescribeGatewayInformationInput))
	typeRegistry.Set("storagegateway", new(storagegateway.DescribeMaintenanceStartTimeInput))
	typeRegistry.Set("storagegateway", new(storagegateway.DescribeNFSFileSharesInput))
	typeRegistry.Set("storagegateway", new(storagegateway.DescribeSMBFileSharesInput))
	typeRegistry.Set("storagegateway", new(storagegateway.DescribeSMBSettingsInput))
	typeRegistry.Set("storagegateway", new(storagegateway.DescribeSnapshotScheduleInput))
	typeRegistry.Set("storagegateway", new(storagegateway.DescribeStorediSCSIVolumesInput))
	typeRegistry.Set("storagegateway", new(storagegateway.DescribeTapeArchivesInput))
	typeRegistry.Set("storagegateway", new(storagegateway.DescribeTapeRecoveryPointsInput))
	typeRegistry.Set("storagegateway", new(storagegateway.DescribeTapesInput))
	typeRegistry.Set("storagegateway", new(storagegateway.DescribeUploadBufferInput))
	typeRegistry.Set("storagegateway", new(storagegateway.DescribeVTLDevicesInput))
	typeRegistry.Set("storagegateway", new(storagegateway.DescribeWorkingStorageInput))
	typeRegistry.Set("storagegateway", new(storagegateway.ListFileSharesInput))
	typeRegistry.Set("storagegateway", new(storagegateway.ListGatewaysInput))
	typeRegistry.Set("storagegateway", new(storagegateway.ListLocalDisksInput))
	typeRegistry.Set("storagegateway", new(storagegateway.ListTagsForResourceInput))
	typeRegistry.Set("storagegateway", new(storagegateway.ListTapesInput))
	typeRegistry.Set("storagegateway", new(storagegateway.ListVolumeInitiatorsInput))
	typeRegistry.Set("storagegateway", new(storagegateway.ListVolumeRecoveryPointsInput))
	typeRegistry.Set("storagegateway", new(storagegateway.ListVolumesInput))
	typeRegistry.Set("support", new(support.DescribeAttachmentInput))
	typeRegistry.Set("support", new(support.DescribeCasesInput))
	typeRegistry.Set("support", new(support.DescribeCommunicationsInput))
	typeRegistry.Set("support", new(support.DescribeServicesInput))
	typeRegistry.Set("support", new(support.DescribeSeverityLevelsInput))
	typeRegistry.Set("support", new(support.DescribeTrustedAdvisorCheckRefreshStatusesInput))
	typeRegistry.Set("support", new(support.DescribeTrustedAdvisorCheckResultInput))
	typeRegistry.Set("support", new(support.DescribeTrustedAdvisorCheckSummariesInput))
	typeRegistry.Set("support", new(support.DescribeTrustedAdvisorChecksInput))
	typeRegistry.Set("swf", new(swf.DescribeActivityTypeInput))
	typeRegistry.Set("swf", new(swf.DescribeDomainInput))
	typeRegistry.Set("swf", new(swf.DescribeWorkflowExecutionInput))
	typeRegistry.Set("swf", new(swf.DescribeWorkflowTypeInput))
	typeRegistry.Set("swf", new(swf.ListActivityTypesInput))
	typeRegistry.Set("swf", new(swf.ListClosedWorkflowExecutionsInput))
	typeRegistry.Set("swf", new(swf.ListDomainsInput))
	typeRegistry.Set("swf", new(swf.ListOpenWorkflowExecutionsInput))
	typeRegistry.Set("swf", new(swf.ListWorkflowTypesInput))
	typeRegistry.Set("transcribeservice", new(transcribeservice.ListTranscriptionJobsInput))
	typeRegistry.Set("transcribeservice", new(transcribeservice.ListVocabulariesInput))
	typeRegistry.Set("transfer", new(transfer.DescribeServerInput))
	typeRegistry.Set("transfer", new(transfer.DescribeUserInput))
	typeRegistry.Set("transfer", new(transfer.ListServersInput))
	typeRegistry.Set("transfer", new(transfer.ListTagsForResourceInput))
	typeRegistry.Set("transfer", new(transfer.ListUsersInput))
	typeRegistry.Set("translate", new(translate.ListTerminologiesInput))
	typeRegistry.Set("waf", new(waf.ListActivatedRulesInRuleGroupInput))
	typeRegistry.Set("waf", new(waf.ListByteMatchSetsInput))
	typeRegistry.Set("waf", new(waf.ListGeoMatchSetsInput))
	typeRegistry.Set("waf", new(waf.ListIPSetsInput))
	typeRegistry.Set("waf", new(waf.ListLoggingConfigurationsInput))
	typeRegistry.Set("waf", new(waf.ListRateBasedRulesInput))
	typeRegistry.Set("waf", new(waf.ListRegexMatchSetsInput))
	typeRegistry.Set("waf", new(waf.ListRegexPatternSetsInput))
	typeRegistry.Set("waf", new(waf.ListRuleGroupsInput))
	typeRegistry.Set("waf", new(waf.ListRulesInput))
	typeRegistry.Set("waf", new(waf.ListSizeConstraintSetsInput))
	typeRegistry.Set("waf", new(waf.ListSqlInjectionMatchSetsInput))
	typeRegistry.Set("waf", new(waf.ListSubscribedRuleGroupsInput))
	typeRegistry.Set("waf", new(waf.ListWebACLsInput))
	typeRegistry.Set("waf", new(waf.ListXssMatchSetsInput))
	typeRegistry.Set("wafregional", new(wafregional.ListActivatedRulesInRuleGroupInput))
	typeRegistry.Set("wafregional", new(wafregional.ListByteMatchSetsInput))
	typeRegistry.Set("wafregional", new(wafregional.ListGeoMatchSetsInput))
	typeRegistry.Set("wafregional", new(wafregional.ListIPSetsInput))
	typeRegistry.Set("wafregional", new(wafregional.ListLoggingConfigurationsInput))
	typeRegistry.Set("wafregional", new(wafregional.ListRateBasedRulesInput))
	typeRegistry.Set("wafregional", new(wafregional.ListRegexMatchSetsInput))
	typeRegistry.Set("wafregional", new(wafregional.ListRegexPatternSetsInput))
	typeRegistry.Set("wafregional", new(wafregional.ListResourcesForWebACLInput))
	typeRegistry.Set("wafregional", new(wafregional.ListRuleGroupsInput))
	typeRegistry.Set("wafregional", new(wafregional.ListRulesInput))
	typeRegistry.Set("wafregional", new(wafregional.ListSizeConstraintSetsInput))
	typeRegistry.Set("wafregional", new(wafregional.ListSqlInjectionMatchSetsInput))
	typeRegistry.Set("wafregional", new(wafregional.ListSubscribedRuleGroupsInput))
	typeRegistry.Set("wafregional", new(wafregional.ListWebACLsInput))
	typeRegistry.Set("wafregional", new(wafregional.ListXssMatchSetsInput))
	typeRegistry.Set("workdocs", new(workdocs.DescribeActivitiesInput))
	typeRegistry.Set("workdocs", new(workdocs.DescribeCommentsInput))
	typeRegistry.Set("workdocs", new(workdocs.DescribeDocumentVersionsInput))
	typeRegistry.Set("workdocs", new(workdocs.DescribeFolderContentsInput))
	typeRegistry.Set("workdocs", new(workdocs.DescribeGroupsInput))
	typeRegistry.Set("workdocs", new(workdocs.DescribeNotificationSubscriptionsInput))
	typeRegistry.Set("workdocs", new(workdocs.DescribeResourcePermissionsInput))
	typeRegistry.Set("workdocs", new(workdocs.DescribeRootFoldersInput))
	typeRegistry.Set("workdocs", new(workdocs.DescribeUsersInput))
	typeRegistry.Set("workmail", new(workmail.DescribeGroupInput))
	typeRegistry.Set("workmail", new(workmail.DescribeOrganizationInput))
	typeRegistry.Set("workmail", new(workmail.DescribeResourceInput))
	typeRegistry.Set("workmail", new(workmail.DescribeUserInput))
	typeRegistry.Set("workmail", new(workmail.ListAliasesInput))
	typeRegistry.Set("workmail", new(workmail.ListGroupMembersInput))
	typeRegistry.Set("workmail", new(workmail.ListGroupsInput))
	typeRegistry.Set("workmail", new(workmail.ListMailboxPermissionsInput))
	typeRegistry.Set("workmail", new(workmail.ListOrganizationsInput))
	typeRegistry.Set("workmail", new(workmail.ListResourceDelegatesInput))
	typeRegistry.Set("workmail", new(workmail.ListResourcesInput))
	typeRegistry.Set("workmail", new(workmail.ListUsersInput))
	typeRegistry.Set("workspaces", new(workspaces.DescribeAccountInput))
	typeRegistry.Set("workspaces", new(workspaces.DescribeAccountModificationsInput))
	typeRegistry.Set("workspaces", new(workspaces.DescribeClientPropertiesInput))
	typeRegistry.Set("workspaces", new(workspaces.DescribeIpGroupsInput))
	typeRegistry.Set("workspaces", new(workspaces.DescribeTagsInput))
	typeRegistry.Set("workspaces", new(workspaces.DescribeWorkspaceBundlesInput))
	typeRegistry.Set("workspaces", new(workspaces.DescribeWorkspaceDirectoriesInput))
	typeRegistry.Set("workspaces", new(workspaces.DescribeWorkspaceImagesInput))
	typeRegistry.Set("workspaces", new(workspaces.DescribeWorkspacesInput))
	typeRegistry.Set("workspaces", new(workspaces.DescribeWorkspacesConnectionStatusInput))
	typeRegistry.Set("workspaces", new(workspaces.ListAvailableManagementCidrRangesInput))
	runtime.GC()
}
